%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 1.1/AG 1.1 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:18:13 2017
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular MSBM10
%%+ LMMathItalic12-Regular wasy10 LMMathSymbols10-Regular
%%+ LMMathItalic8-Regular LMRoman8-Regular LMRoman10-Regular
%%+ LMRoman6-Regular LMMathSymbols8-Regular
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 1.1/AG 1.1 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0816
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E32850F0148
68E0A1D795937E61D4556BCDFB7F4DA63A884F9B4B07801D30B1357C3432D6D4
7B72B7D6040410C194EE5124ADFD7A40914BF569EA1F9CA8C8897E839D262395
5EDB3E97C591A3A5927DAC229EEE864B8C0F79ADBF88C0E6C41CC70D9010F07C
1CF9C05960E34FABB6C5DA4D789E39F35FE01F0B22BD9C63B3098457716D6B22
5EFCD0A960F3A2319252C7A0F73A4770E056209C14D721A714D713D5F2BFAB32
EBF815DDDE792B2556A87C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman6-Regular
%!PS-AdobeFont-1.0: LMRoman6-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman6-Regular known{/LMRoman6-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman6-Regular)readonly def
/FamilyName(LMRoman6)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -88 def
/UnderlineThickness 31 def
end readonly def
/FontName /LMRoman6-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-515 -298 1647 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF386043BC0B77B47F761487099
F3EE8B97E5F18DCAE51B94317C8F4DECC130CEC55EE16A19C81D4D1668127C7B
86C63787AA273CDA19F2DCE459A6BDCED90E3C60B9F7DA6A0715D2D12F8B805A
5203A948442C2E5796D5CD20544385DB0893AB62040E1E7F33167592F1944E2A
AF140EB52E80AC868A5E53B529B98C77E46244F0B9D46A2FBA3E0040CF5A1D5B
8CF20FDE7C876B9AF4A5F6798ED83E56E985DC30EE5A3B2D5EA30F640DA2DB67
1783F69DA070954570F579C316046D8A6B7EEEBAC73F338A8B7D40470B4468D8
CD9BA8B731E8581C69A41FE873D6ECF58F4962AB44706743806BDB909276EE0E
99E10A530147C9C14638387F89B169CCEA629DE9AEBC010589EE04588A992E08
30B37AB3DF923029B8F6BF19C1C728797AEB5C0F2044753BA4C7D1437E2B9B1B
3DAE6A15672EF1F238D1AB8F873DBF5264D704FB19F5C1CFA0E5168002B3741F
0134E79412F5B0AFABBF3069460C10225E6F7BADE64F07074C9D594F6F7514CA
5B8A7750FAF214600FB248AD5E8D9FF734EE44CA79A585268A06C6FD4E294257
0F814FAE80C1A7776ACFE85D3159ED173F8C4EF0456171564E9A2E1C26464408
16B747D137D37316A340FB72BC005029A06DF8BA48E9AACDF832BA2745C448E7
9225CE3A522B46E18F5733663105D638E571758C9E8D9121EE819E4A12676318
11F0C568B81E1502A5D168139F197F7A71FE60CCB05063C6D9D8A0048E60F9C9
5CFFF69AFB554B3534796218449D2BB97FE15BD1A6FF104BF67F8EBA5C3C39B0
24ADAC78AC4FF61D5847F0A110651F4370133E3968EE80FF9C2E54953EDACCBA
2549852043B5A93B09ACDFD025365A4F8FBA3FCC4DB60700C22ECDF23E95E01A
4C7B87E4F5D46CD2AEF5D46CD2180E4304BB80E17A83397A677D32DEED9BC850
B4C056641799994DEBD48FC73D616143FFB85D78805A95B8CB191C775A2DDEB5
FC8B803AC7B461E0FB63D746090AC3E759366E115437A8EA8CD328F309EC0960
36351451AE7425A26CDC319A31BDE48F68B947574C1DB2834483C460A5B2429A
D49BD462D9C9F75FBA92ABD47A5EF18C3A43B9B7A3D1EF1AA43A6A68E4D42CDD
2484CF47C0FB3A68121F424FA4B29058841D9821D7F955D3824CB1754278E8D5
847116509B7D3B960EE375F1DCCB4CAA1CCCDFA0E61FE01518738F7E6B887898
261117EDC211226EB3A9E0B251FD4CF4FD2543B7E6F394D3D262DDCE224AD9CD
BDE8CDCEAF38C0BC9E406A35F44C6B412ABEC730D9DE3716C5B0A87BC7ED856A
77E3AEEB9912B64A5298C2F4552CECF63C84F805508C4A0CB98910441699B722
2BE7727547825EFBCA21408C5F84E3E7781B5BA336E0CF740BE6D85F8F6F8631
BDB1D0AC05ABE2EFAABC930F472F93E247E29CD9852001BD2E16E51AE3E1A77D
4B05540EDA577F3759A940D23E73451C967666B5EE5CC6EDDB55CFD4CD875072
FF79F4ABDD8F935A11E83F9D6F40978896B8F7A0B472D1F9FFC68F7C2F5EB1DD
447832B4E1DBA7870A949E48C9DA6B47BA581F7D24C5A0B90A66F0FFC044D1E8
0652D0836E0FF5980A50D39360DC793D9C260F9A68379C031C3F363054F84888
CA17948C9FB31CF86E555B4815AA6C826666025BB984A519FCED4498E4A4CD61
BDDA5F652B54A3270DFE501ABDEAB9327E296740F0DD9B42A45879E285C8E0D2
DD61A71643555DD007B6477A05334C6D7D079DB00F337979DA04BBD485BD5630
0DA794E86C9815AB3FEB37E78106CA0A3441735AAC9EB49CCA33DF4322929D86
32C4BD136C89169D45718A88BABCB2844362B0652A6345C6EC83DFEFE0994552
32455B3CC14F0D2FE83F60403C598F8E360AFD7C3A3F37E771BF49F20E7ADF22
AE9612796DEB9138059A4C12D4A8B8A37DCC221CE80014F807A53945E21FB479
4956F9E37B87EAE0447EDADEB00764A38DAB429277B779104D1360C711A40FE7
FE508CDB795A3BFDCC677893634CF91C45816B9AC1146B1BB7AAA74FF92F4273
B18D515086F457B5AEBA634AE5C75971733044D64738F071F82148EC95F4E53F
D20E5A2A4479D59A73A9D61F3E4E4894BB92AAF0AE56AF9ABB385D300EAA72C4
388B62E7C32A29313EAAB849169FE98FF9B3CFDF3FC9692113CC15C94DDD2940
49748B473FD5F4AE9C34F0554E0BAA2290B2082F996026ADC420C676AD59744E
3D1C8132F311B70AE10E12E863CF044F38542BB9CEFC017BAA8166A39AD8117B
F368B91934BC6F0BB1B2E7C4F285F9BD614A00DE6825572189A19315AD397814
2E2E61CCC0992B66DA71D8BE22836E6DE06A54674E34DC85646396AA84DF28CF
38994138E0F4E0A3F1604049D39F50717E4670442DBC451B029ED37E22709B8C
11F4DC6A1EE18BFA4AEB8E8FCF1565480CC3C141D6375466FA0272B67393DCBD
86FE4CD039BB44D2BEC68717E95B7597AD7CACDA2A6A4E8808BDF0ABA0997D0E
DBD2BA7C8586E942973B8ADC21BA304ABB619E86CEF1C8D3D84C9892F62613F3
FC722D561C0B4D707CFD45E588F7F0CEA7717976FBB04E6A3577A2141CB8A8CB
6EA47F3B1F8BB5B13D7B90A4F95E54057A005AAEDAD9D7CEBA399B3FDFF494D7
8EEF9EC6AEEC046812CE43B02B9A8F4A127E7C98CF0C088786119EB7E0E7EB32
C428F531FF5E355D691E098D1FB67AEC40458600B1A87AE31E65B7EFE7B1CB02
5613E53340E473C1D5495826470F3A1F450D1AC2C81C876EDB818BA0919DEF1D
3F443A32A724A003C23DE44D0A1774265B27B89FAD2A00A0F8325EF3029125BF
0C973EE91DB8A81E4164F827F359A4630C2955964D0D808BE8D16D2EBCD7AD30
50E68B2F5B879433A41FCA23CE3D342D8157822D42F334B8793F13FB6797C5E5
249834816FEB195E5FB218CCB914449B44FB92C6E63D1999EE615767510AADA4
364CC2035DB3CD08B107110C866C7FC5A1A8A411A597335E6BCB62888AC8539B
369E5FE68D9DEA3C0DBCF7C332C1413109E975BFFF13E7D0BA8720C1A7936015
028480F2CE7EE814B92E5BFEFF479612753E3B373D0E5E288AC7CC5D3A751095
4895B6583129FB837AFE9E5EA65226535F722426F039917C6C2E033240C86703
508D2380278FB9B8E12B455199E01A4C7B87E4F5D4EC84E9D21FC68D0D1359FC
7996DB1B6A97E165EADC6CE23BD6CB9700745AF7FB6DF76A2251C779DBF0649F
15D26FD05EB16A7702D79D42364FC91AC88F98EE11E8609E02E01CE344598BF6
B0D1B1310C75AC850FB4C642FA3710C2C9905F224C87890C9DA4E53930BBDB54
CA2AEF866BDC2071045C3D71BAB3CF386AE54D6D57ECEEF7A86A51787478FAF7
EDF2347DFCB070CF8E3093B06D0B80CED641940DD7A92B277C63B178F5E81127
0F2F4E4FB0360E4923BF1A75C78A77CE2BB4368A7C8F48639FC3A0BF18262068
E043BAFA2CCBCACE0875E368521C0D91FF9ABF781BD5C69282459F75ADA02D7E
D5D348F7CB99C78CFD41D054B08B9AD11A4F25CE3652A01C7033683D9A1ADF85
5A6BEFC921B4896D04E61B913B6C417E0AF5A4EB59A67192BCA9ED8B4D70ACD4
EFFD55C41DD3831AD6161DCDD67FFB74C773637429CB45EB3EC279B505D8299B
2AAA7A05FCEF74AADC754D33163A47C93361B58F38ACBE8868CC263D0793FD51
0BEFD0B8DED7C00CD9A60AEBBA3FADDCA48E2745359AE31AEDB60F54D334C1FB
8CE7C6CFA4536829527A871675F108B3A973CC43AFC2BE532ED012C3EB58266C
BEEBFEAE16F228285B627BE31FE6BEC3F374AE853CB3E511385FDD62F98D8CAA
ECD64C7D8468DA6DCF2767A73AF89279E81D9CE04C5C360D7677FEFC0BC3255F
01003FBC34C53EEDB7645170A6A6B6C1A85D0058926158D713B29EF1F9D60352
A41DBE68A7816F315788F094FF4AF02F686A3D22F12830D995534A8D82E4B822
F07B115CAEA24F19126C17DD16A3913F27F12C896BDE5C6BFFB9251338B976C4
056DFB27F053921193C59DB289A4188A942F2D2D868F92B8459BCB9EF09ED7B5
2B92B00BCC6ED4FE1BC82E285FD99B6CC9808D4BF6C5E91C51725CC94A1958AA
70AE9037BAF2779ED8034237F25540F71DF81701B07933495A954F676F7DFA49
F81BA6B221FAB4FF6EAB642A91F1947AAB4A780D034BC00B16D7C4D77CA1AAE7
242CE5BE6A645C2653FE55D062B786BC3C6651B6A1CD604A45763B67768AC526
1DF9C7E081A7F60049B5EE91E7C3F3F02E3B8751E078517F614A52C9CF58B49C
1D1550F2589FE68B29179A3E97A3F0B35A3FE8DF5B26B0E8BABDC5FCEE3EB404
54892CE429C3ECA8635B7A013061A8BB2B0EB98CD8674AB5A33FB9835B0D1EB4
B6F550DC77164C5F6B43342A87FF745965DC919A12B63D7058BD4F4BD90D4EC8
361D3DF55B5BF4BE1765CD19CAB0F92A94AD2E091DD7659A4DE4DE812FC92035
4999BE909721075D1D40A984E6E75ABA2F4AF1A7D59300C44EF44E7060A9FBF7
B5252C0274C581A2005CB515170BEC2C09C3EEF80AF06A0B3E3A704A3B79B914
B6737628E56BCA749F4720DE9195E8559ACAD8346F7BD9DED0B9584FED157922
B29CC828ADD9B2582CF6C3178700E56D15B3AB9AFAA3E9D10D4B47F75D05CE2D
81DB06B129721A9135C29F9C2C2C9C3FC2897183D705A37702223D1466A03D24
67AD61286FBBAA4725D698612300458A151C340BA68A9106225ACDC6D829F002
A20624B2659A7011A9657AC8B869C2FEB82AD03AF067FC6D600734F59939234A
15ED0A6402505729BEDFA52397A053B37ECC29D2E0AA06A2BF72DB85657F4A35
58D4585AD1918E86DAACB86054F56F7394088DC50A1C1FC14A0F8E5003D4703A
071AAA2FB6B31D984F0072AA303D33D5478995B533818649CC62032B5D3A3F48
0437323E1DFE2E69212EAA61EA27F9EA185D6B4A80C1BFA827E4F15E623A96FA
4C467943C618A5E35267223F46AB148E74D8D1B986B2EBAE55077A0E54BA5F4E
CA8379F7F7BFD9CD497E66CBE3728B6CC761E56E90A48FDBEA688E80FA438D78
057EA80AF988C8767E67C90E0CCB24824503570117323252722787576A552F56
5387D8D2176685B1A58609AEC90E71132EABB4AF737A7AB1D63393DB4A3AADCA
389CE1ACBF20AE2FB1EB4802C331780943D1C667EAC9A01B6176AD76F2D3E88E
98A5679207C76C999903969568B43673A80D0C5108E8116E5F5C2F25A54FE587
E55C037EDF4C9BC1D95FD0DE382839AE8C789A6339F7D36DAFE163824896DC2C
78FC9DF1F980D05D8533158A7D1941871D0016ED45EA05983F88B9E7E3262FB0
36E1F51B26BFCAC3915932A9CD8EA9FC589975823965AA4D2FC6AE27B27A17C5
10EB9072FFAE0685C7C24E70ACB8564454277C41C28075ABDC428D3809A6BD65
49A52A6AE38C80AFB8C867AF2D6B55B800BE51509F685173FC157CA62976128D
48E72C15E739FA6D2412BFB5783DB3C0F6D60E34BE594B65D769B6340202E77B
33EC7CF4718DD267EEFF4C0000F2F317ADB833E0D0DDA4D02A93E18795A8AA1D
4994D871C6C5B81488F425782658BDAF63E8792D79340D223C92CC01B7E355BD
A077E525640CF211E7A3B8DB7BF746E85C18EC1FCF0C423A86C57CBAE8F9F82E
65EDBCCB17469C47E7B6B66DC8BDB8552BA01AEE38E1205B077C2F2C646FEE57
99A02E0F53322EEE450F6DC39A4F03032CCA7A8320F6B01B4C39C37DE56BA266
2E21344E73C74148C1ECA7D4F858CE686804C3F119899F5BB3DC8DE39690B59F
D2708ACEE9F19DCDFC2F1E54AD17895F81828655204581AF0B98038CA5F5DFF5
D325975F280CDE4402EC81ED6EE1D304C8D933CDDB280F05DD157E37A6EB7BB4
51424B682DB6CE16E840BD0577CD58A2FC5B7D170AAA239E07DF91A1C10223AF
53A16B1DCD7C5DF152E571C9E7318117E3200AEF170495FC898F22ECC3CBC849
8CF1AED08F797E67C90E0CCB24824503570117323252722787576F4CF1A672DA
6A04C28C460DA2A483E9826D8813326765D2A528C6A92646975A56E261E3C169
37CEA1C949ACC063FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EF4676BE
5E02D7DC4613C87ABA83D059ED0635D5874A3671EC6B08F2A0B3374650DBA970
A8893D25DCBEDF56ADA1D011C03BFC4D497466C7F09105A287FB8C8D3083CAEC
5B4F7B332E904266FCB27950759D9DF1DC35FC7A9C4C4799419A851AF73C1978
E6ADEA42A238CF1150B5BA091FD30CB05C0AAC0D6FD8486C034DF78B77054829
D7A079D7BD85B9A80845B563220566FEB8F341AACA7DF6DA060ACF1112FA31D1
0565B2B293E7A6C09E2E8FBD459825415B084F754454ACBF44DCF4961F68DBB0
644E77613C9E96ACB55A77DF4812D900F42AF9770E51EC98088D8FC81C7A93EC
9FC3BB5BDA3619E904570286AF49CEAEEAAEEE0AC1EDF4DC2F53275011EE991A
A96DDF4C96A9E0D8E354195A2563759DFE0183C8D67B449516EEB59F22B42BE3
2D7B1631DD1E36137B9C75F2C99248D4FB86CB367BB50ACF8FBB2C8A2EDB17FF
267D0F21C35BE86E068F98C3564F42D2F7F26014DE37C4DCCB6B30860F43089C
0A6E1E7B4D9287CE71718F81073EBCBB4386C5F4957F220CDFF1BA5AFF56910C
49B957170DFE24CEF8234658524B0071B5582DB34872C321F5D6A82C3B0AF842
D748E7160373CAD07AAE053155493BC317F89A8940552EAC2159B49C1DB34B25
67B50D0B0F2BAB32DD9D471FDFBE9B4D20B0BE8BBE3C1A5459A27799E63F136D
C58DA8682674E24838BF99B06FA68C91E1797DB85D924C037C275BD496F93E01
565EF63E388BFB5372277A752C858F67901B52715557491B4DED0A19A1E6464D
99B41FC0AC101E91B84180444A0A928894F8FCA116CFFFF88C6F1C7BF34A0E25
EFB2AD7503D23492E7E980B2C4324A4918DD087768EC44A893A7EECB6D95C35B
B87DA2B112A3E5F0257A53249617F3F4D9F5729FC7C25090211470F9D3B10BF7
FE4019611CC67279792C59C002037F13240A333B2039FDA78228FF7FFF776789
5FB02F823B2CAEFB944B42D689B020B11D38ADCBDC1AD716F75A2C6565B6D04F
A90E615D06A805EF2EA704243FB382621C005388966DBE3F4C2EC9888B56E962
41D345CBE471FFB3B78C4FA50EF1BEBA5095045ABA7952457E62E4081D5CA62F
44DC287DAE5C2DBBCA73CAF31025A3FD47B8B313E59528F2881E4C77381AE42D
708DF8E5C93474AFDFF39C78E4003E7B7FE30D31721B0ADF552294F3AEAF6C9F
4EEB4990475FC4232A38D8F3903D81C9A329939DB5396510900CD5D522C5E9DB
C5C59AF4C51B407D44468B5E2614DD937194ECD03E78CBB916BC57037DBE008C
F0CCF784147D8580979FE5FCB204DC95F10D6E5571D4EF121855C1086E047F04
3F4D780E9A34C3E671B402F789C9F3C869F0FD12D2A1FA3458D37F8CD2E85194
7683E050B6D2E4F51FECC9351B42923E388B70E7C41B77DAE3DB6C579E3A28C6
3E8E38D62A92755377D1274604BE610997CE121BDB9CED994238C39531CDDC19
7EAC2414615E79137C52F372CB9CFAF7DA3CAF003473DBA5C03B5BC597E5C182
CBE1F42E739B6485473B414FCCA4D5C10FF38CCCA54DA33831938E9392DEF759
4DE827864CD1D0B2F50FA679945BCA6A71E4329DB73E7F29098787D96D89D30A
3C961F55E64983F69651D5206CE47CF745E42FF494201D7BF2AEE8664D6AD229
D31B6E7713609222EC88AD13BD745CE175B921697F9D9FF0803559FEA2110988
23531BE96D98F0401D2545E9FACD008B4ADB50EB9F049AABB576738EB12DA190
F7B750529BEE0764347214528AE43CB7EBFD4F38C31CF4FBD46EB44215D6E646
EC32B1031A6A54A6805B7F680B56CED7F1984220443B845A9FBD9CB9C38B9396
02D8F7A3F70B39F1723B8E668827FBD165657C485FF7D48E2C2AA8284ED768B1
555C02AFC9FB543ACFB65DB1A10646D0762B400B49288C480351F7DC67048E5D
A26AC7D0ABD2820C2F4E7B76F2F0D593E7F8D1CB8EAD24B2F8DE2F54038936FB
2D9659D413E08C97C832D3A03EF24ECB073936A0C035ECDD9681A52882BB4E55
C113EB226EDBFA60AF43C7D37311FA695AF97F91EA727C3FD9D0C0217C057987
87881D07CEFE01902B0D0F7D8913B4E954FB295B5ED5498C4A68B73340A25409
4DB0024341A7BA745D8F3DF3DD0D5AB028F2EAA1AF13F4F8F96019FB2822AE4D
7FFB00D18FF44D2B0659D8818C847E21917F8043CBFAD9A3BADDFC68DCCF67E0
FEF88AB76E205570691C6063359CE9DBA2E3ECB7B59435E44A8B4AE46E1C2BDE
A679FF899B2E62D89D132868CCD003AB7AF9961F0943FF5F02016DD6F0563A26
851D5491A897AEC52D74BB6747FB9CD5A633DF53752834D3CE0EB2B7D7775E39
5BA4BAF7F82F0850D4EC408D5FDB7470CD59E8576E72A8186570F0EBCAA0CCCA
D7FE46DAFB0044DB29A8B801321969CD052FD61493FDA21156452D2865572235
B8CEACFD7733CEDCAA991212FC3C15A7E8CA6E083C0034671A4E268BBADA4583
A16C3C57DB5F720871CFA9672BDF5356746638CDD9FD68E308DDAD15D5676372
A863F05EA4BFEEBD5DEDA74B52C8EB0BA716FF6C6468BB98385F009C20BB8434
DAA8EC8FC416BB45F9DB9C98773585EA5E4D316AEAC8CB4182A887EF4B289F0D
3573D61FA865EBB3E287937147C9BE9926DAAAE4C59ACADCFDA1CF32A9E980DC
7946713AA2B67ADE09E2FD2209974B99C3A0363AA5CAE125EF0F3B74E35560D1
6C07063DFA0A742BFAAEBD91144D26AFEB983E71575D89DA575AB19DF8CEFDC0
FA2A5EF2622F879D80738E31D04524CDC4DFD91254F5F7DF55FE68CAE7989878
5FA31D557C86F93742930EB43CE5F45809AC88B5FE9E89C2EFFA64B2ECAD898D
39DB7D202BB69739202BD31EDAA120CE54ED0DE7EAAC5065B4F48C0B7DBD8AD9
FF3B7B5B4A1B7CA0542072597BA50F8F45B3B08141DD5CDEB790D76C36E9CBCA
5A955285C130E0EF728A401986C50D3DEF377CAEF216A5A795DD63F3C6659BBF
4D2971663D0AB84621F15C186C06199CF885D233DE4656E4CCC1AC1A5762BE48
F5FA88A3AA47DFC0FAAD37018CCA129A4897876302C02AD8911B3371DFA6452E
0BAA0519CB64DDE6282787A7F448D78DEE9271F19E6331D554E6829242F1E05A
A1A3BA678F42355A6F1123474D93C05C07B8689FC4885699E4BB766350BA721D
100516CB839EDAEB4DFE011D1947F0D4874EBFFA5673390D853D8277AB6758D6
8E11567ED38212B204347BD00B461544B85F64FA6D6130832DC718E26691AEFC
1DD6435FC6A7C2B91B672FA23D9F875C001E76ED42D71E62DA447AB71A060B51
99BF7899D41F602E326BF53E4F91B77B22E158BA172BE33861E18AAF3A48C72F
9BD37EB716ECD75C6A6CAF0F0FB5F6A73A47FFFB9D6414E7013B7D984B3A18E6
75655F4CAAC54F1F933DE269C0DF2BE55B48962C844CABB7BED489A190D1E853
9853C0DAA181E59ED9410F4D901B9CD2061595FB27C9B1720C97C551826A537F
BE9B5F897B957CDB27ABA4802F0BA02D8DDC0144E7C1BB169635270568E060AD
7BF221339567C68F6B8CD63633DD6BA618557B6798E9F793E6C866B334A71EC2
3B34833BD3B6BF56210B6FFF3953D0944D30855CB73E7A7A981C9CF9174322CC
22362D93433F8D716F159B035A561C376465F9331E5C7BDD1DA502EB95C716BF
DCF80180EE6DC71C01AC6AD353810CA7938D83B174577EF9C645314BAC0C5D26
C1076AA31C8E894713849EB6F8AF8007B3F27A59C82174638FACDEA968C7A123
2104B287170D086BCAD5C7C2BB9C184A5F3F9186E7F3B1D843EB1118F160769E
D9844B47A8A2CC08811B93D94B01FE7AF62D56594BD31845DD8EF67D1D889703
646420B074E222B6426D8AF577A5B7F2B019500E8FBD9E83B2C925BA9BF62903
24C59F30816B248D320852F6F0BC092B0CBD2223900A5A4D8EA5A11699365223
82A3D7D73CEBEDF433870C0523C3C8A7F3AF5DE044750BF9BA8D07C3D70161F0
724055E78899DDF3BCC34D14196B1E24BDDD67D0110B8331410F1DCF9E65E733
8B42FFA0B337AD7CB84CD7CC7795A8F1E7197309DAD0349A9659540C28723810
DAD7CE08EB085D29AC7925CE02513B4E614C0862D035E6AC70E1B1B5F02E969A
DF6CDE36D67EB79A6BB67B5CF26F8C6A61D41E773D3D0004057BF9DE91B80648
FAD40756621200E43834B0CCA28532BB1E7CDD3327289EA1C3C455D8E7D7F669
5055586AD4366A741031698AA060ACD6CBDA8D00D12D8F361B497A5239CBC501
43E098CA65841533DE0242731B79A1A82CFCE9E49B19F5D32E2386B247139DC7
37A0C0E3D0D1237B3FD2E75B2DEB5195839A638DE491FEE467F68D25CA5115B3
81E6D61A9C9A71CD02986992B15F4CAD81E8CD4B2A1E85BE0192A4B722775DB1
D43ED534CE92916843FD101A6FE4D552944258F3184E28421EFBF0F6600EFA1E
7D08A1D454FC01407126D3973FE22CD3AC4F6FBB0AD7B96D842474D1DF235DE8
9D464EF44F2C9297ECBF2840EC61A089DDE23DC9E3DEF6471946061D0DB6701D
0563A3792A1FD51E5460CFA0338DF1F5726862FAF91505153343C3BB0884A7B6
0DAD17058B8E88AA568ED8E38E0955579FE200979E292B3B57E1F7A9FBAE495A
2A25D5A813D1536D5471C3ED727BE7E559B6E54B0C7A64D4A2C86BEC799E6806
C49C1636A77020753AE9AA57C1CCA7866F6543CE1B25AFD261C434D1D4CF4FE9
C907B8468C530A546D701A3B92313C397F0A208ECDFCBEE936D0293C010457BC
056BCA70A7E3B757A8130BF3BC078B17590D62EE62126F8F3B0DFB89AA1D0FA3
717BF3CD52E7FC86C8FE3A9FE76321F3DF1B8D279AD66877E0B05E0220FB8FDF
41ECD551DD326E58FE258D0E268FFFDAE1393586EFD449958C91252156984401
2BABB5ADF93891FC191896A755CBAE3F0F649948253EC51D98A20B1C4150AECE
1B62EDF28AB0B03187728AF15BEF6EBCEDDC19B9F7DB2512B6AC7FE21F478248
CF21986DC483EC4FF27307585A474DAB678B23A7EBCAF98097861710D733B551
0790EB12F5FE80B60089D4C18F187D265E8494A80BDB1FCB3ECD6DE46267C21F
A581E86060A00DF7E387FE4360955D6F814A0B72EC09A99E846384818A44E541
E4E108DFE5E34573DCA40F5946D9266E07CBF681164FEAF332C19BB771979FD6
A842FF6BCEC22ED954560FF7A1971E39FD57F8460A1AEB659C973D52B28D6CA9
2DDED5BE33EEE8268324F6C902D9715E9D5EFF5814A8F3E1BF0B7E35DEF6A9FE
4F0D2A2E9848262290D7F8E5AD77A3AB32CE9C79E9F9F074AB70369ABE28B707
8F57A4D6313458E50D05A1E91DD6435FC6A7C2B91B672FA23D9F875C001E76EC
92FB6934B5368C099B59A7114410C608C749D1B7D49233688B150E779FDD9DB7
3AEEA11615E7DEF726AACE340AD9F2EECA199594CF093FB8D49DAB28DA0EDB94
63FAF413BC1FA14F1FE0237FA942F76F1157480F336F73452C9C15322A392131
FB96C14CCBE65E59BB4D23F82F28E6759E924266ABB0F5AF2002DD17FB094011
08241414A916807F8AFB0BBDB5417E6D852FF038407BC405811993C856601474
FD3DF4947137BDEA68BE33B1C86B31E1EC5E2E7ED6AE24C15111AEE8B0120DD8
E29CC460BCFD5BAC82C941C2774AF399F6E93075A7A0EC5AC289BB9A3C004C5F
FE6777D6E374B40FC2ADE40888C5DC808B63EBED348D07AAF2D7F7A790A0F099
8C80FAD9A265F84D5031EBE0F523F174D1B87F8E5A06CB2F03B396D8F523E783
87EEA92C452CE44D0E6A37CF3696FD8206E691FCCC9FF002209C1C76C4C64695
6668CB64B378A98BA5F5DB1F67DB7096EFB1F419D84A061BF099B8FA36670B16
90CB69F17E9E3BF1E15EDCC29B7701969EE4D07BC78F07D63D7D6E5062055043
0364C88A1DF224DD3EE5110C0D94DAEE6E66D20397C46FEA9B6EF288668FF3ED
3835171FF4288E56438EE91BC7297A8469F567938D322537FA0A8B5CB3E29020
7065992B084D567645EE4D2FC29814CB1D7082661851B3D94D71719C73B320DC
91F4F64B9B942A7CE1109EC7BBE8E5B7AA2CF43FA2AB8EE4213DA7C6C4277079
D25627DCD5E40E3E202D7176934072863EEA862AF354FC6CEB056DA1425749E4
65FAADFA4BF11DD6766C8D058CEB08DBC89FDCFE829432331073236C67785257
36974DCC85E7CAB9173DEBE09BB23B6885F25CDDF3C2DDC16FD131C7F302A2F9
FB65ECCCAD4616959B80FA764F314AC16BB1740C1B9A34534A154E2B04009136
E4115E6073611BE138AEBDDA44E8D1AA9ACBD47097BA31643A74F5D36BD72480
8357D4FD1813801BFDFFEAD8D918A30005C31F177816336B74AF8B9931BEC0C1
8AE73FE1F01FCCC7F5399762D1BC994E94B6179B1A7982129C594986C30DCAB5
11686A2C699385B3CD763CA12281B1A5C2E93E324FF5545D0CE8972C2431411F
730D16480AEE8D2E2DBB374BA8B0C30D5E782C9B7DB4551CB68D0918B52AE133
CC3977DD3448946BD058A0C86C7B26309AD5A80DC8A9A5AB7918FAB070E18406
BEC009B1658A7A314C04B7546244474F513F8F91E616AB868D055C8B11CD6EBF
9453B2F632E36A15B373FF3FAE535328CA8C0544484883A0F02FB4B3781CFF5E
1D1550A313D6A7835FE456A79A38623745FC7BC778B3765D421C915FDA50CF9F
04A95ADF3F80F3C4CE59FAF95451251659F4FAD3B928D141B5A50A3F5E9A303C
99A80E76CF38AA5B4C4F8D3809A6BD6549A52A6AE38C80AFB8C867AF2D69FB1B
0EB44C2CBF703208747659F0C260A6B4FD314B9A936D089493E3B7C7A3BE9AB3
1FFD0D9227EABE61529552E426955F25BD3D4181C84D03DEE36C9F7327962802
9C83A000941FC5F85C754D5132402A0A94EA3D0E37D4DBCD22AF7C60C6CD394D
7C4BC204610D3A92541054C0574496C4587DF29768E6F31E94A1C96D41BCA87F
4236846933F03C778A1A810DCD869D660DC33865B7E7C25A8F933A0E69D24DA2
92AB092D52FAA80F47282D973F48A92193487C2944D35418E9E9DAC3479D3309
DE69137DFBB7833E98F45B76D98F7F115A67578C90CE30A316B6D535855E3BC4
95EBD55052F31B47841D36838D978E70BDDB5116533BAE1B750318362BF85D9A
4FED0550257C16C0F488A11DF9E9251C0554FA532AE3CF6B4CC492912397B565
5117DB31B989EC2622635377629CAD8E550923A84F19126C17DD16A3913F27F1
2C896BDE5C6BFFBCB03C94DFA8ECE2B7374827AE168634FA007F8981ADA54F05
501654D663389C4B5A8891EC5F847FD143664560BC4C5FF77A0D68AABE3A561F
9B19E9E4F465753B660F494EE3BD6829B0EF25EDA2814492016AE68E31049842
FC608B1612C379841BC04CA5D5C9E7B9326E24A0D47AD9A7FC20C44470BA5BFE
CD08F2E9B0678F1C75B4349B10E0C822E7774D2E36B7DC679E91F344E2181C96
31F0E06FD50B7F3208C3AAE0F19541EC977DFB9A5ECCECE193800E322F11492F
E2D4693CDDA5926F4D6643907C7A8A5891F445DD18C42150008FFFDC9DA85E46
A319CEBE22106497041C6BF0D15CEBFD453284869BED4F94E7563A22D9EB3820
144C7EADD2B7564578EE778AB577C5BC1E44C3FA9956F75531F04161B2C21F34
CBE80DE64145C23FC97535A6E4F812454833BEF05947F6414AFB850951A3BE1D
DB72B79483DE686E68A33CE20C97AA3D34B75B9B69C9CC6AA7EE629D85ABD5B7
B3158D44150D249200D31492FDDAF610CC80CD098D1E968B18EE09AF09D593FE
3D0A62701D18826FEC47F867C4FC966D23A12CD634C1FA9AB34BBDD9983E5D44
1DF74B89E58514FE8D5100151D635CECB8442177468B4A69E269481F40D0047B
25617D002082B89E2DD0885CA956529EA49D7B9133782E80CFF57472F27BC0D1
11482C5E2407F0458D28393284DCBDB7835E97EB66928F45EA8146164441267E
54185239D9D66638FDA8BDD4DE1F10153D551CCD732503281837C4897D51AF17
B9562670633526DA154F2FC6BEEBC0DA2A57657BE4BADBA11C52E735C2C981DD
1A51008E09E7576B43654C207F12B1FE9D0800C9DA440F8F4DF5248637C3BC95
98A1164C54C878B02839FBDFB30634D2C908A201142248276B7E4F8924750C83
61FDB1FA328EEC43A235F6F3C221A21FA27814F2945BD12376C76382F3C9C3C1
7519E46F82998324BBD0131B32482D403D243A54E251CEDFA01A8BDE36275E76
D3407C62A81FAFC5A6918FC0E56BDE223615AC1316EA2FAC998F9E08DF976658
5D049BF9B0C16328F8992A1287FBE4016ECACDDC72CCFAC8BEAB0F3CEC7B118C
A007C99ACB3A8CAF71B0FD53F0FBB4B98CDD23C4D7A4185722A4CD1DF2EFBC64
62DCDCF81DB674AF26BD3389F8ACCDF1DCE3D915F0FA21593561B3F793D4ECDF
9B17AC4E1A9871B927051015616FA105CD31AC2704D9CB29783F12C090F7E38C
A5F15406029C0EAA200C1BB9070C7F6833CF29BC0C5CC42B68D8F370F21DC097
78880C3CE4E08BC8EB4F995A09CD0E77B6A97267F4C63D4093BEA8A34B315CEE
932B40ADA36F26410CE158403B4CFB64EB4D80157F57E05097732B4DA0F2F3C2
F479FA651F01F72A57705673E627FDF5A0598054506521227674339C79F366B6
CA9EA7CD06B8D0DA8E969FB1F684291242494E52311C02C8A34C0A5B3C13F380
2AF740BD9C765861A95092B7CED26EF1639CA2DD130E71A587A3935D91E2F1ED
F54D76932130618C8D76D20AC022026C6F2643128B9155F977871CC667463212
4F6F9B939EE1663FD02D1E1D74F22C4DA4143A4BFA7B3D22F58FAC1115AFF937
E1A8502296281BF8389A348484028006F3F3248B5454ED6DC729CC5070524D1D
B08A192A26EBA06EF157958C1BC00554409AD56FE7142D333CD1D23D5C8E17CF
1B43A482C44FE52E57AF48D3E9B3D32C3D557ED2F6F284CBCF8856B2A22E72C0
C525500347775505F87BDCC02101AFF38BA1917A296C2BA59D189CFCA85A1AB4
7D180AE3AB5EDC9A66EB2152A3926D74DA3E0E484D43621E697DAC8CC5B7F6A2
587F0A3ABCD8C3AA3F46E30A2EE663C2CC64E2DA3631AB809AE250FCB0B7661A
99E3BB1BD13565961B1B3760EE57E29C8BE8F4333B259C51DB04F83FB8A8CFF5
EA08B850563F1082F302DF65A337A60C1F7C2E743954A17D26C0DD1FC6719E6D
DFBF4CC6E06F7F4E221AA17F75D36F7194C41BC7659CC291CD5DF9CCDE6DA0FD
3C77D56D063AD44CB7970DD572CD605F5E64FCB19D176C24DBEDD2808DB3D785
BF794EA774CAD2ECA4581BD58ADB6AB154DAE7900B7D1A5831CBBB712BD4433E
492B5FDF3908E6BED58C9765976D71E22D7C32DD6A251141C84EDDAF6793DADC
A8DCD7CC7C04DCA33030F187E88F3A42403FD4606192DB1E65591E8CAC11A84D
FE3F09633B0FDA064321595BE68894E2244B800EA15AF8C16B9B8329E91644DB
1EACF1F12425A26341AA5AC2DCE2E64092DCD8A43E347008B7D5A184688CD0FA
CC7802A28ADB7907E056D20AEC2ADCB43DE6F84089E6E0A57A6AD525B4FB469D
4FDF87EF60080E1EA0527DFB9564EBAFB4292516657B11080A18CE326D18DB4F
C12F7A8E9820207DF26473C9C949A2D6059CF772992C5637092710177BA2E331
993DF752B5F9DA8A06B993088E210C91279AAD5922A3546551F93A06B3BB0227
2B60FFDF4B8A791B5B54E5E9D98BD5B3A86E909F1A18CFBBB502CF3C1C33D64C
241B9F161DCA2420C4E62A6FBB9EAA77C3E1CD4050AFE0CF39A32316087A9435
4D471A4D7A6449D75188F3F600D5FE70576EA42629818DF9894AACCF6FCC5C78
714AE6F776AD12743DC8846D4A70232F0EF82F448559F8CB85DD9909A74AD696
B4E706A3B47E119413DD9556FF4172F1B18271FC2435C354C3F09D46C1354E5F
C1A63D9D5B91BB6B95C298D03B35B604E4DE22C24947C31261DFE88A93AE4E6C
759BB40715E971D4F9F578518E37E431CD2798239CC4C949013F16A197425EE1
20A17F7791554750299F7A6109C5FB6761886F19B5B15D74CB098F56CF1CB341
A140660093A3A260FFABF332DD702AC4030A4AD4B5F9F13F05973139BC1471A2
E5D6D0C62F0ABC86BEFCB1F65AF4CE77AF74BDCD3B48EBBEF3576781FBB7D433
B58368D34E5E37B9E2FFCF9AB319C9F3BCA04911B77B657C0E6ED908335A1687
C92D7BF00C6F8129E347C6489FD4FC798ADB86B0C865CA2BC270E4E404F8A08B
6EA22077FDDCF0DD9D585ABA5B3216B772316E03AFA5A27E6F5EE3F77F4D523A
7A4D01199AFC3C88B0E2AB5FE014A8437745108009D13B449B4A055214DF69D0
218549440B1C5F19476595E964EFC9B18C7002F76150B70E79387F8C338AA7CB
A1F3E799A32B23859A4CDFB52C22ADB4DB30D313BD85B3214F6127B0F5A90B25
E1B529E86B0B4656620B937876139F8A8EC00C8BD6EB20AB66BC1FABC48E4ABE
10D7B7E8693AAD1B25349EC43DA3811A83F1E546C0CB1649868C14720C008F4F
FA8D3075910926C632218410359E389D874F4F719293D0B0EE58BE36458AB3CC
02002C46A704E345E7CBA12017897EACD1FB64C1F829392A430C1CB8E88CFB0C
AD53BA7F20DAE648EE34DC7CEC39CFC55A9505206C3C604F4F02C815605D0AD2
FE07CDA8A9F8F0DD0C048753FD98816588DE9C8A2C78E7C8BA614F66F38F9383
79CAB93ABE05747491570EDB80902B818F3E52B84BF6A1ACA730BA1FA90C0D7F
09B3DD6A5FE918CBF88B2CB98B7D817311B63766ADFB7099864428EA3580F26C
C4D4978813067D64E0DF70541891615BDCBF3B5FFB74AFEB695F8C92EB33721D
D3B41058551019C4E12555C4926B0116F86F88A7E9660AA8253D564A36E96024
8C4168E113B6C0C725E49331DC85507BDC697A1C20A553A349DF9D95D5D24C4B
6B2795D94BDEB015C731EDFD27F3823CA2D05633BAEFF23046DF458000AA7477
BE93D17A85E0519FB0B6C5BDEEBB9554D34547816955434DFCDD0733C148B5A0
52196AB08680F5ECC44BAEB2FC41FBAEBEBDB65521D0010402575DAFFF833C4D
59C1941D6160B8FE78D5C3354C17511541D364CA8C1F27232312DDB771243735
43A2C18439DB2227247B30A41C72B88361E10B8CDCEE93DDCDF5BDEFB5F08872
C77BA070C12B23B2C6FF837473C372E70836D4C5747C4EEB85DCCE9246271769
E060E6EB754F8E89B075418D032D7BD972EA6B859338F8D6BEC3B63C5E9999C0
6B34A79E0D131D233FD3CA93D8F5B1DFDCB271329400CAE5B90560D4FC5A1154
EECD0CDBA01C3098332FD8CE6C0A393AB1BDCB88B84A418C9D3B15FB9ED1330A
B93E9A8D466EDF09418F46892F4FAD459D4943657ADD842FF3D6D1143830B378
A3EEECB91EC67FB176F2ED906086FB7518C7167965813AC101434BE5D692FD50
2589F7B14BEE15894121E8CB7971ED4DBD5A2DF213D85A56B1CA85DEA53ED029
9C1E8516B0C02E9F97305FC7E43A31E0002A2F803A30B1202AB55D0FCB8A5F3E
321815C3C7AC714C3DC89D789252A42CB2F981BFA79544B1A2F756D81ACAE235
A58C64DB60FD25EEDB5A9E09F469071BB0F203F5D8ACB7A816012ECFD79029B7
6E3DCF1C4DC905B3C3076E3F280F64C2876891EDE485802931868EFD8A968006
50CD537ADA00FBA19788404DD7AD11EA68A4363AD77A6B5360E8005B6FE5D830
1F3BC9C51D8042417A5D8F0C6E0B44948BF6D96C7D3A1266DAEB075E8B6DDB0C
88B9D0D892843E1CF271C5E81A4646F1256D3833BF0C91AF256E4268CEF6732F
54BD0836444A93A1ACF2699CAE72345EAE6EA356CFF8DFBB285BE2E378FC46E5
80326593693FF10CEF344B6E823AB1D4A0B23A8C455BE6EF471BB8E636373B42
A81058C34BC3F8E4098C22E5A050397513C0DE16A6711C1164328D3D72B03A8D
6902B2DC12DAC3EB3A44304E2B504D7A6AD4EEEBAFC8BE35B06BF8B30FFB31B7
E13562E68C1D259FCACD70F0CCF12E488A3F223A11D29BA6688BB258CF46775A
A9581DC27BEA9D73FB42FA666B3B2D3EFDA6667CFD49D2238D55D45C48100D43
22C5D0C64D459276BF2D8F25F13137C7F1CC459CB3B23FF737C9AE0B707390C2
CBC0C271B9B304F156053EA3D391FC45EF437AC7DCBB01FB056C2B3A50DBAA4E
7CF514344704446D3A12157DE158671515E8FA0324852EF8A2AF55FF06BBF517
28AE6724360C97CE27BF0DDC5513DB7D794E0557D90085D8AFC0EC6F43B313FD
8B3F70D2305B75F7D7C33B34562A5AF707A6DDC41F982FD30A75B7044B7BC486
BAD3557C8A5956F4ED1B59F70E372170D01497A1B020389DEB8841CB34E59B66
0CAF50371D68D895316F6A01DA7224B06AAD1687DBC419EFE2BDAA08ED3B771E
C35651395E03113FFC2CED08DE4689EFEAACA2B75B542A8D06A25135505C220D
D1A84EE4A8E900D059328B9F9A3F4B89932B9982C8D4F0302A61C41E33E51F73
ED4FF4B0E5BADB6E56F7B4B3B9513B8FBC8E3A552AB1614581292DBC5376334B
89E7A9716DBF430CA68E91A576773A98E09E6A816DD71D80C3D80ABCB0063537
098E1F251F863683A1ACFD7164EAD511A3BC74169097C458D6870F268F04A186
65F01C9A647943E6B1F15FF5E041707E41F4ED7522693164D8A8853C695C665F
4569E46B1C796EE0F1E0B755D519B3F91479510A09A9177A945C37EABD8B2A04
2FABFF483882103582209E9DB25EF4AEBE1DDB72B79483DE686E68A33CE20C97
AA3D34B6ABA57DAB38EA66E305A8046E2428CAFCE7E6EB689A0F6D212C683A3F
B192661D2DD29E79A902F9009F9884399F075BEA36DB498347ADB252F07933A7
FF22E3504A7668BE174AA8DCE7C0C96B7E9DB8281E563D8ED7B65E461B87259D
502AD8C09E7074568257177559D819BDB2C5928B94105A85920BD506F7D93E4B
0C95231827D743E89BB609034EAF37E97C820EBD82B6BCE600F0EF9A78F1F8F1
AC0A5CA501EAC3EFF381B3DE6DDB05374C2AADAA24486F9A831BA1179B2EA360
29C9135400776E2A65C4A068C3B5092F3E1234B3D8EF28C892BAFCF313178E02
D3BFFC709F92ACB6CB2BA47A597F361370D560276298242DDCFB5B93FEED8AFA
E28D566645F0E22A5EB61F0C232B03C08B27866537A9CA5F4B63398F52B884A0
74C4C4441015E906C4412AAB326B5079F51771072FF46EC2F7A7F271B49E919F
88E7581062681398851C4348C3109D0671951505993DFCEFAA29DA2CAC5FF375
6A44F596F7FDB278CFE05F885E3AC77CDEAACABF509848CA84C2B35ECC10DE1D
4A063CE605C925F03282F2F6B0E45E4BE3E27CECE324917C5A99F4A32057F1E3
96EA1B598CDC2B459A81B19A090AA25E8D003043B781E05300A295431ADB8341
097EEC40F28EA5744D4A66F93C62461F32B8A683D919B5E13A2C0F34A122D348
A1642FCAEB99606BC079F3230443D11313D6EBB935E635A12D0216F822CBAED2
657A1913E3C0A21FC66710ECC8F2B061733C8D4C355955D7C8C2D6C002F68E91
AA65674C297FF9C638105CA4DA0F8986EB1AED17F3C26B0B98BD2D073A400E7C
A0B870EE6EBF02A0707CEABD897B416E5152EBF506F0D50391833BBC2230B8BE
AA3ACC2968AC71CB65CA8AD5869CC9FD7C4C194AE8D5D20A743996A62A3DE425
B3402318FFF3262ECE08BBD9573C7D76F4FDBA6E4F0859AFD74E72167A3D3BD8
6F381ED2C044B9300605B9B8E5F686536D2C586421D462D8286E25A2B39C0EF7
9AAA866A8A7C28275E5901FE36E3E0052501D4962958C07E573EF02AAB076B07
8597B2DE46F5A226DE8B64DA350A36AA9D2D421C84071ACEB30C5D20148FE6C9
07D4EC63F6431805A40EF837884510B1A8C7CC7D84290ECF14ED1392402B3726
822DC682C601010A0724A50496CD8D787202F8B55AF2922B6C713C2AE046ACF4
A403EDDC21219F392DDBEA601D6DDCE7A864595321FBF2194F830D02D1662EB0
23ECFD1BFF24001929DEE6DC3CC8EC9D3FFB2658CFA615819B889A7655CA63B8
26FFE203C130570142D6849BC5B3D0445B30D984FBAF9F579CE824B0BA20F1FB
D0943F22B4D84CF007C1D9B1D39573DA8CBEC2E6CF74853B93B427A89089E953
E1E2F343F3E3C4F57847EBC5AF87C86FF819AD0834C9B7DD021C1C5FCE478372
9578878D2C9CC4DECF246DFCBBD6E392D8A9EF72A2E4FB46159ECCAFBE20F35A
8AD87222C1735CC0B476B8B54F5F249AD4F43487F61D3712FACEC4B587DF5542
9E396C9C0AF8D0AC0CE02F15E45F1353E3FD7004EEDF96D353F451D9A5027FB8
87045C3BF765EDD4BD129A29DFA844C6B2085D6A445D1F877635AD152323108E
85FD6770BE16471D811569F9AE4A101D1CE2241EC4FC04FE252DBED89160E8CA
25E6D7E6D032C78ED270931D48109C2E5D22864BC6AD983C2493CF1748613C9F
22A817DE43146AE4E04FA79AA91C814B18ABD2C55E613D4F9672B1A13A4823E6
45378959E3A4959132D9C6D730A8203FDDB7138B0C1611C7E62375F2A114F7BF
ACE2768BF2A360A33A473E6D63D300577B2C99A5F45D0C01B4EF59E37C217506
0C6357A22ED1A48386D9A9DA0DF68987B0FF0AA4C418F45F2D92CFEA647A6508
A8ED9C360A731B90C4F19A0999B940D7B30E13B1118FD1A2847A22701DFACD13
1E2A211E08102579F6F73178B76A06BEC0DB2471B4D35EF013829F8D73C133EB
605B5B3610DB6EA6F1D79D96406122141F7F41FC930B6DDCF270F18618E45145
DDC30228AC047F0BEBE40D146096A6C2B8FEE51B1FEC64FC9BD1B28D030A92CE
C7F3F1B26F84EB530BD9517E8DB9DA14B5133EB2EB6040E452D17F96B62B915C
C3860A7561E4D555570A3393F2DAFFF477CB0BA889B4F2E29351789CCA2D99C6
EAC916E0300DFDA1EC7AFA944C8A54C8B3E32A5F8EA5821F140FD5FED30FECAB
8C160B8DFE0B03EB97658628FEC6A6ACDEFCAFCAA351D2DA4C4E0BBA363EBD9C
96115FBF60A81E14EE3230005A46AAFEB7273973E87A0260DA6133E79AD708BE
A82791C46B15673B6193661C06F37C64B667CC6C181DA7251112E3577534266E
113EBA77A94CC784CDBA913C1F534294A2A4B00FAD991EB2D5A2A870AB993CE9
8163E732B738812CA5971F46D1A6B3D3A1F291C2BF89672C4F96497582BE2A72
AD7098563AD9DF39C1DF4DD68FD9DB70D71C93882C90289F1CC5805120552B76
0686B274B4CE8CD9D567C0F1E9A9DEA0BC22F3ADA207D5F3CC74D68FDB75A661
B058AF9602CB37103F233A00E9F9C56E06896B8050DC536FCCEE6C8B78573195
AFE9020B5C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81A
9AC387913FCA9209F9142F9CEB88DC7864ACE2139716A8B8BCE22870B2A8AE03
61A40FACAAD0F82B44B4D6E4ECBEF48C6E2F39CBB2B53B18DF7F144E9FD272CE
6A23BADEFC0FC80B646A2FC08C8AA1C44A2A00554667CFAFF8A417D246F28CEE
905824D8C0FB19279F86AE6C8C6B3B5D4AB4CFAC640686BC6FEEB9C1DE214972
4C015A2D62C7ACB01966717F9C4AAE6203DBC7E60275D3E38C7F66058EB798DF
3A42628DF4378C539BAE628054B5C31D23B50C2B33943C5AB05E8304A43319C5
8B569F751361768EF816F30DA12ABDF5C63C5B1602823BBFC0C03B7A421A836A
CD4083FDE377A8E800BF093CC74B3F067CC1DF9F37F37B225D1A63E440A719CD
8CC6D148F1442F1386DBC7309C37D13848552D03C07E06969315884369E30CFB
BD715C131435EE885780EC50DFD4D90B568153D7F09788C8877FF9D119C062EC
9DB71DDBB40357DF31989908E4FB3FDA3303E6BC7EBC8C3F90ECE5DAE3E02206
E93022A0609D842ACA6AA03E96F8C117951E672EC54FCF9A8273B7989D201B16
1E870432822FD897B71CEC0427D5FA06B29F527B6A236CE267095F2193898745
610FFAD3AC143DC9CA8CB1C3931E36AA844248234F51BCA6F444C2905A4E241A
269ED51FF329D5C0C86D9C66ED01B85534A1E39BD5C20DE216B33240C40D188F
4E304C4610FA7CCCF0512FDD24CB36B40AACA15B0FA0098083597E359F090380
51C4BC551BACA6F728980ECFB1E999F4E0E329B15FE526F0C6285E5D05CFB53B
F7212E2933DD050FB0820AFA1B2ABFB2AED5544B06AD48DAD5E377C2F375CAD1
3A904419D9E7F6D38731EF1E8CB0917657EB749149E1D61A1EF50C19E72FC8AE
9D835BE39DF765ADAAA523C72A653D19D310CC10E9080C619F102E6C0EE4F80F
05C1AA36C2027A88763A7F0AF2DD0CCE40F2CEFD4D785A43264BAD874D4FB758
1C7082EA167108BEF6F7E34D958D6105130AE25923E7EB77C0FDF5286780C376
3D9D24E27F7FECB251C07A0CBF632410D7D948427FF6782B8850466A1FE66362
4FC26E88758AC01C1C98B568253442AD48691C2A47DF05F6A7466E87D3020FB2
D824E71394F6605CBE638D9A6B5A0DF28C4D81535BA76F76B16C6815E977CA50
513DA81445E93555250A43815E80B39AC00F7086BCB4B36C35CF2E4A42B114C0
7AC99ED39EF436CBA30F8EB1A6E543782DABE3FF805D54945D6DC2C09A0F32C2
954C689BB04A12A787B88A966DBE3F4C2EC9888B56E96241D345CBE471FFB513
9002DD5225DAD211F5C72F3127A60A33D311387E6DBB2951640D74E59891DDBB
4526022E00B54489023B0FBCB6540E7EB3B2ED0460F81AB38B9240BAE8424443
749F272CA43BE6C9B5CD3E674BCF858A46BB2D1898684401E25CC37C0FF9DB9C
5064E2E468F5906C1338EBF0AB1F2B5C97A5E4D6127212AB225F2857D0014DE7
F40568FC538A0EA2E76E1F62790DA67887A81FED8BABAFE9416AA5E06C7C4C60
0BF38B70C87E5ACE2C713203A64DACD5FD072694C71A3AF841F9E3D07C7B3788
5856BBA23EFEA2AB1902F879F1361AF8C0421A296FEED926836406E96C49A48D
AE1DA613DD54D9C840D4896A183FF4E395EB7A69DCE16AF779DB5DE506A534F2
9DCF33411B194DEE2EC1B99F36FA1A11D14A28C0E938F608AF10E3B31B98C36E
5AAA15FF94A95B38469000FBF31BAE9CE8703754A099D21B3329E0471463D457
0D4E89F4CD31A93C312EA4674730466C3EBE9F8964D358AA76DE110300CC7B89
8FBD8BAA1FEEEF4E78760F8A25C60981E6372E49D71614BB4E6EC7B1ED60BBA0
8F874D9E1B1661393BD85DEB50C29E3DBFD4613BD0DB2A70E57CB73CEEE6A51B
72B52020AB471FA444491570EBF12F70F2863F9CBC2CE3E571F5D8ED5009FB80
9985FBD9A3E99D1D6124A3B4DE50749E55267744E046627E381FF09727EFEBB5
2E59282E0199771B95DB671D4B2AD846EBC0109861075A936D6F2508D429C625
85777EB9E6E9DFCA889F03CBE5A9FB59C55523ACF1E394505886FBE4D6F739C6
6BA65248D16465F0743C602C6E12438E7E9CF6405EEAE7CDC599E8BF2CE72DE9
FEDF547B68A41FC346A14D58EABC55ED2D98DA057A876FB35F46EFA6A949A75C
F1DAD4E176B50DB98341C8D442F31C7CA70CA4411B4511BE399A1EFFE6AA02EB
E529146BB9E0D14D16625D3C830ACB43B26371195013F74FC07E862198AB570F
44DAA7CD767C726E7BF288414284CCC3E6FB3DBC5D11E9807F8B247CB591852F
EC9392079A91D02F4954FF97236F55AF6FBCD9AF0E167742D0BD0E131BE7AA98
E955D662DC9AD78F82C29C3DDC08B6A551B0CE96E180903891204F4EBE911581
EA3BE89E4CDAA342B9E52F30E55B902ACC35DE87E70DE8EDFE7D803CB0770A2B
0B8180E5389A54B85BC69FF37B8CE078CBFF5CC6F11D65E7B61ECADC94491C5F
F034CEA604CDF5412886758D49CE07427C96AEECF83C52A4555178C7AB4DC1FB
491ACDD3A0CE09DF3D2AA01AFC9DDFC002A9863D9382764DC241811B3912F36A
B2CB1440EAF4C36D14A899C877A1F71CF5F205C8FF35460B37921BABF917E5CB
A23CCBA7C46C157E3088F4D1C99603A5AE29019C97D03FA54726D906264C82E8
AED7E4AC8F66E56EDDE14DB1462E4F9859384B15882C6B0E2219186DD528D0DF
17F15FF78FCEB2CA616D526C530E1BF18C3FC7EFAC5BC5F623465E81758FA863
78485C3F65040DD351580824450D62A12078BC053A65AE1FFA91D645A9E26C29
A8311282A2DFA57985CEEF4463E64E0B7DD8D11FB10DC168A704C2C70DAEC483
F6942ACFB86DB9C4EF5E16FD6E2A4523B99D267AA808751385186A779C73E575
948744853BCF5547A7870E7F6196444513F4AA8D5FECEAC8EE88C8830B526ED9
264D4F56562FF445F348D19317A058A4FCC154CEEC13E60A53EE79C07932518C
BCF295C49DD58CF10B322634A4B9ACF5325B842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF57627DD17FCDC5BFFCC5CE9C78BFA2B830328F9A6D45FEEC239A
D76BEED158DB3BE2DC4BA1DC216B2D085F251E56B085F80C7C11DD39ACDF31FF
8D01256B7CED1EDFEEE0376E57B6E45D2F375499F8118EAF5C7F6607DAFC48AC
6FD2258F0314DA293F61D30028BB0FB43F50BFFB3005B677A74AC48E341259FC
DD1E8D932840FCA3727301C942C987A026992772DC2A0B06D5E4AB1186D81001
AE4288BC2EADC60BB6225D9CB6CA887922B117EB0E7F81000CCC4A20522124F8
B7DEACA9E6FB322B9B66DE572DA955FF06BBF51728AE6724360C97CE27BF0DDC
551716E8E06DDDE418B6E3E407307088DF1BF21C09F61DFBD19C30D92CBBEDE0
59D026A5A2D9B65246D93E36A7276E70D11DE1DFC7E967F6DECA7277FCA73E84
1737D9AE81C25EFAB95DC9FD91A124F9F5AE28E844C6C3EAF7DAB0FEED7AF2A9
13FB2CE66241C5102CAEC3992BEEF1999CE2A5574EAC934945ADEA6DB4E4DCB6
4BB074C6094FFB7D2AE0633C33C8E4823681C0A61ED898C571006202CEAFB5C3
E352E7F66C743DEB4EC14A3AE0EF469A2CDB23445830D0F304FD7A9EB6B8AEE7
919322D2FDF6C7D7906EDC7EBCD9E9B6AAF63DB3AFB9D9B87CC743CD66342BC3
BABA111186A0F38F642261843011FB3389DD944969E83C1B8315BF63C3BA9B84
9EDD5F620C7E451943A4E3868D2F9A6B78E6AC615258E663C9D255FBECA07BE6
FB4B14EBF66B06D640012D108ECD3329117185F2DCCD3CFCECB7224FC5E7E437
7C6E1F717DD65F6A274994CC40546439FA5A60BC3719653E525E49FF6F778D8B
ACE4664D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A7357804EDDB05D506
686757C79C2ADE54B913F1ED476E3D86BEEA512B1FC55E137D23FE61B7D69D1E
E48363146DB3EB9914CE42558ABC90B623AFF1FA2CB3EE64202B74F76E195C0E
3F2B12B433D7DA1F634865DA6E5ED7511E1D930D074D76A35F19891E3842733F
8AC91FDEBDF9F8A426019EAF34A2B13634F55E964F8B7C21D937310590871C58
2F30C6DF5FA2097A078ADFACAE547DA592695486DEDA95AD49D2958D1F43A3CC
E7B7B9DB269FBAD050E6082D8DB99454AEF0AD0088753DEB92924B8AACE496E7
45ACE597058C23D84C0FB8BAE6E8B396D944701FDF7FD723D145E93B12A799B9
D0210E411564EF88E75FB2380977263E4EB261F6718EBF15ABA15B45CE0008CB
D8D2B7A1FADD93BD3CC207D8623EB59F6B3FDF302406C8F16686E31B66D8C1D7
E8DAA6804AAE5DE138E8A311A4A1330604D0E557EE03662BD31AF90587A45AE7
42E8CF9E4697F94F59B8AD259D2DDF433930B270C63EEEBF992ADB20C9F233D8
85BD42C04DC9300D4CFA004F89A55999A93B5A3EC2D3098ED38FC4CBC6BE50F1
4FFF4452CB1B96ED0E58AC65EE13077831824210531E56CCF19CDD93E462A12F
35E45673FB121E1AD75F20A8F4E8B29789DD95CA5047CDB13FCDE826D3AAE15B
CC039B1C6A9C21674AD3ADB75770688524E0B4D3151C5E51D640C741C6A05E85
EC79363ACC8A5F234575C256306A3E2B5F6A6ED4C48F6D4440488AE7C9B57B85
DE61CE78FD299609DE1D6795CBFB4CE95D68E3C7CB1D4A8DA1D0AEE7CAD1983D
695AD1DE3E935E231AB657C704B4FAADE3CCBBDC7C31C1FE52D8A57D79602D65
BBA312E072096DC25768434E7B56ABD8AE83CD6836A2A624A32128393B9D463D
FF8B865FBC10316F6EC4806316954E90817A74BFFE390FE7B5348DB0B4782BA6
D48AEE80D379CFEE11E4F1CD9A521023438259A1AFAA427959EE4927606F08F4
255EF756643EB591366950DCA06596B169C9665511507959228D5480C7AA0DC6
1F197A9CB5C80A00332184637C6FD2198C1D859D45F35E20C5554B0D72C262A2
3CCB48B112D5ADD2E056258AA295803C60070F8E89217F14F953CC4015C38151
4C1E1BDF36283AAFF8AD785A49E091119556FED39BC1843053FB2909D78D0CC5
BD0202C8FB9DFE45DC35209300AE63A15A7D983219EB991B300213F2BFD5B477
A7342D64AC059315DDAD1A2FA1F4E8CC6969A0E25CD23969EF9E387BB3BE62A3
51C14DAC4BEA7FB4C8F38C6C51F6431DE0F8FEB6C3091AFBCAEEC0FB3F3992A7
7ACADC778ED2784B3423154B7FC03D43F47C6F505869EC5039310EF1F4ACEA1A
40014BA27BD58490D243E14831C19698C0C0C9683827A13C1735D2C649C0D4A6
BE354B0E303F96F1A7DA6410CC5D3F84EC5C9F615650160747A724AF9C66AE82
CB864AB947E3582308319FF3BA95FAA268D83B462FC0BD10BBBB8DB7B12BB101
1EEA4891546F4AC7FCA094F32499C0F8AA33D2C7D00283804FD75276BF2C4F9B
E9BD77A75D5A1E7BEC988F06F62D50278904F0928D97C2A77894DADB216105AC
441F7544C3EEC8F09A260BFCE7C040D10575084BC081821FB759B9016DBA3AB3
9FC05FA6C191F7A83C324AF0629A269BCC414DDA1570B980F3596906BE0D23A7
1396BA0A0F3335B74FE5BC3367497C95A462341C8707177AF767B83F28AF4C0C
F952EA0D9C4176D5ACFBC48D8A48074357B1B8E5B17C698F2052A9C6410435FF
3D114F67EACD436BEEC8ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A6FDD
7D52F256FFCDF706B456B6886F5FF5F416C079AD248559BBDD2767549450C680
3B603B312979604965F7E8298F454E098DC4EE83D9EE5A229DA5B97FF0861841
31743AFD0DC1CF828D0993C56493FBD38744296B82E3908A1A0CE811E0CA2E52
A0EBB9F4998D40FD7B001C660CCA6AEA8C43CE8FFC9D1AEB97BAF55DA23B2FB4
A868BA0A41CE90D7BB6633CB481DC110FC14AAB8E9264F5EE49798BC49D9D9D4
9B9CB9429CA197321B545625093FAB4BE53BC96D108520D9CE9193DA216221F8
42FD0F3CB18D4D9C66FE5891B484C4F3ECCE8A8CDF069387E4FF4967E9F11717
A630BB0422421290360984C499D5C2F4750008B8107BD17C259B723F956B5B14
7E7C0D6AACEB4C9F0ADEEF68329D5CAE9EFC75DC15A9494E876104FF7675D11D
E1DFC7E967F6DECA7277FCA73E841737D9ADD1D1BAB1961E212D20880069F0F3
B5536CDE53D4A4D5012B54B227A0C18DA8A43ADB7593E98E5E0C75197138FE3F
BB31F876BEE000302935A55EBFE1CE914272A8F50A983AADC0604FD17B2A2F43
06AC9C0E2C687D1D9ACDBB674244037384B36372980DE4F1819DC2B4F825D7F6
AF5769BA3C34DE43B531F84B485EF8F360082659FFD797F6E37B87EAE0447EDA
DEB00764A38DAB429277B77869A70AD62AEA3CFD663916700C95E0023599AD8B
F5E4383BF2D5B1F79DBE83B6B7836E42C2E1AE0093867B0F2F8C4E44A16A51FB
C10F2F4BD0EB7475E396C85116A9D3FDF82014EB00C07DCD76514565D3E6DCBA
5BBF1E7E65EE55B3A8CC8D2229A01DD3EE09EEFA659502F90DEA0CEE99851BA7
2A097446FE8D54CEE9CBC3B88AF70F6D0234ACB6350CB1C56BB44AA5D7005841
0088780E87F8A0D2F6D2FA07D508BF3F6314B934962984C7FE400CC9AB1E5F79
2699F15AE7E181FE3ABC4B4C70E21F3AD9AC49685171C47A257EBC1FA6B40E10
B77C81889061E668B9444D08F3EC366CF071C473CEAF7FA64B863164AA97F309
B76EBD1D860A54D8E656ECEA88768396EFEC282AB93B7CCADBEE9CAC7E77D79B
A760EF4C53A3C983853C30DFA6B0093FC96F298AD1B5807C33A89AB14673D370
619267FFE6A05DCE65C7B986CF466B6A832F1921A6949469ACC2B5EAB9F109C3
6C9122359A60190E6C42C713A9BC911105DDAB231758BD41BEE389B057A1F7D2
5215EB9D0F26C738D1E8782D670AFDCFCBEF6BD68AA64D6CE1D7C82A1E46EF79
FDC5CF1DF72D2275F3857BFBB4FF234B2192EEE72D2CD5E415EA5C1C28F4B537
D15C66B6CA739B8D92F22E3DDFDA20460C55C375A40A34BF6BDB012F333DA135
67389FF89C666BAF1696FEE4BDC1B32589E1427C1749969DAF3B72CFD1F579F4
A62E705B6DD2AEF3D166BA507A1EDB131616EFCF91246FC75DE3D8A915DBC82A
1E46EF79FDC5CF1DF72D2275F3857BFBB4FF2296C19E66F93DBC8E9CA5E86793
FA37889936F823DA9CBA746BDC1BA4A84F7B70846E33CE5F285F32FC4E53A284
1E737ABB84A750A16A4999D5A59AEB5FAE6FA51F6C8CCF447A19D91B8CC30481
B5C49B6ACB4DC451F9C524349EAD4DF1F0DBB3869B74C2373223236E809ABE92
C2630C9A877AE16BC30D56A0B208DA546903B801BE445518F14E701BE121A6E3
C832FDC31C1546BF0855A6767030D9B6B47266B4A1084BE171D03696A026FA7A
544E4D106B9A315700669D9D8A3D985F44DE6070E8E4AF6424F3048173F52CB3
EECA756C4D24FC6054D922F59B105DBB74686310F635AE6153D9E18A0514882D
4CCFE9D44B8952190FB9EC8360698A45EC064FF735101C9B16BC27110FDAE792
2D97BF0BCEDAEBBDA6BE7764CAC582CDFB785921653201A8230C66DEBA105E89
909D76D034C9A5C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C592950326D
E46CC1E57DD4B2A8821A8506BEF79EC524565788A28F5870230E9DA69ABC8078
8F2F72CEE5F5594F71A24092D1CA9BE1635F769E2AC1459B0B3AC1DC117B6296
C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA6A0BB569A91BCF947E682976A4
A993A413FC97F6F1331B12604C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F3
F8493AB33413FB84F35B3C0016089A6C4D67EA0050A0381699FE2E38BEFB071B
9FFE3D7574FBB32CA8ABAF8CDE383085DFFD5EBEEF83D696C0FA27B86904477A
22C09610E936D310AF8455122F4C6B61307071FBEB6E8DA8C43C5E1C317DD3AF
44E46800FED97CA40252808F6AED21A9D6F3EF87869378858BA7E6E918D5E464
49525A4A5A2932DB6208081585CD9A312B09793B1C1FA05637430A13E5AE3E1A
3D5B471CAD468007C4A6BFEF07D313E1ED2F47BDF624179D8827CA4664F96F70
03D7D0BD14633673BF1A66D0126713294E13C1A4571B8A9E6D98EE5C2084E767
98939F0AEF7E64F621BE09010CB6F43790AC69F122BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0CEB0D82EC823434BFCFE218A4B5FF0264F1EC9818FC80F9E3
E06FA21B47A2C431ED3DEFC7267AD9DE87E23C2411D06FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB25E33D6830FF6333593140C974A8B13E94CF0E77EFE6EF
C2F0C2FE513C93C7EB2528CC8B0472B5A579EC88E8BBC1480D4976695D2851AD
FE75F0E8AAEAF174FD8B2D5264FDA6E40432CB09DCCF5C286D5EB04E5A7D952E
716DDE9DD17F51C40339BBD717BA9555F70DBFCE390F10FFC62821D7082423D4
6EB801F8502449684418493C3E014D603933A576C6B0758D49F3155D448D505F
73A5206D1647639FBCAEA8108A2649D23FC552CAD67A60480964C6CB0783A8AF
EBB8E005813FC0D89420F1930E18323460DB56C9DF95B90D45EA22620C2FA7D7
521D7D4B3FC1FDA5061C6F4B994301864942F3C18428C06EF16DAA37D7CAE4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF073CC1D7732019B86C11D799B79F3
3BB09CB6771F637D534DE9FE49A53A3812D7DBF47D9E8A2D353B48627891CB99
B8C759187CF9112E3619F9ACCAD376725BFF2760B9ED7576B9D9EADFA0D51077
ACDE9DA732031E629834097D62B5D90F48DA5BDB8D01BD0DF36D531892BB3AAC
16F85A63CA278DCC38682E1BC6D134930242730DFD14B49376780164C5A1F030
379CC9E763CF518CF9E2DD410B31012ADDA5B9ABA7F5EB2EAC54DB67BF9CD44C
49474B134D42210504E4254BC7510C4BDFDF53EB3D5F54D0C6A53862B4ED64CD
18471A49B62240FEF22F4D82468E075498FE2FD44122E511E5FB2FDC8CBDF6A6
9012CF9846CE3A9A6DE5C947140AC48B22EFAE3EF8FE12D52CB3A260C7E0FC2D
A6ED47D61F83DBF89585DAB88E81AE9FD0426205126E4CDCC23EB4C431FC6C1D
BBF79938BA64859723C4637574DAA16916B8CC6DC32495D5247D877E4B863070
61E7A19A3AF4137889983657F78257CE77F03D0E9DA4E29707C31DCF1707AA65
83AFB9A309EB1599591812BBB5C8F3CE43DCDA76D261E3F7734DE2DB7D9BFF35
01E5A6D23CF1541ABF3B301F226510EBF89944E4E9C5376A9F2841845CB62FDF
58F84CEF83450F3CF96A040F4C2047DEB00A172677774217ABBFEDC33DF60D1B
D15D023EC0FCBE6548410923051F875718FAC168E4E2720E8D959D339DA26151
5C42555EF75A03385FDF6C7DFA8FD7D02B80E1A845766CDB597CACBFE0700303
409164B5CD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FD03763D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E388DBC639CAD5B2E83C049DA71FA49785EC
5565D2B3A261A66C9F2C8501A2E9324D5E6F0F1294E1C0AC67EBF4A840618B23
172EE2D3E6538CD9B1E12B834A6D01EB50C781646E30ABD086CF9C09A6B0FEE7
416646141CCA188014A29CCA5AFD1215D847550DC0F06DD1F83FA50D4F154867
B579F69E34040E2AFF508CE7AF4B0D544E70294FCD49BCCFB65347FD1767DFDB
6F85337F7B399827B860FB08BF9D15DA7739FAB5D8E03BD8F283FB6832C3E10D
341F8D147A88D61C5990E609001B853B273DB140A7DC69895E465C1ABABD4CDC
88310748221F5BDFDC2306912DAE1934E475C3AEB56C96D1978FC7659ABBE845
A08BC6EC9EDABFDB1CAFF5FB8203CE3B25721168DC1E382A5267627FEF41D963
44A05EEE4C43E2AE24657176B6C8D3A0EB5A8C229616709EDD4096C1D4D817E3
96C6A55FFA4D67E59B58C6D9BAD063D247787282EC4820B3C3A8D7EAC66D120A
3911D284DCAE2018F883AA804CCEC457CC6213EEDC75C8890DBECB670000924D
3BAE8E7A8066D804B89BD943B49ABF548E5D92C1D6151D1ED96241CF76510076
26E9D2EFFD007A8E985FEC263E6C90BAE36C27D704E88F1F7BE09A971CABE15B
724B62BB0C1A5263449707BC0ABED19F4F1ABEA27322584D473A1A888AA4DAE7
7864042EF587A6D6C04DCE664BF83492D166B205011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC5742D4D77F4B9576213835AE7E32A2B401C36C3D58214F6
DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C4D1F9BD7278685C4CC54FE1
C1C4332F05F5AF14E70FADCA465393A7DEB7DA08B3012A99FB2FC7F6FF7AE570
BDBA718AC1E0ACEF9AEAE22E5FA653C2698E05E0E072A7DBA0702C0CBE5EDF6B
D0A5B47D7929F5C9317680A392DE0CD7AAC72A99F351D824F86D33CC89BD70DD
41F435624F598030F2E7121F6A610D640FC7E512A28BF6C12496361A53953D75
312631D6F07794B1D853251462B4D522B6EF8FE6D2DC18EB4C02C6BFCEC3E71E
20E6D98720013BBF6307EAD2720BD9674E2AED09E56CC6D3BF927657BE2D0749
3302A5492BEA01CB223FEA3B6CA4D0A35D6F2C5D17804371F9AEBC100D7A6D14
14C37CBD273EF593B596973EB054344F62115963E3F61A1A2774E6837D2DB796
482A00E2BEFBD6E3758A5A1CE621ACE547811799B1D7893DF52D57BD6C1A6B74
4024CFC65AAF320264BA65EA8FE3B2E77F515CF05968797241B5BA06E190C023
55C664139419373923D5BE1FDD292F80E973E271248B2E3AF05887FD5142811C
2572A1D4B9F9539CC6D9F441AEB22F4E871755911D8FAEA73E35EB7835FA1C6D
A4635171C47A257EBC1FA6B40E10B77C81889061E6696F50954EB8B347918C49
20C7142A2AC68231DD2AF574910705DEF2893D8D4BD1C3ACFA2BC75EB9471489
0422528F5121B7A7D7A973F2EF67F2795E6DD8CF55B98238D6654F8B47476E40
98ED693455F82F098F49FF48762D1C9622E0B64CD190A4AF3020654123563C5D
6ED62F1387AA1BC5F00137C6AF5840026DA68D8DF87CD5567644A09B52124E10
51A715399BBD1A6D3704BCBBE1FFF89BCF8129B98D35736FD2CCBB0E36AEB664
3C283A61B6E8613BC8134939CD28AF21976B42B06A63719C44432BDB419B04C9
19DA628C6A5B0F4F626E8935AE2943365C505CF5C7955AF2EFFD964AB8EECB15
C33CFF111F801E31FA0889D1561CB28638D1D24AA9F358AAFF93B9564AB4CED5
632C12606449ACD326A76B011D9FDD66C24C5342A5575E940A10EF9A7C4E0857
59F390036755C4BFE971F6DFB9FFAC965ED71736140A0D41AD571329C7FE5460
ADECF79C3543E3592283C6770B4087ED9EB76ABFB56774C4A21133E594461685
A92D372D4ED3F9DB786D7E7245B9B5DE70958048F037C56C14FDBCE691048469
BC488E501EB5DBB042B02CFE90432FA7D98B533F89DB0F21A61657E268166431
92F6AB4C4265A5C2599F55E134AC2DF346CD7C05F0C4B63DC1C10E03B9D34C67
27AACF1040ADBF7713E3898334BD99CFBE66C4FDBDD9B9180626E338FA32B67C
16195DE9D59A0F447B8DB69CE8FD6E2ECA90C6B424F1D39D11670BA89B298DE4
0E91D1CBAEDF3D811318D493DC71793E84BBF3E2BEE2EB813B03690C774E6DCC
F2D7221490784231EA6CF28982A4470A7156F1C7312FFAE07D32B62AEA32B58B
8D127C00F3B953C795C84E1A158E799D50610BA45F2003568AF44E2EE4DE711B
A128C91C36EEE43CB41592BD13837B9EC9735996A1376BC209B8D579F6A057A2
7AEF243C4B389CCF9385CE645C882CDB6A03A7921BB9F85B93AC64F9C82C455C
AC60CC9896FD453CF3AF2307B191F79C5C6F070D7E814EFF05F881CD7EF43871
21F72EEB3A9ABF13F7A9C46AABD4D0D976EBE8AE53D3AFDDBB926B54EF0C41B9
8D10342A2BA4F9908402DEF9AACE7BD76B3D4A244E3AC7442DB6A705BCD7E2F9
DD7C73DE15B222ABDF7DC3B76EEF17AE4CBDF387FB03FAA5AD122CB4A90F479A
EB32B0CA993ECF07D050F04D4CA153663EFF8A63016F79C7D0E464A57671FED1
E50936B0CE6E364B62411E6DF77D4A4DDF74455394437C3A7B477AC27F75850C
FED5BDB2F07349EFC5134BBD646BED8080D44243E74485FB82236249FF6726F2
D6775F15948A9D4DC82D6F60D7DC6F714656E89DC882B95552C5215183E5FB51
605BAA7948D6E5102CCC8E7AEE127E914C372C6E2DD84989E78792EC3F50C186
322A81E6A8368780A2E815A7EC49B29EA2F4594EFA2C1C079B0C777ACD0210BD
A4F06EF57BFEFA0FBA572A16A81DD123F8434BE971D9EC8149468CC0F2C45ACC
D61E6DEA7CCE2D711A218FC3953EA7B36F464567F208953F9AEEC1EA50C522B5
A42C4A99B079ED011928C2C8CFA17D95D50A7C1599E62D4FCAB001D5F9DA84FA
530D65FD2738BD6BC724446933E8927F3AACE64BE6623CC4CDCA1DC0B686ACA4
41E316ED0CB3CCB6ECBBD05FB823FD79EEBAD2F9F0891F553381C5E352B4D7C4
C1678904B22D75C8E8D4ADF7A319E9EAC6238093C798878E5D5087FC5390338E
CC499C043E346A4DBA66B7EDE932FFD9780C75301CDA60558F65241DEE49409C
10DB07153317E1A13947E293CC426E38653A16E2A7EDF6D500E9237793DBAF2C
6AB5E2DB571739092A476FF45FA1A1CF898E3FF479C1EF67CE435AD93677B705
BC81144F2E45854E93CA8D00E814009234E2A36EFBD854F868BC9301D33BA670
0EEC06C030DC43B2245F9D24D31A31F06EBC65712C870E62BFDB244441198618
3617BF19EFB5DAF155F0957D038B6FC5BF776DB24668F0F4594572EAE33CFF78
6BFADE79FFCBAA6606E892B2E41A173AA590B6C92E254AE642A2EEF5D51BE02A
C50855B9158840F97FA94CC03CF388C8AF7468EB28FD5E0CBDF9E23D1FF320EB
F19E60F85CB9568AA9C68C085E87B32EDCAFFCED2FA9A1619C3D1065724C6F56
79589C83053D4C8C9B53912E217B51E90F13A589F452936A798BADF461C448C5
480CA1D7A929044CC07FCD6CF9DD7FCE413A0B2CF777529685854F63EC8FB112
3A12157DE158671515E8FA0324852EF95789F16A8421B4FA121305A1AE54DD69
30796B192862AD337BAD6CC06279077389A26E7EF7030CB43C182223AFAAEE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE1991088128B8B12C2B28A050B50BD46
CC83DDD732C8EA609E2857FE8377112784FC50B3E2940B0D30B506FB4732B2E8
8F32140F3893EFF849FE4E17A69F02E7B4C69CA806A1A347B174992DB8D542BE
C631C8069D0DF3B6F3A5A80891684979154D98437D6BBE4C8EEC74B6D9BB7D6B
C5924BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F09B9350C42F6BF7A4521B
21554098DCD8F7DA254922301AC847E5CE09E60F0839874318C8389E298F5546
71CFE508839634A81ECF5A229D2B16EF77A39178507E41DE72C0B30162242B3E
F7756A035C0529533E59108C550FB89650C5B0600791191AE0D2C2D576DBD6A7
3FB4C0722AACB08ABBB932D5E6A03F957B7C64E89BB59C4ADF019950C6276EA6
1AA9465BBB3A56AAC8D14E62B83EF68CDE87804FE10153467FC0AFC951B645E3
0ECCABC655E635DB463BE72AF1223D0690DDB88C7DA9D59148324E7CA0701024
42574818D8E2E330E2FE5102B7F4DF3E4FF521CA5741D8C57CCF85B7887E6A7F
6B6E4F61160966AF27B74B21C9F3D6882E3E909D80E0762C58ECC4E243CCE91A
946487E546C6E433A5C5B9FB7D5B97F2B4B202F94545C8C3A9D70992C1F31DC6
753222850ECF459A7BEA8D8482342AEEC5762713C43E7E94884C06329D340EEC
ED08ED58B05FA74B94FD084CB58F31EBFD5EBC6440498768C234573DAA11A489
B87A3C6A208E9CB0B30F7AC129D5E7217B10FF89AD4A78408DF8ECB0A02D9EED
19239FB927915A02D3D85B0C237669DC17FE1A48D20EA8C5D2A68A4127CA7332
E5039A2A7E32F2389255B0491050D86369ED418F2926916FB309B314347EE3FB
1EA13799ACEB62CB55BE2301E115BF38D18AE8461F466E207613B6C091C7A10F
D77A10F08ADDB19E494C72ED471DF04820F4F3A6713E67E7C08467C617E31DFA
524A30DB697FB4139002DD5225DAD211F5C72F3127A60A33D311387E6018F5BF
F946CE8D7834A3410F5E6EC14CC8E47337898E5E8367724E6A7662499EA3FCC2
78B616531C0CB5BAD1940ECE80B6479023DA0394E3CCA13502D03B122C2218B8
7DC1A0A15DCD491B2BA40939A647E01CA6143950A0D13DCCE128401BAB4E3322
2A22ABB177C6607F014F0310C1E7BD29FDC20E11094E2852779FC5C0D5DB9D39
648317DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DD74D4FB3A9FE077F2E6D4
384BE6BC394E71C5DB81E42B90ADB935FE3468186ECD90E2F15FDBB395191E6C
465F4AA552F9CB59DC4B0FEE8C937A0920796C09CB74B3EA1DA5B74EB358437D
0CEBB9E03109C593BAC09CA9962533B3AB0EE6EF76418EDA7CC6B8795043E5FB
6F899C3CD8486A6DA3E670E6D13BC51C01FAFED3D47621376F2A271728AB7439
3AB3183B6CFFE1D0E2948B24D2A7E6A98712527A7F3FDF0C07D30FB6436D5875
3F6AE969F727C534CE5C9001F9E7A0149021BE5A65DB754E14D890F42F4D23B8
5DB5F2BD66726A544C10942C271713B28F9F33282D2063886DA7006EB5C0F757
82A3C48BD6B7D4DA8C112653B00D7E484A88A248FD17FF0E7A075A554F98C451
C7059F491D1C8BE038ADD1FA4019E1C78B8C7656766444617C98548A8EC0CC14
829F7C67999234D302FD1E40C28703DFB713F881EA0F4B81A8F1FDE4B3C92CED
078A98A433D6F3C4B442E014E3E5A5E82E52DB5332A895046FF12D01742E9AAF
ACF2CFCAF0517858C28A24FAED300D643F1880D27C0F7D73029F171028FDDF8B
55080BBC908D26B5CD10691FB92BC2FA54A04EB649B111671B43973E31253DAD
08488B1C71AA6F08A5FE3F6222ABC942F7B152702F7E48B93155A7DE83B3A6DC
7FAF8C2561841226C56160914266B1D28D74185B0E0FAC89BEC8ADC3FC027EC4
7FB0EDE4D2906CF1B55597831D98B643B81D2FCEBC963155762A1019FE6A9467
DB7E5464F6CEA824787BF86ED78492C31CE4E8AD0913637E245B375AAA5B76D5
95F18A4289312E74FA9C289A53647EB6D776E3BBBC735D9E7226D2B353CC752E
FEC2E91DF8E2DC63650E22804A5B31B13418130BA661F22AFB71F8026DC8F788
188647382BE1B7891A84B9697E22FC61EE575564D48A537CB190E26707CDE0E1
B29B2BB9C4F4716519A4A62A05A7B901F7AB8E77C6FB72D7CB3D6953F1416C40
FE153C7E73D86FD65663DA0E08018ACF34CF9BA5D7A937AEBEEC84B992D45A26
80BAC63497C593C90728B12A42833DA3C710044C03A37A680D1F806296BBF942
428E9FADC28CB5AF48F8947D9BFAF2F57F0F6C4AD7C698D46568068F98C3564F
42D2F7F26014DE37C4DCCB6B3082CD71C69A1E1A3AB1C1298DF12BB54B3EAC9C
3325FDF74E1B6222A84D10CF5EE66EC13A71302C6786D05D419441162EEAD0BC
CA6315D5D70AC07AC571FE97F03509863B9CF7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA0AC8B5A90540E5FD5922F512C0A83999C07CEB7A37F71BB8C4C08
F359CB4473250995CB6F5DA6838536F3FE0B38EC7BB696C8285F78C66D154289
455C5FF2D23C1A59A2944DC972F44474CB35738074BCB9FEE4077CC0C49D7185
B623A143311EC892D1BB9554D34547816955434DFF68BFBC34A074CB3BC8C175
4662B5D3FC0462AC4967765A50D653FC3FA379FB4FA0AD9F83269A99D550366F
C8714B92BD48CCF7CFA30A7E92FA628D056602E7EADE6F2B3E168EE1B0AEBB2A
BAC2B90A514D97941B12553B13AE64F9F960EE62E049E6D9BC9858A3ED3CAA1D
77CFB4A424858251438F05B3EA1F686B35F0072DCABF52B26423E8BA630090AF
D344BB225F08F47868D6C4D857CF0A3C6CF4B205301FE5A2F54624315981DB9E
59213A134B651EB7A024989A6D910914C0224A700E1245ADAD0C701A6F5E771B
E54B09E2D6EBFD77645845B7C08389FFD5AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A56226D46A1174136F0A04A5CEB915B8E21F640745A0AB62F15FA8D6
5B74900DE1EA95B981FBBCE8D846DAE64D91AA7BFBD49CADFF1DC7AD838B897A
D728B35D869CF7874A1F48CA79E025C3D54743A3B0CFA14625FBF274F3794F04
4EDB9552BE2C55747D7AF3101C5F1A2A1BF6C0E2572AA0624592BEBF74CDD683
40D52E137B1DB6FF17B6629B871F0D3AF01E55645C56BFB97243ADC4813F842D
E44CD9352178217879909DFE3C012CF2809984881E57668BFAA1644FA922FC56
B0B93D32362BA966DDE41AE6A21FD20EB82747C47F18DC85145900305F388143
6FF377B1500EE02F9B9B8774237EF1899A326BEAF8EDE7CF319D42D7B7B61296
2A9DC4B8DD8DD87504652967C679E5629FE5449DD1BA7DE9ABEA28C4E2496F87
61C0638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B488136EDBEC1
4C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4AE7DAABC
43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D5398C145AE
DCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E02E82A4A4
310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B79682BD09
F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E73841F84F59E
0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A7DAAA94A
4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D6F1D46A6
DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA235BDEFE3
E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C97B6B8F47
63D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E394ACA6E
AD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23B0AFB2F7
9CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD65A63FD2
020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B14D4F9BE
76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA488C37CA
EF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703C7EFF67B
9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1AC5997F2
1A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F31039CFF52F
2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82DDFA79D31
F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF4932693BCE009A
5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37EEC59A516
F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8168FA228
6D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA8223442AD48
691C2A47DF05F6A7466E87D3020FB2D9D297F492DC248B55340E2A24629A4571
D7AC9D41CB1CD871395666525A66CED4C7C65E4402789D5449C1EAE25572A971
B89B24C4EA34ED7970566C889F7580291E4ECD8437710CB5ABCBF542F0502075
D90D8D5C92B3A5DB6B82BE461BA06DAA237F43C9519956A524A451083DFC810D
15C13657013193C8D83A659B914A4D5509B9DAD79DADB3E321F7ACF4A5C3757F
7F2F7FB43CE1F03A69148A9AF4418922E61AD0A92C1D2165ABB9F9059EEB9CD9
CC802AEDFADED447518971D17B6C14D5B2A021154D274B753AA96964C14FAF79
7738C1773B9AD2B42BC431C60418D244656DBCACF4FD754ADCB4B3957E1B8A79
5D720A30B7DE482DFA2B2F4EA38E7D327F0F4C117F34AB17610F5D7F76C203B9
C613AC9569CE318E21C11AE858AB0BD573C2E4B6873BC24F7DA45361E9DA0209
FB87B737182BEEB4E4D214B234397772C3DC75D6F4C27F992B1370CADC87C117
FB3C208612F02ABF65DA95B47B8C56930CA76C2B5CEB502575C9764019856433
A5BC9EC9E87FCD37FF357A0F402E4860AA1EF85DA46E6CF1472B62E5B02DCFB7
DC61766C8C32C4C9BE1C2A32798652FE0695FE3D11AA43A7F64CE81A00BB186B
6DB03261532247A8570D8234C82272497284B49FD0B1A273C1EDA6B778AF995C
C50BFE91EA5DFFBCE16BE8F29E054D8AE6823CCE5FCFD2D5B4CF559A079F2FF1
C3615FD8AF94F0747C51AF46854168068B6E7C7CF2E2432A65BA21DBEB0A83FC
660BED9D09AA6A1B7C9AF629B6230BFD81E2AC57A8E54B8671CB0B0C92106267
78ED2352CD5E55393D0D97ABBE2E2E919071234506BEF22737891913D14DB366
F3BECEB340174B5075BD1BF8DF1D951426BA4EB4992B5A523877A0D38D0DAF51
0C5EF83D1C082F1869429B0A2626B6321C7BB92529610091D8A9F09161A41BAC
6A15727CE914A54817D54BA0959261F9098B70D161B2E281A539F8903CE68F70
83194DC83C7784B7734022650FBDC39FE0CA077981D31EE3902D9683ADA479FE
08929D2CEF858CDA96B276C02DB29FED2749139BF0A51A5A9E0B6B832255876E
EC28E36BC5BAA44BB4F42B537DE4174FD68DA8D6B5D961BCB298D3B571CEC6E7
71B02211A1768768D62E319BC0C6ACBDEF8BA575387DD0D73162CDDD96166F79
5D7473C654F93676CD7156CC449C1204FFDA4D2FC79A2DD9070FAC9792851F1C
C40481634C777018C2E5F8ECF2D2873E36999482BF45A003B819B9240E0346C8
43AF01A8431626B5EC47DDE14A666942B10E15F853CC86DAC167A9E7CCDD1760
2B9DDA972CF72053ED0681C5482954794CA0FD6CF1BAC22B20AAF0F9C2771DB1
46D3D081B9E5E2BC3BA66933054518026CA3C35805BA4101E5B57DFE360D9A79
B8AB56EA0BFB2AC47F2E423410C34A1D841C3745CD7CF6EA2746B4240DC02A35
64071F527443F534C4E334E0EDC575DEEA0C73666D12F2D112B93EF7E2B3F6F6
07C8D81FAC551B3FCB526BCDB745ABA11C62B5D0F388ABC36137C2137DE0D7EB
BF2323C750C674154CB73FEEE0F45A6CEC462468AD09E6EBBCD1EB55B342D8AF
E712FC23069DF8D162A2B400EDE05DF412F5D3AF84C24E3EA6496A486815A615
0C8063B5D2D0C03EFB23D0346B6DC488FD13E33323F969C14BB2980F7880873F
E0D8C5FDCAF439138776E7DBABC3145199DF6DB27C986E2ECE566F492BE91D3E
606E4A83B0F6AADB39F36AC8B75F5AF5608562153DD6A09E462ADBE677E6F550
F9392138F5FDBBEF4498694C0884FBE6911B1ED7148B9DBEA829DFFDC4FCD4B1
697443A99FFA4491F2B85D31FA193D2A423ED09D98769F099C8FF9B12A99BB88
B018D3A3FA2570D142F7D6039F6115845E21FB2D04A6E73B21EF6C43C1F84EDF
F3ADFDE37CC5A8BFA27004F390A9E7BC95A6425CFBD042F61A533698803D7B49
B793B3AE361752E44EBF16EF3C433E3B1CE1D4F04E229750408081A183BBBACC
01394A174BEF5457BBD5BC6E1546F63B15C0E95C4016CA528EFD65A0362B6049
575644DF499E000AC0DD66D5035F4F4BA4A66901948A2B1EAD65E327533BC1A3
EEF5BB2106F16DD0043E90AFCAD0D0DD2D55D65A53AC7D013C3C685371FE4ECD
63538030115B4AF2D9DF46E1E5B36E223885BB7E1E8B28BFAECC3D34152E7A95
0505550B8420A45DB0FDF9B94F0EEB86576319AE8FD72E288AB89F4ABD066FFA
0C1E746C7B89C30C25057A23DF1469CAA260ED4AD93BC9534EA4C863878D79CA
F427454F554B6B6182B53B81600AB819FB02988E9727FE6F8AEF5969EFF87EA4
00501A3B3236EBCDF84D69BD5B50DB0379832507E2D44391785BDA34FFA7A950
8F6836E3CD323B86F7C01070725DF295DAAF26344FC37E8EE4EF7F2450F67A96
D44A2CC71B3B327B10A4EE620EB7E7F02C11C1B52C95B6B66A2DF1FBE19B8D86
5451F815FF783CDE0A5A0B345E8350B8F483C8F9A94512907A0811E8EC4075D2
4EB0682E7602CC252BA8AAA86D550B6CE0190281BA4CEBF16ACFA4FD94730CDE
7888E6A2CFEAFA21AE6C39FDE40B9D08EF1ED2E41BD96531F5B0D2ACEA0EB86C
80F96777427823965F9090FA46F084A6D209E48A0FB439E97BB1CF55796CFFF5
5D0F62D4177FFA919FFB035784ECF6CB66BF597BDE3FAA23E4F5A0D76FAC9701
AF19072AF55CBCC48CA8861B0BAB5E6251C1F89AA9AB1F8C02D0DC35746E97C2
B29B7A431AFFF9B6FE6C044F76265BC8875392B5354BD38DDC10653690EA5E9B
D2275EDD5E425366E26B7059BBB61BC9436044C3920853346594F0D3026F4900
770B39B2886678E90542C7D93C5D9FD9416A2662FCCFEE48E79225D7BFE0147B
05F6AB7B9E2AE33CB7AF75D4C6415B9B58B7971EB6A1FA8E8D9DD4C8E0FE813D
368961F1E0847C9063ACEE6C0639283F42E7EFB30F910EAB7E9A77A1671AA881
ECEE1C77C14FDF9407926A6B3467A4AD5F0D63CFA57B69EC0DF2A546BE6DD1D5
CFBF9D84B0EA7776154F91A7F86FAB8F94EBD6B5258FB7581BC0E605A1D0942D
52F4A6B7BA4694F804EC6DC2182FDE51196F72328E5FC8EDE7321DF112DDA778
B1E50BC3B744AEE2F5C10C170BF15DC022C87C80B09AA1AB8115B82581629D0C
9CE96F08D739E2BDD299569EE578A0F2E627F3CC4754257B4DF658FABD99D301
5F6D8CCCF97174ABCF4EBF022835A7D763FC7D32096C6A7E4E081D61DD7A3FD9
373F9A7106D1B7A07895FB592B70D96E3F2EF5D976A0689E9EA51E667869550C
5C73D8A9AE183F083F4068CD684517F4E01EF666B3F4FD6493CA2A307B3D99A7
E2A0E8BC3DC6AC7EC029ADA68F6A0DDC1BF80268E5088BDBE5E056BF2920A783
D80234B6EECC77D163847E63D3C9AA412D170F401C645BA159C95E15300FE168
FE00B0D3A2166DA832956FBA38F8BAB09E1C98BD1D25AE7E02C38A082ADFC981
4A6C25089ACB08A44D981673596D8A34E260B492FDDACF4ABE809375826B436E
6034030E5BC5ECBFE0998BB49D93C41B6028FC2870E4E57BA1B4773094EA1950
02C9C158BB77EC34B98BD1099644E30CE5DDE591CB23CF4ADD2FEFC831E454F8
D0EE5E9E36E55F44252B5C8D1A2E0B10EE7934C215451BC9D441EF8278B9D00E
A80810F5693236039B860E4D935429CC99B6A1051D63F6CD3990FB366D2E02D6
5D54DEE623100F6E46490A01F567FE853E84FBE34E8FD6EDF70B1237FAD79C39
BC0C981295E19FC30618363E875234D5138D9726E4C107DB8AFDA033FE2DB457
5807094BC15E6CBA2394CD0C08DACE9FBD1B80C2CEEDA53D58C697C487E3C9F8
25B5BD086A6E65634ADC97DA44BD9FA34500F72B7B38CEB8258173209BDE2CDF
6BA2E11F15D300A9E7DB8EA194DA5864148CC1EC4635EFC15D5D7BA5444EB942
582DB27E6C1A558D4945B274F03A043EC405C65FA60A98D6E9ABCDD6CECEC988
5E268F936A1015AF245D194DF08AA86E554A2C842CA1A0B54708441DE5A1A15C
14A676EF40F0B1FD936FBCAA03E37185A14FE17F1D42B924A7799A82D7EBBA2A
78A033B10F327FA3BE68C541EE8DA5E0A6923FF60DEDA856EE7C24B660C83D41
E7A8B82EAB6FFE9C2919E4AE0F8F6714ACD5D2BB98B011650B2A5D8B881D6854
DA305BFD91BB4E32ECF1455DBC3E902F2AC3ED51A3B369317FA06334C7426854
21CE3D57B9784DE4B5CA81DCBE0486963A0F5D7371427BAC81B31A8092A80B16
9FF26E44207C98264D9C9D22F16E40184A3697C368E4E09A0E215A3ADB2DB97B
20AA7D44F776816A160C72924E411361B85765E61C972A38E423874D699CA4A0
EF3803FDBD24F1547856FA2C8C10F6B6CF80898FAB4BADFEE9ED0300A999AF9B
DC42C781963830BAFE4D6CD2356A3D2733F050DD9A132955A674C60D5774E77E
0ED24E62F5A85DC9DB82134B1C53AF1802803BAF5597570A8C6B0B4A5E0A44C4
F677D3E2B31056F217B2BB9C6F38617CBEE762A17364AA573E6EB9881D0B12D5
5859CD17EB731CB63B3CC3F45E2458B4AF11A7366C4FAB27ADC304A99639761D
2F561AF122DA22C4CD306406B316B1705EB7C713DAF70E3383D1E73023BB66A4
AE15DC7959BB36A10B51E9638BE13E8050A97238F88827E75E2F51339FAD5776
CBFF3C5D2617F9A50E224F50A0E9F15BC58735B72F30CF759BCDB47E5EC54ACF
2209E54920261EFF75F449D35211621397722398093CBD222B559CF79371B1A4
373E71661337F1F2C83C47168665599D948896FB43C31F703202B47C758B40E8
7EFB947F6EF31DCC61CDDFC39A277186B7FFEC04A31DFF256C6198A819D55C36
D2C5556D4AEEB0E68DB7DF1DA1BB41D984B457154D1DF0103E0A79EA1000FF77
CDEE3F0D6C30D4059BC9F9DD82CC123F00FB3F5BEDE8DF91058E7AB0598BF3F4
58A9D0B5764CAB12EC5914E47D092A699F1B16C8ED115437A8EA8CD328F1BCC3
B83D7789141CFE611787C952E7ED9A7C4447E7ECDE0A40D63870B38E4100D67A
CF9EB4C072D3196F99FA5E30E11D8F99B54AD573C0386EF93C796E4644E66664
F38D3767EE6CA0528232C3E4AA6AEAF8E2CA22AC03C7269D4EFC52D90EA1C3CC
D41ED86ADAE9C01123EFAC56305189728758241D75D2E3989C3BD46A0E19F9B4
6BBC0767A5097D8FF96CE8A5C8F9FCE901131D575196D492B96164546A1CD086
16E674912B25C8FBDA1D46AE862807B292A5B86BC3DF5CC35CC5254CEB2975B4
01A1E45E09EC242EDDA8146103B7D094FC1DBFA8012920F318C38647F95F7E0B
679C0D5FE02E0CF9AA45628844A54270DD0A40D63870B38E4100D67ACF9EB4C0
72D3196F99FA5D03FE1C1497851C7B11300C3D6948D6FF4B35E682CC4D54F7E9
0CD12E44EDF8487C1626E9F42099F4D9EFF8F6DDE81FC2CE7BA777B592888D38
EDE68FFB3EFE838153CCFE5EFA7E35DDAE6A622AEBA83E477B00A3527AB42835
97EA0C66A69497113958A7DD2A69D1C3EB0FD63B52625ABD0F0CEB9B96FE8BF5
7624B10D14CBF511921DDC2DA90CB01EF65416294CAF223673F451FC750AAE04
8270728889EE5596C05E093E5C526BC73C08E4E7A40A4B20B3DDBB1CECE415FD
51353AA3CDF6F1605BF297815E20B7C261CCEA2B02606837B57B4F38BF32513D
5EA2092C271677B03D7B7109D7E2882951375BF8E9EC27CB2D55F0F8FBE4B0AC
369070B3EEC04549DCD60CB7B231209ED172E1160FA3192D02B42E1A706A9BCD
0865456376B564F14183C30E5343D2CE65C1B010A5F5C34F34EE8FBDBBEBD4A5
14626C26F052A95D65D942ED54E36A6980C30EF7B323D3DADF42D431244F0A75
9F69D60EF70578B1A8DED24F62FEDCE93A17819A13DCA189C24257B6E6AC061C
6F4B994301864942F3C18428C06EF16DAA32D4B0EEC8611F427FB16BFFBBEB73
850E2199B8D101CBEC4BC172936F0D6F0DACAB0D382B2514321AC39763FF1971
65F4B6413995934DF09593D8A52B15B471F275F9F9CA2EFEA6D19ABBB21273D4
C40A207840D6DD0F8339D1035013D121FE71C19584777E6CA510A921B50D54CF
96BE697D90CF0F8A4B01F9F1848E690261A5E37FDACB473C50F4D99B48E8F291
69E04E1631C16076ACF457714FAC3CF1DDD1138FCD3D8133FF476197F30B005D
700542735EDDB100AFDF7D96F86C73DA6B3B031B0608A63C2217287E67F61338
8EF32D92729B9C21623BD5FFA34447BA6672A6FECD532ABA4DAEF7AAE796B055
0FD7BCC979EF932A5E64E2E417C6B64D84B19F7C2D7C143E2878C76EB2002E68
A7EC2AC67823AFEEA01521912308EE94EC66FFCF2B7B6B3CE509264EE2FF75C9
CE88D17D4C3553A10F88D50CB5BE5F12FBDBE6481D67434810D24D6768737E91
1DD383BE2942320C8F54044AA6A13F05A35AF2FD47F7245D182B5C65AC04D5E6
2FAFECFE7C1FD1BB74140BB1CBF198EC9C64B9689AD5A4315AE0F672BEC1E611
E29C2B47F3381EF256C0F1A4490EE2F1C8DE42D5CF3138E08060DB989AF3F538
CF0D5D1234E2DB9A16B9C0653AE72F666D681A4FA8B2477893175F3008EEF553
A1CFE038A136F8256B7DCCA0D7503A0750027042AE2ED14713F59ED2C0E7E2EE
6A389F64F3C4CE59ECDFEAC3DFC7078171719570AFBA639D9AC06D49D4F4D92F
7DA60AE589F1A1AF4513558F46BC41E42F1E3120A19768A8941853FDD0B65D64
E40E60CDB474EA041DBE2706B97A1F2B0CDAE87B801C0C536C101AA0D77A3B65
651CDF7134D303658881A9C92C09B14BB2D87AA395EF6E1C8A69E061E0B13BCC
0C763CDD3627A3737DD41477A8BCF7CC0934F5041056A43F90D0E6A47C2521C1
058E8C6689492F62E8CD5DE7E5A67D422015096D6A998EB98A49CE1B9FC9FBFE
56143AC03A0FD1809202444C7DA9C643C352F75AC87DAD55FC6BCF596A5CD4FD
1071EBD5C999572EE94D8E10D3A5157E4115CE3B6A3BB452417F1D87BCF18973
3668A8DAA93ED145F1B6276A386CDFE1004711F950860B30F96DE8440B8B6C0A
4A50043A59F3B636DFD7B904E8A3010266862CF39FBBA573AADD91993E707C32
B0DA27F1D3D5236EA97982C0D9C902C3D5B2112E0897B3354EEE370AA99FEDD2
330BA2F38CDA9EA0AC1EE47F41B806E5A38D29974F68EE1962448F7A9FD83C7F
1079EF9403EB5B24698F6B41DC1BD6F08FFB4BADDEFB530EEE0A7832517908F5
8E5E195CE4291709DDECF28AD24E54C639A31644BF123DA78DD615C4287ED7DD
43B679C4D555517BC04AB08EB03EF22105AE17B1F03D21129B58E910E0413115
83C14F86BF0CB18D048901F2F8E7F34944FCA1CE382A39A8E1778DAE833D64AD
E41D9E8C6A195EE6856DD6F5B16CA72F10CA6258254297216425EE0B2B7A262C
560FAC2BC019A1711978AEA4FF9F8E856953589763555F598E184CE235D436D3
7D31BCED986A2713BEA7AED3D3D8FE7A74E85A68531FFB57B3DF725DA3658A34
CCA62C7535209C546D9201261AA71B05F2E629B32601FE42EB033DFBE2E387A0
EAEFD03A12376C5901B465AF25421169F7A21B75F34987BA586C6FF368ABDC46
99B5F316B59E7BB99EBC7521DA5BAEF8AED3B848E234917820EF5F67871FAD99
2447F76CF16F85D0A04140B42F1693BF524CA5AF7D1406F8A10CE2D1A392ECE3
E3A5B4F066876487792F13685C591E0E2933F73C43D4FF3998D39235C7430364
163AEC6E911191B06F159BBBE9A505B7C7022A2FBC90C5B6C0745AF40B30A241
B262FD6003B496CF880E9892434B9CED332AE162EEC85770D85EC0155DF0BE68
2193E60B2B5FED8BF8541250B992E390F28525B51D49C48DAB045F5961613488
0BD8BFD50CFB2B148DA3489F03F9BA2DF35DE06DC843B5446A9665C7B7A6A7EA
3B97FDDBB02799805532216BB40CBA85C8F6D2231034AE5A4971F5EA766B6EE5
5A0255EAFBD3CB90165C50D017A96E86F969D73812275C91B9692F8E6EA32450
14B43BF2C33DC31FCA94F56F2EE78E51767F35DB377D598AB20A52DABAF7035C
85986DE59AD301B93AA7F1A83A09AE97C63F4B86A143828E66644DC0B9108FB2
C91B22CFE04283F4BCA5D04EF4625F1F84251854E2C063E4BB9646A156B11311
00E35CFB1CC7432A5967F4F9104D12662695BDC4004A3E71F16BBA9E4094DCC9
278DA4A6383F955444E4D85F3A4B29D5F9688F1304E3325F04D46EA7DC05D42B
1D6A2AC0C7AE3925BB9317209E3A0574363E157B01E8B11BB02FB00762A522A3
DF2BD02F0CA2EE9DC972DDFE5750B9009F8741061465C24DAFD8EEFCCFFD383A
1FF88A692FD037572E4BD892DA454ADA818488C0373276D0A4757D7AAE13F281
57D31056B9BDCF2E4567B73012B130536BDAC1CCBA0D791A5346DFBDE1549ACA
4D26C28195A1F4C4CC623B30B076D4861E89A86F6E6B6DA2E75BA9995538EADA
B74D3DCF35CE7CA1DEAB383D10F3E9CEB691AA725EFF8EBB73F7588F296D0211
EBBB56D89B4557C7192CCD21A5252638E44CE1A0C2BB7A6697F6664AC6B6C1F5
650255776305892A6E37E3194B95714559BC69D21AC4F1156404AA533533A8B9
A999507BC1668D127A59D1C07943A5C720C4BE1B5AAA4E044F3F0B29ABD81E28
9B58C0B3D0FE267EE0682D2174F4100204D212B6E7A84CC797802E2E30E3B9D8
5E31C230241E3E2F47B265EC4F5C6D3D7F2A15B42461B54A3B9A3F247467259B
ADF061BF5F70E4BA0CD7D2227F53134B7CFAC4FF8CAF758CC62A6765AB1CD0F3
EDD3C55FE73DC2D114FA43CE0B06A5B8FB130A3936C4504264C4D4EDE141307E
76C13ED37655816E5DA7AFF8145444ADF77E099B0AB9BDB8192271B478CE0B38
151243D996C737FC2CD672CF62243F83C84E9A875E03774474BD86FC52B28EE6
2CB2275A21A0FD2FED9D934A9B97166F2C94ABF1060F086B4D3A1CAABB2A29D9
3DAB8EC44A7215449DBB50A258E9EFC4E9DA426F9E7F8D2811727965C75110C7
37564EACCE768714D7430BE1825C90D88DF40E7C95317359B9BC53654E4EA1BC
3974206D4EF92EC1E60FE3CAD1571D44ED014CB9CC49C5FDF45FEA58F1900431
4F1CDA37184E620C8C9F2834C6AC70503BFBF3F5EDDC3C91D6F4EEEE809BCD93
6FF4B76DDB821EFFF0BF94159A3E917C6C2E033240C86703508D2380278FB9B8
E124FA1819AEBB6A5817AA99274DF957210A401145ADFACE8A1499F973FD9B37
46D983B0BB9E1675AA41B9F67137FBA930A59D54EA09C0E2FCE8507F619CDA4B
ACFA4A9EC99D101BDB4E2E6650DB6CA8EF4C2CEBFBE5464EF41EDBDF8B606315
9C32943F0F6E73D8A0F7EF263E1949ED04AE3F52378FE5CA9D10043E0DDF5406
C0316645AA63551BA672D2C3C67E71D8BE2B10FC97D8134214DA14D206F0963C
ADC84DA9CE87D81D4F2306F0F4CD8882D5542A52B45F613AFA1A25D08FD13FC6
76B149452AA0BEA1625F9B2F44BA14C61A71691D7B1085F9BFA5DBD78BD1716E
9F4ED778FCDF4C21B59E76F4A341ACB628F3C6F49907F36A75482AB01D1425FF
06DF3671E2423ADC321AC54E28518B4FDCDB0A80511212F34D452E328C0A1D3D
F724510D2C013DB223FF6431631B5CD30A95C3D14237E2A2A839448797F387D3
BB217CCDA47CB7619CF48B8B551728323EB324BA632635F8DE919D564835A9D2
4622483E59F1558E48A4D998C57BDA990024FEA22CBC94A1696471E3C1D4269E
F71AF75ED20729DBF75198D0573CB9EBB2CECD76341D757B09A3E324DA60A6C6
BC3AA9EC43CAF97A5931B536023D1B5A2A0104F8340CEC0051A4EEF64B55E3C2
9BB3759056CEA7E244FF10B88C4C493CC5B4D90EE76A7C997C3936760438C831
206141814108C1BE1D291F49F1CC1B5A8309DEFF7BDE7560F3FF9AA4CAF16634
BA0704A37BE9DFDAF0FCA36C35751C226871F933298C128ED8ED1B41D2BB22CD
95E1E494F1293DEF24A715C79D635CBD81DB886FDE5BD921D6A7DAD6C6D5A2F3
81ED4A532F0AA84C7769D41AF61638A03BC9043159A246873BD474184E34FD2A
FD3D6C9E852E4F9CF1E69869CC83E06B7063BA7464AD2812D00FF302F51CAC7D
296388C133EA7F5755897DAFD788142560F0C741E57996C3C34A3CD42FD0C4E1
6E5D1D1D2CDD2A32F91C219EF3ABE4CDB1C0FA97952E7DA4F04E4E3DF86D9C2F
19587A2B50546E98036901B84A8E658D813B7B5122FB9CDD5EA4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75B6B271326A2E7B313EB4598DD7FEA
4A5D95437CBA46D85A5EAD76FEA956126B3EEC337FF78D906699CB9CD7B4012C
474EB33D12DFABB3BF569214525DB9B2D4B34136FDF936F96FFC813FE16DA5F7
9B0F2B3110B1F8C90170E014FE8F31A5FD35CB74EF0FA13C6DA74D7264618562
DABD7DB8E7F480D0521581902848649AD3EBE39E618667C59EA499B7081A0844
B6DC10555D27819E6CAA1CE453A7A68EF1A3EB2178BBF9B9BEA9DEC679DC10D9
E3553DE260FFD590BEDC71CA9AD4AC12B09E86D933AF49B4CB901556E63BD639
1B3C3C3C80C46745E1CA7983B9E80168018E04A84AB47C854C73FC58A393974C
1AFF488EBB29B293905951355C4D4A4F65BF1A72956515750DED0B87A8D3282C
72C634347874775B6F29EB873134F6BCC2EBBD3703E9619F762D64128A18C957
22E6C0DA907A17868AACF3229C176FC26BFBE255AD62737D234986AFF04FF03C
1DB4D1F2D9F60CF2E4DC5DAF88EF3517A2D91CCCBBB8753F92B3E0CDA5D26523
B84CEE3A0429655F8F25C89E65074A52CC6047885F4105DD62F1FB8CC7A4CFE3
22EBEEE15E3395B062B933EB55FA589373CE26568F78981B480F688646A5C8C5
63B8FAAF19A1F6166685C3FDC27532C931AC8B86E81FB0223686074ED596FA6A
922B662575F23B53B7C6B245AFE90258E743F284E22E30D2B418CAE285AA38F9
FB436D39371781DF4FAAD1CFF3BFEAA81F5D11DD76BADDD8122A4AA44B9F863A
DF8127F1FC35DB9CD34EBC684818AB259FFC3C7CE34C9DAEE69D70D010C70540
3B359BDAA5B9ADD10F6F7F2C19136157C6D83B33313266F1BA8B9E065A0C831A
47D767D4558876E85ABB0B8396FEE0C3327CFFEE23D0D7C24466E5410DD289DF
78C335D2BE90B5C581D536596D97F1F463EDD0A9C0118790E5780C0AC27A05B6
4DB13A023A3E5225E0377ED38749AE1F7714AE5E1D649A3AFCBBF060F416C0B7
47EC5BA54AA743154084CCBBC2A47037DDA09D9601412F731039746C1224A29D
191D9E221C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C3EA93A0BE63CDF0C
D9A4546C9325291D11D02F4C2284918795A5B6E6CAA4CDA0371D452F65EC9097
657F51E83FCC22A30D649B80CEFD9F6FDD51AD33D3DB732FF26650A90912822F
9E77D8AC13393AA1B04DEDDF6C37B2D1DE50258300B9BB455AA872810C7948B1
EC866883E78F23DC9DFF60701F4F7C66B61198F8066DD493031D1A5EF91231B4
470B5A034CBA00791EE592FB4DAB538C280A8047F6290E265C8A88331305E67B
EEEA9A03950593605886E125446E5CCB325BF943C3D7F32D49651F5744A27DCE
6004208003A95DA1371E2EE456CC692DF7B71EAEFA2ED09E82012484AF7649C3
FA87A3AE44D93FB7A0D1A7A08A419AFFF7DF7065992B084D567645EE4D2FC29A
888E5E51A42920248E4BF77A7876799B1FD856AAB0EA73DCCBF7FB5979EF5F01
2CAF413DABCB3290E29A0CEE18F02BF93ACF5E651F75F1C47F2699BD0DA86F7C
5E18E1895ACE4B125EF346F608ECCD4DCDCD47DD7717EBC78AE3DDEAB5333174
18A8E967F635ADA03D2EFF80D463A521EB069C2B6271FD736442AF38A52EB58A
59D7A62D97171B45D2A6AFFB7E617C9265B466295CF70CB228FB295850D653FC
3FA379FB4FA0AD9F83269A99D550366B880AF05F913C074EEAEBE390144ECA2E
ABD1ED2BB6C54FAA70C9BA6C6794E3AC06D503EE876C915252EA75E6FA113380
E4E2A0CEA310D96BDFD883642BDB55525358ADA70C5ED0923B060EA6EEA5B735
D0D62E41842C07B79C0E8DC56C55084EE590D2BD58FD9784BCDCC3D498B69CD1
D7C24466E5410DD289DF78C335D2BE90B5C581D53AAA27CB98A914D22E25B41F
E35179D5E020790534D6BA1670B6783FA8DBA0D35DABEB8E162D2EA2ABCB6CC8
DF8E44430383881E5ED0F7F184DBAA9A394D0E08138E5B80D224D4E8FD6F8BD3
255103D823B86B712CD58FC2FF2C9B963C235A59BC191B84B9B6A2D87B85F21F
39F33AD118513BBA722CA46E21F697AFBFEE1989A09F9F9F7F29C1E0C0F28E3C
C64BB4933D3AECC99FEC69C3B047482C0D6F22E851DFDF1315C0679C0906D77A
B2144E810FFE3A942963C9B2584CE14922AAA9E3456AD60EAA44317BAA8D81C7
33BA78C0DEB8D1A2C9BF7CFAF3F6C87EFC09B43D790D3E80AE0EA0AEE1984C59
0DB7EE142C2444A3F4DFAB0C651407A58102F825D9534F2C1768DE55DD354014
B4AD13F8F95AB9B462F7A5950046C9C4A8CFF3CC3738D894770AD27F2BAA1A8A
C49D55D311D7B27E77C664BA4DA424125D1735CDCF888572C3D4E2F0230BB1FD
DAD562E249FC2F1392F7F378BB1754A2E80DE0D9FB55FAFEE3CCC1C812E9FAC3
31FD70975E3A0C72D37207D8A6034994F5A338B85C4ADD0A28C7A8FB765C4A04
DDCD6E0E7854CB47132679FBABF1DF31D16F8FA295CB56D75A836ED366963BD5
7A5FDDECE89ACF7D2EAABC3C655C247E6AA58C7B3A65D90C4598DE6DF2AA81DF
1E7AD672C058BC13013E94942CDCF8E20DEC5CD4696759CC337B6514AEED350F
45EB766C4ADF2EBF18F155CF537A97C212FB23022E75D57D24147D284196D0A5
17320294E3C7A3A1A1BE80ED8FF0A9C509420006D2229CC525B2E21332AF97ED
907BC5FAFBAAE31FCE73C77BFD275F6CD038A6DB9EC1FB4AA5AF31A16FC07D58
F6AD35B345BFA1CF7B0E9545795A6E62188B643BE9FFFFF69BF0E7C694E07807
E04F51013AA2E2215C03ADCA175FED41854EBA64EA1BFCA7B9ADFF7F4ACC6DBE
671126FE078F52AB62DB59A9B9AD1018F245F33A42CF224F327CCEB361EF2E2B
DD7DB751EC8C146E17EAAFC942F80C2313118CD80744B1160919C81067D75442
072E34982759C289C8F929334930B4AAC76A132C32DCBECD227134E7F747AEFB
6809685156270A536E5DC0236DA24612993121152E7E72353B4E4A19BC80F638
158DDC1B6DDD5CFAA56386D2232E51B3AA708541C4671738A1E0CC16CC401640
5B0F10C340F24A30B1C3E6AD87C7D4424486F4D2504B044E802A8B30DF26FC38
1D8D871D0D96566F0E4910D17124056A1F0AD7E9C1807ADA0EE65BF63372B918
2E8CE99142953DBEE0C0104B1292A1F83517BC28709D3864CA389D6CD1041740
7AC6A0DDA1E77D37AC83F0991A4EB1258E47A4E04D0DC15BA4F0C1D12F27F5DE
5E37A07F94A89276B909954466C7032C6FD3DE6ADE20EBA3FA90A309230B93A5
B74FF64283F15EAA51DF4C74CBB662283EA2C98CCAA3F64D2E64AB21C48203C6
08CCC92CFF820CBFE005BB5D4B098F3CC567E9DA9952F5F95048B505DD5C1BAD
049517C3A95D471EAE9D83E664D7CEF78D51D427D2A9126B689964B87ECC23E8
3F19351612FB0B1E70D91934375C410CFB8AC6C99D8665CD7E1CF880F99229AF
C16232CEBA6D7B35526797A8C94EA0723B3062409182103B078B6D4120137695
A8BE5DEC8383E556D1067F2D10E43F158978ABC35805453F84CC5EEC991A5CDC
8C33DBF86934B5368C099B59A7114410C608C749D1B7D493E67EBD9DF99EED9A
ABA70EBC005B7E807A854FD70F27639BAF68211DD20AF3D34A3498F21B00999A
CC476DBE2C5E7F404E59340CA51DBFEADFF2D6856FA15A36EEA17FDFF093D02F
B419CDEAA8924DD923B74F252664C67CEF45743658D8D43AF001ACCC0284EE83
D6B900DDC00EEB5E881FFE9B414C45B06FBC491330279C671334298D0621D516
6AC107F3AA081661CB91E004CEE7220A24C71BBAC196A23123BB399318B4D2A8
36F88D24D6FE3898D6D1C76D8F8E2C75D7460CE135C4E1D0349033D576ACDFF8
68AD600D610E32BDC63998EFFBD8BB34D2423CC6282C145F3F0029A07BA8C929
7BF8B0B016EDCAF80B9043EB61A3BA3E78F64ECDDADF68975D97F94EA8A698A5
CA287EBBD5193878AF0D3EE755BD5958FD3632E670306CAC950F8A1F66D4720D
DBEDC0E0857B057D019BB4C3C1C751481ED7C692CF08BD1EA6C5B30BE280953F
B8FFF50082E28A8D951207D7C494A7B2784E050A11FE8B1CC619F387E700EED9
D0956AE651C28A61DEDA9859E01101F5604685676CFFF64C9F2630CABF2F83D1
37D226BD5EF6EE8EE1EDC4194F1012D8BB958B6940681AEA50C7C8964FB0F377
23C0C4BFA4DFE3FD4AE99F5A8595EA873728E2C8B6D05AA6861E3ABED84D6761
ACEDE777F2D3BBF85031E42B976BF76149CEE298FA46B57981087E31FA46D2C1
91A16ED86E07D8E45FB322FD0B3D25692D2A0E7C4DB93BAC55016AE065951347
39401B0D8ACDA770B340277CE3950462318057F893A50B1BE89222348D7F09A7
FB9144E9162A946DFAAD95EE0B346EBBB899F1F37A0F89D4DAC9B7B0F3348A1A
FAAE48BE88E0E16B8E376035D6D75C10FB83D7B0EB9DCE189314BFC6A128924F
34C083E289918FCC37040DD4771C1218921FD978D54413617494E68E34391E25
42903355658BD278E67696161CDE14626D101B4E117C63F2E7A60627DC40CB9A
B1634701AD9AEAF5D11607A783874D716DC73DB1CBA45D33E0076E992C7DACD8
026D7F4C5AC1E5D796C0E5A79C61B5BF586A0FFF6BD2983A840B68D656FC1584
2D694DFBC7D7800CBAA90F3BF0022E66A54BE1059BD5D224B674AB4D2AD930F7
F724A305C4DB7BBE9E3E9D166FE9AF6147A8BC97C6834B365C39F4F5C39DC16D
F38ED4E2751BA59C0E9D7A0546E34F8BF633F656FE32F1FF453232617FCB7419
0A46165FBE654065FEA56AD83B17114EC5A7245AE7D9853223CADF1D781A7E4D
07DB3D4F16AE25026F52A8DDD0C9028D5B251EF32A329A624148C46F02C06DC0
6EDBDF4FC7DE2392905875FC28D07872F48FED6ECF7ADFBA23B66124203536CB
04FCAA433B9C6D4683C6C6B46A36ECA3A2B2AD548B7E6BC11F3404DFB91962B6
7EB0838F0E570E8CF04E85BA16BBB3123ECF3733A72A52F7F904C17DC217C7A9
CA604CF8401B289C1AFE778297F5248A37F2CD354ACE5EFEAE295973F7FA2EC0
8BA400C2BBCF8152ABA14FA9FEC5040D1B278B4D30DECAD8C97075573080E67A
B9F074981BA85FE7B19453C2013BB61AEFC3A15FC3CBB1E614186292D44DCC6A
69F94C1E03F1215872715967549F665E4D31FA89D07F9F7B71AABA6AAE1F3C1C
D65F797C3D02191EA2AA3B8A85038832720291FAAC68BB43B9A09A43832B289E
C07FF27F93B72A12C91CBBDB130C200349628F5956A835CBA540866CB82A2248
4EBB508F45A2D621074C5B93A4B520F1284E1B7C5D8474A5E521E7AD69BCB87C
68F1DF66B627B992C83E67679EA3C924E8517AEC1141FEB78E3658C308139AD4
4F7081DA3E8F839EECED8A0313F0A6DB604D39EE99D02D3FE7C02D0BF476D768
D438A2C24653F345F4642D12EA28AFB297DE661883CC13A06C3620FAD86F61ED
E3925484E3FA45344C7FD3D4D3A68B7BBB2A964AB2BE5A83FBE336D8C2D1325E
033E6CA7B01808D190FFC22AF831712233AA23BA994FB0C2B8AD99539008D50D
C093C9E693265E828A441345EA5C4EECC58BFC3D4AFA6168B74E2261A1B0741D
368D2D66F5AA22A1627640EA969285AD222A233EC61899AD22102AE68685A0E9
78D4C5714622E75955FF3E78C4575D810E7E050508B476A385CEC705A2EB89D7
F32FBD60C08B86A3021A5E482C8AE579801B110C76FD7357B8B0659B1BCD7335
D0A83ABBAC55FD47082DBE00ECB6C5C0F3CB6F2433FA52B2594B85C1F204B650
9D5201534954EAF50FBA122F4899016E04B4623EDD9332FD97D03F0162CC8BDB
0FF69CC3901209AE676967CFC73A878756C67A46AE14E613A8B3A93323427608
2E17993B297043B2F75674AA08FB0BFC904015AA56AE725E5AEE820FFAC05686
3E893BFF7C0C4F83D0D961AFC767E7024AE30751F349735B6CF6543D1067A9AA
939ADE975C80C4626D6BFE9FDA94629DB2CE69239856F03E138D66F8F733E229
271102112617F14FD5C3C6C486658937E811DEC0282EE3D0E3C1A31B94D7F13A
33FE49FED460A102B225FF51C3CAD527A8BF9BF8D495F7B532647689F1F21366
57C025AD24664C9C8191484D5D8E1304268CD4715C7B381ADD4976C0C856986C
FC6730241A41A2AEB1DE5FBA892DFACE7CBA94036E7A98F6B77F65031C7D4F88
38154177B46BFEC2D3481EF9EE5D5BAE73131662CFFF5E427A5F5DBB56FE1FC8
15414798C06E05F9BEF1443CD00570B204F24BA7D6B2F266806E6B3FD434FDE1
329BEFE5A0C84E3977329139F1192DF3F9D6BDE77DD5870ADEC8900D6346957B
84C8C7258B552DF354FC6CEB056DA1B1163C274D54F1350C83A736479DF26E8C
FF16EEEF9346A156B1131100E3AF27DC49B4DA067FDF88CEF019BDDF15F1864F
5406CF60DC00C440EEC436274984B73FD1A0031F824B4379E2E62864039797E5
87FC41E5C04B4690A2F2526D0272FD1B8220A2F5882788FEBDF78B312FF0A732
2C021122E962CD756DE48DA93798FBDD034F46AD3FA9E8C2D786CB4E75B9CED1
03496C03093961B8215359D6875C634D9ACEF68ECA80DEC81A3B612DBBC52B97
CEB83FAEE7B897F107662E8467FAC8D9E2AA0F906E7211622FCCA2C5462EA92B
205DD2FB6D547ED3D559005ED37BEB1ABEED9E395F1F1DD95ECC8B4432266F91
66273B59935B388CF75B423EDFBC4680B3A107EA9167B4A22855C1F6110A42D0
F70DAB4D6B7E2187A3BF218A6457C7CCBC0B06CE3AF4C560DF495B58D53E718D
89741F32C6351F8C78E4B9A0F49AFF1B3302A64232D15AE1B845171FD57FBC1E
6470FBE00FFFF6D3664C5D0355F8BF415C1A47585A4736B1045640800B098489
8282CB81A1D8FD3B8EF85867862B8FFA7167A39E37833AFDB4BBA8D5D855EAE0
0597C351139020D27A614DF27C3A72B169AA4B53EB63496BE00FAAA681420DA7
DC25AFA04AD42EBAA71F635AD4656A8411543FD8B3DB6B7ACB32CA6E4DEC6127
A633D126CD63FDEE48E210E261C16EF1A0236360B2A298C718416514400EB47B
86E2FB3F8777BA26C0DA8D6350B352014576858A26DF969402AB30E0F9C56CAD
A5D9811D78900B7D347046FF9C2A9DA7AEE1F42E318FAC7813157D0F0ADBEC73
9208D41C02C71A920C9DC8CABFF7BABFC41EEF179A9E95A7B2A70E3A9170C482
33DB00A098BA24A0C4A864AD85DF65F71B56A2E8BAC52A17FB2D357BBBFB0E12
CD481F96252AB7402213DF9BB57411622FCCA2C5462EA92B205DD2FB6D547ED3
D55900582DC2A7C10394B4FA2872BB77817D1E2258EB8E4A109699B8A1F921BA
F0ED78D89F33F144043D0FEE36BBF30AFF155EBDF9AB2A053F432A3149B7BA16
8CA488A7CCCFF0B23C07EDE4EA5BEC2AA85224F7C29A671F032195D9DDE7F51D
D5C45AF9CB8A6362CD7F38CC43C354FB4992CA8AA113256A370E02BCEB767B25
5C72846F1570C10ED164D1841B2FE33F3DF5262A92E98F7A5873F70B91A6C6DB
6BA74C7DC0D0D0A183BD254DBFAA7388CF2CBBF3342BE2E7EA49AABA75AEEEC5
DDE1D8BF68483C3D2447F4FFF02D0050E6489C4957F418895E6576FD8A8492C7
E1AB315D335B1A481FE3DB344A5F50DA95EF3F0F93CD2305D67A473BCBE4830A
B55944F07DE38907B58D16FCC2A074E4B55A869C96FCA78117347B9CFA480FF4
A19B9C158291D7F537E66AF56C22A58D8D35E53CEFC1C884F25A63CA278DCC38
682E1BC6D134930242730DFD156C0584682B19C3799784C1394A7F95FA260EA1
3D49E335E7800708D97515CB6CF112C2A89D2D44816E907417BF962CB750BE2E
146ECBDD16A1584F3EA2AB3D9A37867D85840C6AB9269E1FFD3D6432231D47B3
729F7F9F81AEE979C967DC7FC302C4D295E606E3BEB5DD0B068D6EB99F5F10C1
83245F1B733C17D3B854D53BA686CF408A174C4095D3732590B5E767CC184E97
59AEBEA33FBFEF7360758B40E87EFB947F6EF31DCC61CDDFC39A2771827A03FB
E2486B329E785A8113B00497A08154752DCC693ACDBECD3B9F74A6B21D04D33D
8D6867E328F1F84E503918D4F7A808F1DD37AAA08EF4F57EA64B4B227379834B
494CB4FAD1E78E9C6871F23DD7DEA7C7D956560D8BA51ABB82EF2B3AD0DC0EDC
D1DCE78055807A3A8E822A31DEC6D989490ADE623FD53D3DCABB2ABAEF03EE07
C3EDE4F0AF6B7A776C63DADDCDD47EA7CC5A25C793F813C55BE3B470A5800B4F
EDC4A99823CAFF87E567B96574144DFFC8BB0B9B743486E0A343D68682DDD7E1
0A9FB3BCBD8BD4D92DACE0A7B4068772E5278DC12151835699EDADD87DC8C632
5F0460690BE677AA6DB7E0250B5194D04A18A3CDD0D72D52948373E38251C508
E4505E845177AB715C3E6AB79D37E3F452F951612427A24B996F9F170CA2D76D
94BCE9E2F06F49A6F65CFF1A4F8BA05BFF847954D298A39FCDFBCB88AC0EA6AA
CCAB081537DBE4849DE52AF793A4937CFC9E9ACC236CE307310AA50B8A67181C
0DDB2999F26EED9D32C373613F2E788C56EB0FA4ED1F232CACF2867E6F462C04
4BC20DA885EDCD48017EB746DDA8ED86888DDA3065C5091D99EEEAC430924707
3044D4B1F6F9AD92CDAEAB2DAEE928681EF627A2AAD93DD3DA2A47FC87C5E3CF
18CE4227ED29B9A8CF29DB40473AEFA67EEF8FB207ACB013947A866A8ACE63BB
825F4B0F36E5B0018C20AB43FB4C215C95659DD7D7207F8C04C021434CC2FDC3
5A4FDC88E365F40B9D576708B6B6AA87B5EBACB8F10A27E2B97314A9BFED3E11
45BF128BFD65CC057FE1DB587C8B2D7A74FCA897EE756EEF785C969EFCA683A8
3C9AD337F4726906EB3D588F93D2104F2FE63F810E6A3000E8960E71B73E9003
276E22FA42881EF50DFCF371A8C762AF5BD7C49E875699AB0AF95891548445E2
423C73FBF82E9961A7926D1A05FDB243631EFA7025B92E55DD5D5897F13EDBB3
356F9E2B9DE1FBE209F9CA03F6B4CA4588D5430DD9943FA6EE299A4FDAD6B1C6
2ED755C31CBDECBBB7C3FBCA1B459501F78B07E4A73F5DB00C952DEE1F6CE6A0
752411EC61354347A5FD43D296FC220C6416877F7F1995EA262713DA7EC6ABDB
A76084AF0E901B4CB170B03CC44F6B34BC47F3A3226AC68289D2EC32B466D21C
9B802FF1810458E2756AEF02A8FD4A64972D941EC585207C0E0AE908826A5894
9611AD7ACADC778ED2784B3423154B7FC03D43F47C6F5546EDB0EDE9BC6DFFF5
67025D6E00A898F0FA2804E0BDA68B696F299A0821E42C97CC50E6C4D6C1ABDA
A045DF3C2F7F9F8206F24A189E57A0B5C178B7326860AF2A3347D964A134CC09
9A59CC5126F95FA957C3CE225C0FDF7C0B02C3678DF44F20E718545C2F6F7E7E
A4526FBC431FA82095A39C74183F41E46F2C56BCB59CE6AEF7E91331ED5D9A4E
479C21D6A7DA9D6B0B4FF494C2668BB221AB188DC03492775B2B72DAA50008CE
4A663353A1DAB9DA50258300B9BB455AA872810C7948B1EC866883E78A3F4C74
3DCDAD88BEF8B3F7104BCAA6E752EE90D2B38F2DA6707A896EC55D98E82E3417
677CEE755D41C6192B100D56F15192E10DCF5EA55C12219C8AF09C7FEA6FD001
3BC73E02B5065DDE064D64B07C5041BDB97BAB801A993B33CB35844961E68842
CFC30E62F392C5C166ADC35156CB090E79A5CC212295946E98647A6F5903A6BA
EDF01C0D83A41379B0ECFF59CE398BBCF79F56450208CC12BAF282AF59619638
A93EC62A029471B6078CFFD8A93C63A2AE944CDEDB8CB0483DBAE03637CC4C30
DF26D99F628D62581D54A0EADF9DEFFB3DB34A9F052BCE33D0F67FAE47CF016E
3B3AD1A5C090108D4964C7FD5E57B7B839E058C6917D4D2261EF3B27F4F84A27
603543947A1C2DFD3164CE25F9A19F120360F93E7BE38AFBB5932C570E8F1106
F98799495DBB3A05C04BD649053FD29385E9D3822007395A5D78C698C7366C1C
453FD7CC6E94C29F597CE7E75A8F7613805064BA22FE6411CFF2DF50799947D6
5414D629B139C0B3C2BF3D2905CFFAE9EAF0BBF3A22B3EA98F5ADA485A644A34
CD0F70B5ADA7DCC9E4CBB91AE2FAA8D878652A4CAFD1F9EB162702D1F6805D85
A8216B17742ED304B2996DC77BEA528DD00039AA5387ADAC3617AD77C899FE86
E54B8BDB1490AC76FF84E5C3FD68A234C9BECC29AB2EA93D4D4B5A2BCEB8AB14
CF291E7A18859EDE149FF3F07B59EDA5362CDECCBC03A19FCF1125C2B0BA6F14
13D796C008A2ECD55E062CDFDFD9C0C549CEC434910D8AEAA207BEB7A8B22721
7A2570A2487847107009B163709687F03E8904C670CBFF1BC60D1A07473EB703
C2B27847402CA4B685827479170AE5F99FF4C1D98BA42AA91660B2AE39F7BAA5
A9077FB463B8C35CA96A594D27DA3C1237C61DE1A5F5B26FC8966F17D3D545F7
DA471CC77A08633A53B62B760DF589FB2CF3EBA2F6AAC3F6FD242C25F6952AC5
5C24ED123A69E8EEA7221CBBE91BC55A81CC89FDE91EA283543BFC3DB722C5BE
799C9F485827AB10332BFA0505B5EFA4F5C59B381527B753DEDB0BBB7D3F0376
8BAF8691733BF48669EC0B1D817B4DB795BFBCC80F4EFBE3D7E3776948F8D116
96805A94EF9D879BB2E5DF7188DC7DDF4D7C8273211809C8DCFF798F2ABFC4F3
539392985C4CB324B0007E830B78301A03015901FD3A2CD7D5958BC9670F3722
5555B3B50E5204E612A84E61DA20F004DDB1EA743DEAB15756522DE65BA32464
0B70E9B902E9FB32F894C4CF451DD10098E54CE3F758E2C884D6830B00E1FB1F
743CA70F98903806F30AF37522828FD5DE3EC220C719B63A95EE943F25A823A8
8C7E731F647895CECD96CA4A2FB08545662DE0616473D1DD73635F2A6D25FF8F
941042919BC8E49987E0A462594AFB132AF95D2C459ABFECFD7096366E004D43
6C27CC46EEF80FA1A05AB90D788643BDAA80A3358D068EA5038FAC8EDC241DC3
360844AD12B1FF1DA78D51B6F3880C38FB2349BE51D981A08AA153E57F9DCD40
430507B2814046F5F211E16EACD389622F0C6FABF465CD8674717E87E6481701
FD1E1B8705C512C0108055A1BDFD83F4E6FB7C769819702617D08C10F4DC99E8
0028ADA6938F1BBF331D54AF9C627586F74CA84272C6A6AA48D9FF64C0A8959C
2DDC8B5F4F725ED7106CB261CAB582F367CCFEFDEF1C42C612D947DF7BF71424
AABF005BDAB11CB8C655A72354626722C510D6E242E10D29DEF786D7BBDAA2A3
5EB13FD17790793B2B4A9E06A916D8C6A93A6C0E4A2AE7B930B69005A3A2C122
5FF0F5DDA04B584EF886716F299981EC9BEA227BEE986A9A0D47A669C20B732A
AB2589536FA3B43E92840BD29870214BA57E5DDD4315463D662B9274D2E29312
ACAA9B901E3CC8090E857AB029E6C75123998FC42D3E0C3F20960AEF3549801B
F7518806C6D295955BB71395C43390497BB8F03AC4B9254462A42F410D55B6F5
4027C1582963712777AFB86E4FDDC0F31F92595FE56D439417455C5DF15519B9
0355ABACCAB80AFEE37A412B255DD542E77E5FF7E1744D529624024E35566FF0
EF71D60ABD9581F43AFC4A1BD1D7AB84C2DDCF5DA974B2068488AE47A9F07ED5
EB4D391DCD5D08268EAB44BA2650CBFC0CA9B55CBEAF992D7C9F3D4C2CB294E4
4361808DB41180D66B2A43973F90045EC2A8437DF5F02A69E236E3DA43171237
1A1D71BCEF8BAAC89772FBFE65D33E336D9595FD349D0874D0203F8C21D9CC04
E187BE53F8FED4F33633BA03A22DC683B3C8533624EA8841787FEC863F584F1F
FABFAD3A2E6AD0F142653DA546D27C470377E95C9B1336AE10C98008512E1E9E
B36A96421288D8A846DA9F3D3B8DCF710DD336290176B3E0B546698B6A12F524
DC97030DFB981F11116C45649029E8664B1EF5856534B80E1124ABC86D6376AC
6E3F7414E4A017F9FAE43F47C36E5544A0C54A415C5AB2A72BC3F9A63FC847DC
244530BB6D83D8495BCBD805D3FB3054DFF46F83F65741B1017E96CC1AFBF465
C25A312852770DAB7D39E1217619DADD5A529B743B0977263E4EB261F6718EBF
15ABA15B45CE0008CF15222103B3BC5F55E235A90201A826568CF2C21EE1C3E7
45A96B9D1102CB26CBE3E62D0410DA79BAB5DBE07DEC2628A57CD458DF6ED9F8
FAF6B0A70F46877976C12FF9758C0625FAB1DEA0D55F11A0674E11C30C0E964B
009A0D5AE5DADC353EF52CCCCE5A99EDC232F01C9EA889DA4DAA4227182ACF45
5865CA526CD0C3AF1F22BD3E3ED3DF208D3C2EAD0BD5AD97E55CAC100AE56356
4FC1EDA0CDAA94F414ABCA46ECF689BA685F1BD831B4271EE6BF93276CC51C86
FEBB15424B17BAACFAD06CDD337834C067CA415362050ECB9A7C3AB8AB6C697A
D5845D58D9ED8F00ADFC43DF9A0143E2ECED58D83420F4B02BD746BA78DA8CBE
C2E6CF74853B93B427A89089E953E1E2F0364B9E535558146EA08DA0C652BCE0
1A9FA4A9F7E83E5A35ECC699EB8815ABFD76B252DA958829F3C7D61F31822B91
9195B5862C96EA1243561331C2D9EE7B65B82582FF665721196CC9E9DE49E5BC
7F4070BA732D56CE2A0B7759542BA952A714D454416CB94A007509B3DEE24837
AA2077762F4B71862C04384D39621BD0FC52CB938CB2D6250B9B5A29475E6D8C
7941A079B1FD89BA0DF0E23866F7FBAF466136460A8ABDC4FB7A6B0BB95D213C
9E844A30EF07FF70EADB5D360E52B0879E3FF37E86E0541451E2504DC6092E53
F92783E0AF62957C5F79B80DA6F7A9E9B5ED66F92F3918E329298D9F6293E861
4966D4EB74CBB3229F32D00F99B504DD1602FBCC202CC8046D2C6F867D0207BD
48FE8067168C4412FC80CDBA62F8B5EE4799A66A432D5FA8044190358D9A42B0
2D8D79081DFC1266E398C58FF8074C8E860FE132AC46A5AA4DD33561D6864F50
6D98DAFC5178F2888E87D68C0B8C9CF3C303218DDE862922A8F80A0DD8B36675
E83371DDD0804521CD931104741A6C9845338F0D171803EC04C9534EA7560311
2A781CB563378D8C5CB7F8729D436B65B80B3ABBF6F3A7A5FBADAB4FCA85D1E0
E9149E638845279D7D1882C85174FC32A61B787769985079D60CF71131977E01
B98BD4D92DACE0A7B4068772E5278DC1215183569F9F606219F17E801AF5F306
13E7A2C3D32301ADBCFAAE454977605D7A072513C78F710DC9A54F1891759DBC
520CCFB55CA9534511D08883DE4ECD76DFEF5D26165777E3A6AC573D7380FC35
63D88AEDC9A339CF931828B48A786E23104BF1F2120197E9029CCEC265896D74
07CDFEFB4F82C7052CA4B6D9562B4D49DEDAF13B1FAEA97978E66186A98D901B
B47DE5D3C0CB6239FB2D5B4AE3224D98927206B1397E32E2D63C350442E2115B
8D8EEB7C04319771FDCDC0F19C8D0285CBCE07513C22253B9753998B172BB857
A128D43EC71195255DB36DCC13A89DC815DEBD8D82FC9AAF598C88CEF2A15D6B
13B95692C2467A80D01B800831E129F0DBDD7BFBBEB8C1E91EDC4F4ABAE63F91
79E939E8E50F7BE4118ECC2CC40F691AE97489E86F730074CEF8E44EA7FC0D28
FF3E8AD35CF856DCBF0AFB088AEB39EE217541A4C17DF1A012D2896DFBD323C6
1060D30B9407C3D09FFCAD95A1C64FFBC6312A96DFB2B087FD918D3B0ACAB4DD
394F6FA4728AF2CEED07C4C304955D53D70756AFD54C0DF38C3D61071868A4CE
3EE4C9F842EF5F146D57D0287D62D1A34793E173D032F164360D643F1880D27C
0F7D73029F171028FDDF8B55093791EA7C2765D1983BD77CC4F02023B383E397
12D0264CB3CB960EAE6489CD6C8FB1F1FE5D283A981437DA8E17399F86CE048F
4C870A446EB3E06BFDEF95D17AECAA204ECC569F78BD73D380C572E5087A5556
397E485D176692361A09B1D7853518F8522B9D21C93BEA7C0092280431577112
645FA4CD45A4C459D5F7693C618A5993DA8F9F0E434C04CC0B14B0B5818A6680
7B57C9DF5BC56081F75C01250653512530A9EAA3BB232362BBD54993A73001BB
38598B98C22D00E3A9DABC4A0462936E42FA97182259D06005CB78305087DF37
9612E501BD37874E1B97916A78683B9A3AD981AB1D33B3D8C3BF7E8C5A4CFA44
553B25512B68E1F53B4321870D97750385866B1F923D80B19CCF78577C8065C0
08159E38B52F54B227A0C18DA8A43ADB7593E98E5E0C7519713F452774D1DF23
5DE89D464EF44F2C9297ECBF2840EC675E1354B3A8B9591B661400E4F79E0702
2ACDC7705AF6EB8DA3E68A7D3D06321D6DB80CD676DACAB1311AAA28A04F8FA4
3925639BEF4B041AD7722616B477CCFE4F4E19F17749048BE9FE976507B85FA6
4C9620FBB49FD4F24B11E7DF3C07DEA3C6E6CFB4F26A4B2603990736834B84ED
6B5720A8E52BF72DE7D89B9478948503286711952C3D3F4E83A712EE63AA3DAD
FD632A9621D26B4CFF003070037CBDE5793A1BC975B49B183F007E81DA9A798F
7F062708C79884896B537462AB0B27E20C9D3CF8D27B81A55DE3F509791369E2
E54C06B408FEE2918DFD868DC4480DBD82F856D2C05DE5DBADDAE7385F404488
04C7541E751784D52973F89341C7723D718EE15D3117574C43A8A8D075F4FF9D
F5B1BC2E13055CAED61FF851067307FAB0ADB527A5AC8388A0264C6A7AF6071B
2B9AD4A7D4E71CF7EC55A51AB1B4803CC515471D4FB80DF03D2BAF5E8AA097D6
A86EF230A314B3E55EDA5E61D1A1451EDD31135B78B03216A0164552AE036D30
935949DB8929F2E389124EF7F7E67189C32D8598046EF67D9CC27499F821BC24
5B3E266DEFB69FE32FC2649522985C27941C58E4F50B911A6C11B7F5F9B82BCB
01902D82E4EB6BC1D263A3F79FF9AA614BC64F3F70591B8E9107DAECC5D0D487
96C4835D63317559332B34FB651CC92781B4882D36D3C1FE65B2E5512F6B53D0
AF465F7316E568E305EAC163090F36FD0CA143FBA1C9F662A35F3BEB5A529B51
2E85E0C643C2F2B4BA15AD718CC5E605CD6C3C5A46E851536CDDCC32B1BA21DA
AB34F2A1CD801662934D7876C663B79E1B46B00F5554A12B671BB2CA1398F65F
D0A764A54500F0429E0883F53F8CF6F267B35795C7626A32B6E41849E355B252
1787F7A76DD68F7E5D640C87FFA05C0EA432E61552F957C636987F2ED81971E9
FC729AFC1E778A3C012D1B293C733E90B60F0DB14D360264AA4469FD8D653C28
D36EA55892105E54929F64A3C8A01C8DAA5F5DCA27C71ABAAA2524F7D33DE2C3
F202B96AB0C59A00DF442CD1F50796CADE8F0C39DF8F351E153B539BF8237387
D882F998D969E5996187EB83174F748F9F5C6E7C9E45C5DC39EE11FDE0AE7493
6FB0B1B5F204DB89A8805F8D77A933DF13534861328A5E4673A4B180A8AE1BEA
97194BD2AF25F28AD6A30D5AE7013F99DFD464CEA9BF8F1548BA93FADCA29EA1
31D482990CB64C201664D2D13D77711369DD518B9E0DA580DDEBC4B9FC00D132
8949B97B1C65115DF384C3FE28C017EAEB5CA8EC4897901FBAF7C899327A4C80
ED8F1CDA2D49D7672E195B09727629C1A5EFFDACF4DFEE91E68DD6A7471F79E4
C7B4BEA87D0B1D848B21F9B1A024989A6D9109144050CAA7960FE9A98FC87335
2781B18DB090FBB6D3FC3C71E67F46782301F01E3F4891F6E169747D0AEC4026
7FE1D3FD77700AC774EC43DBC0E10C70B7C2F14483E18E99BADDE9FD1364F008
8C1A95CED5A4D2401A80CE247323CCA5752AAF92BFBAC68A88FA66C49E1490EC
01C9401D25CC981E526F1D803C93B2A2A07D4200535F51B9CF26A817DE43146A
E4E04FA79AA91C814B18ABD2C55E639C1F80068C9B0AED83074C6270B177BAA1
8F1975F0E5D759C51EE7A31E4510F5196DF93DC22D53B21CC59EF1AD25F28AD6
A30D5AE7013F99DFD464CEA9BF8F154BDE44B33C06F6E50CD5E02F0313BEEF10
80B8E63CC100145EE1CF2600212964DB2ED1CF81F3E927856884C3C1BB65B5E9
E1260F6699D945A611A7EA348DB3C86BE4B4DB0FCD38B5901221B1DC3066AEFE
92E3FBB7E4176DAB13FDB286FAC18078C9EFE517926FCBB34E12E947B5120A5D
9397D02D7F1A024EF4D18D753C02DBB7AE3EA05189872E57D5B88BB9D233B5E4
7EEF26714A4CC8923A9136F58AE000F3E4E56446467C09F885630C7E96643BE5
3D7E30FF26A1AB03592F9372AF27DDEAEFF8B80E1A4AB3834143055A7ACDAF5C
195B4D4014AE118F07B7C4C930CD757FB28F8FD39312BA79A229868F2C81C2F4
55F4721435DCD24D67DED3C5ADF52EEDE57EF3EAC944D970B725574EFD751A6B
7C9AFE6196B3E2024B31F85CCFDCE8FE66249922A5752F68183CEB0C0D895773
952F4CFF196A41313B2A3FE4B50F3B2D61230D26B72776C9E82A61C7D79481D9
1814C47A0A3BFAF7465542D6822F564EC4B8F282AF59619638A93EC62A029471
B6078CFFD8AB99B3B63D78163F227F1385113B9D2A2F0C56DB55B7349E7CBD9D
F99EED9AABA70EBC005B7E807A854FD70F23244F74336231E9136F61962383C6
5150264A443188410F1CA9AD8CA4892D103A1F8AC88267A1B6600190E9DFA00E
D203C9F199C8D54B46606807DD209828B487303573B0D237AB3A9CE8C36492E9
9AED33256A1A6F3303F7A87BE1741043EB837C589B4CEFAC955BD04F4BCB9D5E
DC100A5DCED9628B01EC6F47232DE5CB73A83C1B82D1CEE1A00BC42B92571D1C
B29505E041FB5D15E78F084A1B9DD9F45F7F5D8BA3FA244C616DE064162ABED4
300BFF344D46262F0331241D87492D92E8936325CF2A102C14A0086A3A824777
3BF93CE143AB03DA13405FD339E7F17DE268E380CE610E6D9D1972AFB8659527
3E193C824705366A2DD32C0F4AC6CE4AAFE63836A1EC53E443C157BFFB7B901E
2D1CE638FD0D280DBDB8E20C47C7832C9671E04C9E37D08F89E84B1DCE7F2A0B
B0078EB6BC83820C06862DAB8EFE4893B9AF7EC84F69B0C95D4FB120530AD2DD
9F52E223FD098660B344B76A7FE3FC83B58C2D1E30248B5410C7C68DC45383A6
470A21648D9F06AA962C29680C0EF7184211C879D1CFA2AD39885649818DEBCD
A7CA7D3C3A6403B9A7675DC69ED861AA0478A60970305CC39BBC3BA6A8099856
FA043E143FA1A5B5F00968A8DA48E5ED3A2BA43BA9064D59C171AE87BB22E474
4FD26EA55892105E54929F64A3C8A01C8DAA5F5DCA24A7B4E52F30E55B902ACC
35DE87E70DE8EDFE7D803CBEB9E428E2E96E73CD01019E64A01054E5E94ABF52
DD9EFF0427EBE3F8C28EC36BA0E331071D9B11BF19F5E6E01322EC7B74F1E8A3
69DAAB3305C440A686E566386C4BC20AE0FE9CF57C6AFB258F73816CC190CAF2
5D9965C88F9594F80315901081B98FF3AC06F5C24B6A33DC92C2261C6222A84D
10CF5EE66EC13A71302C6786D05D4197E95ACE0EC7494D4247243DFA8385DBC5
760B397F0EFC6780ECEC244A1F30330B1C2495DBC7E205C4B0C7F6B19DB9BFD9
6112F27F9B4CDC7DC12D52AE6A36620F4FE5B14CA02F60B14F474E9D6CC7C87B
4FD6EDAD6F6F8AB10983B65326D7E2B9AC32B3983D26857286BAB3202D09F51E
5D893DB3D468C38E8FAEC54B50AAE18B4653555ECF1F6CB580E5E0E90F580B79
54B91AF65067C3C491CFCFC20F9EF9B7CB7F1D174B2E94953F541C3B84D43428
6DD1B5C4C56944521E76439B5DCA7732A29F37A08F1A2A1FB4E7A6CE89EA7C92
E036C703AD5C787C37A4430828C44D874EE1812B3F153E63FE095A87CC113B93
0D6A0A90C45CB9FB0D893F79F3230443D11313D6EBB9369B19CD50EFE1EDDF11
4903155F14A3D27477386B661C6459EF6A8492F020E67407CF321E01EE8F2811
A9C0A800303F0722046046DC94B5017D456E865FB2E416C4EBF62D87CF6CE663
57C4904B79B704C799AE090C2E12AA3667DEB5AE7DFBB73FD1A0039F86E84890
03F84951D87FE955B227F74202FAA42ABCBC4C8F87471310CA26AE9429BDAD98
8E5147C913B2E2A96821ABD9CC0AEA383EC8ABF7DE287FA97D0495E28CB8E2FE
2A4CC0B9DE515F7639622660DBAB749090871FD2316356C3CF06A91C423E8BB5
CCCCD5FD1F4EFDE44CD22214DD1C4B36E9D261249BF3BD8484D4C450FD2CC53E
9D5D933D8D348873F2BC98C00EAB746B3E6A119B0E7CAE91559DC6A5B3BAB60B
7DCD5F96C0B1D41127FA6FD0E462D586D2298E6DB61197605D6577A03DE99BB7
8A0AA1139DF5414824E7D72B4EC7BE92DE482C8FB5537B85222094CC28A53CBD
90FB755F36FB252F0335FB50B3370C94D0AAFC1CEE5C1376F02A37C14EF4FE41
6F8FB3B918C454BD5774AAFB220D5022527EFA589455B7C07547E3BAAA4AA7CD
8A238456094C22BE50AA44C469EADEE3FE6E519F3DF7A42DCD24B818942E5AA2
C99D424B8AB1F5A341530C88F64248086F20B663F5490FF79AC9C6851E779043
D6DDBCE84390CCB304E5A7B771CDAF55815279A3B8306D923FD97B222C97AD9F
6A941E5C554000A47EB5D9E377BBC162A89E871A00B9B346B62199A1AAA40D8B
35AC2F519FA7A9123A70E5B8F42D90434A48E3F4993DDF5FDF93C9E21FA1EC0A
CB4D27E6C934A2155DC2E79631499FB05BB37453FFDCF3EB4BFC854048483532
3410B2CF4626600B1F8E8118662259AB0CCC303901A207C83125D327B2769542
A31B0BE8A05CA56FE842051FE87EC913E4094304B434EE7A5DDFC7AC37A6D9E4
9F46CA0B3AAE98A934A36DFD2240493803D47C96A2745580EDC957AC4291730A
86EC4A4182329F95AB474108A296063BF7B01D5F186B2E093E82F0712F57138F
D0BF4DD5993987EDFB19660637741BE8D98416D772984988C4219051A2214B3B
FD198AC85850B173C7EA7ED2705E70F62B7A1CFAFDEFA9CDDBC45DDDF5DEF3AE
D93DB4833D4DE82386676CAE2D18B84333575A237C9637BC3A58D7BB96AFD1BD
3F1808F701A335B9FA7332AAF569948EC55BAD355BBD85D66D6166F8D6F0929D
5D05E540124D1983CF4E2EC062206BD4502826B180CC4F6E2E9E73D5148A0EA4
3D89ACD8EDEAAD8234457C149A25CE9F8E3F4F73415A620F8F1D9563FE9CD897
B19C6DB033B5C6294AA6F5B93DEACADC3D74931DF11F8F2DA6B617473941A1ED
19DF2F6C55C067882371B36819ED22A9E83B7C851AAC3FB59E4C7FCDCD4BE637
C8597EE5FD1996F8AAE791FF65FB53F78C6F639F55A1790C3635D75B805B4F34
26C6C6E12E081339CDBD461E5CCC80405EF270A816607F248C5C1D5C56035A8F
FDC8F3DE95F1F507FEC112903F2439C1E08D8924BAEFB2D1BECC5EA35F7C4AF0
39C7D12B6BA9169218D70EF879255E6D7B0D4E3F7174153A5D789E88984E0A07
EE0942CC8CBC6DB7433B1B871A62E60353F613EC6187DCBF7967263679C8C367
5A673E6E6554D774D715491E2407EF7840DEBD26DA522BF30ABD1E551A9276EA
210906DC669AB337A41767EDF87245ADDCD1E94D2FEE120C7BA60A464E7A72FE
D312680E7155F6CD439AA96488958D280DE6EE3E50C07073C5F650547746D396
93734B16AB45A183B45857E4B8F9D6695EF332BD3BAA9EE551A4B142D8DE6DE8
9D1BA848F9FDECC6604E7D488ECF152B69493A9A0A8A7BBF8E4801DA35056CA0
0B0CEED0050C709C5F3E7C53FB4FBAEB6078B410935DF7D6D5064271899310B8
7CBA63800A37B6EDB5E58E81BCA267212F3D633FB8598D3F2F175BF705D4F708
9B2EBFFE432B337B76C0863B38A3AF14DD0F6D8741C2E06E6011FC30FDC6532F
CC7F3D2A58DF176667500E58782156ED773734596699171559DFD21DBE1EB344
E7ECCD28B98FBB721C2095CA9DB9DFD4673958D4D4F1CB3CD4D6AE55A5C48AF2
6AC803908EC18704FB8322977A15C8ECDD04BE95BF3724E4764D041D37D1EC32
C188F311A107CC79FE5120FF3149465D40C2834C6D68F3A0B7F152A9EACD5E0E
0D21CD6BEB763CE338A0A9D593462CF91C1DC3D228BCF7E99F93FFCA6A27BB12
FF9B399DB1AF4BA9A5705502F55E4CCF721BDCB9FCF3DD9FEC9D480599090307
21E8CC5D32447BAF3896E4A38C1576C9EE90FE9E0A9F5EC4928A31B813890836
371F7864291A3B3F753DEF98426130A132BE546B05E234E05E9C82777BDE4191
AA254EDA92887905BF33AE9FD2A364E65BAAFD767FC8DAFED6774B61B7E0366B
B5132981E7111A7668EB5E73730A4F8DDEAE362896AD30511AC6077F046C5DC0
D0400E1D29B35CA24FEA1E4C71D8E14AED4F06B3F1FB4AB16280601D4308FB33
E2B90CD3643461C090498AA7064CD84DC256855A3DFCCEC584E60274C80FD891
9AE84F31418152E3EF415F3BEDDD35FBF1B082396A17F0870204E2DD1FB9EBC9
448B8D0AE4D2F2BEBE39239ADB477FBD2B0D86B7025004216F6017E347DE8BD4
C3C7EF12F4BAEEDA8DD594F9FDD3F0341AC33F871D66D40597E4F20CAD0CC21D
2C3A11820C06B89FE882315994E7704F256531E5C82CAECA85AD750840174A99
A2367CDFA06D801B1588A55CD8FBC5B1A74A1F90D104EBADB9DA093211734428
05CF8F8F6BA06F1B6C9373F48144954ABF8991B61F0FB7E95ACCD3BBD200E078
01F2A7157FAA847DA5E22F00136F21273615D1D75B730BF1D7F063A8419830FC
907CDEC4ABDB74182DC5FBDD0536E7C70D3AC58AB2DFA3EDD496C18C8974E85B
94484D5D8E1304268CD4715C7B381ADD4976C0C8525ACF78DC7D453F813638EF
A565CADF3958184CF236FF2FF91DB2687D13CA64138054D591B1C7894E2A0D72
4995EF08F00707EC53E1CF114795631E3B14687B9E35196EA8C1CAF14A0F0128
05FAA4DE2E937E03744732E3FC287CC99ED39EF436CBA30F8EB1A6E543782DAB
E3FF83E5DE856B2386B006A01A109A8C8A833C61B9F1ED687557E2449DD0E8EC
1F8B9ECDD722D466D2D453E1F5D3C9F3C796CF3BEBD5F6E892F91A4B3291F219
0C5E20A58FC99E7B93748B7B0B7D5F050B809C36455121145BD772CC4C3ED8EA
BFF2230567998B58154582EE093FED8E2F79999D0D5FB2D1F10866FB55664AA7
D6B6CA4E3866DF6F25481C94C0C99771491E1E13819CF6A11897CDBFC25ECADA
33E3F6D66E6A404512EA065022CB17E62FEB500C2C5AF1427197EE6637F53912
3745CA88458114AC473001A6EBC721B3AD347F9CC5C2A27C33990101BB5C18BF
8300E8B9ED08ACE959392226C2D9AF99686063A3B951E33C7EF5F1AB73604DFC
C2AAE3C9DAB2C3FDC4982820B11EA1FFAD6406F59A25291292BFF6E9F09C4DCB
F759C9FF16A8E893C28EF549CA3C0F7C816D19F4AD4A5C73718F38A4E67E61CD
7A1713DE7AD5B63B0A7BA50A40B29FC17AA00DB566B2EC94DE5934CE2EF7C23E
C45EA8B7525DAAFF7B70A5414E182FB7D57AEE134DC3F9A71394B4BFA8CED0C4
1664DF7B5BBB015C15E90E9C96373CC7E6BFB2E25C8E5EC1E76C9D065EAED9F8
1E705C8136D99C5BD8C57AFA1EBD9AE6E949DB069E5F8579D27658A448FC502A
8DBF8D959B786221774A27EC6476C296EE579D2F20575F4CA3B9DA9E2DC2EFF4
9CBB4722FA30319B8C68F8F7DCF39E5FF7ECDAE3884DD8E0E9C7A5FEDFE41F81
3357F2002FD7D3BC2795CA29E315E9397ED241D48F5DB2174A712F0A1E33ACFD
F4F850DFBC68836D6598FD8B539BDCA02A0A1C3058ABF1106798FC39BB81EC7A
1CEB5D36BF344354FAA9B291ACBCF9B740335802AB247E9FD612C7762E866A6E
4C83D0AD28B3180DE0FBA6D2813AFFFB6256C6A72975F6E5AB21231E0E136B9A
315700669D9D8A3D985F44DE6070E8E4AF619C8A0463541489F56666025C854B
28533F3D64DEFAD31A1BEFC3A15FC3CBB1E614186292D44DCC6A69F94C1BE958
8697B33CC8C54E71E075F1693EFA5483DB7DEBB520C7BF832196D27869EE01D1
69FC58F743CD16C8F0A30C58416EFD2327DD0406D7E014791771EE369B64E66F
AF661F75F9A9415D03C8D92BA72C28C2C148FF488439DCF5AF83863CDCACA331
175F46778C3202D3D4F36FEDCE60AFAFB39332B22F2C43C3AD99954E96E39B52
434D8FC25A26DF835CF0A83D7BC91AD4E67CCE7B5DCCEE35431B1144E5302C58
4C766900ACEEA1303B6B7283508FD953752DE044C4904C375AACD66DDFDA88D5
3E98FE28B70E43B7C69F2BC1FA11191A2974874205A7DDA96A42B2D492847AE5
7C85675CF04BFD1410B56E616F68C39329AC3301F7E9DD385505F1A5891D6AD0
D0E3EF2F19C66D2509FEA05F456DB473994314820946309081E82621D1B79F8B
534954EAF50FBA1224AA3BF50544122F3662354376F998E255DECD92AEAF57DE
294C3A61A645A681C23966AB83B4D93D4FC5D149AC96A8331BD6A50B93FB0806
43433A0D2F5AEDBBAEA7C0A6D4AC4C90FCAD1A887E071087DECD4DB7E551DF70
32C9C43CD09F534B07AB5996711300B4E28756F69F8B6933F20AC25471C19ED3
B2D16493293F09EA311F4929581D3E2EE1E2B00C53DF9788B45591972391929A
1D45F27E3F89E4F8417201F0D2CDFCAFAC06766BB5ADEA1F62D09802F18C584B
F5F2330AFCE8FF92E2DF9B35F469A1D1AD50C3314D6CF5FABC872BB7CBADDD96
379AAF858D42D31AAC43F4EC19D387D38B78DBDAA0645B2FB1C9E3245ADA5B7C
80281E3B8177E30458C0E8F57E41C25DA1DF67A2DFE5DE21E630125AE03ABBA7
5B3C5272D5BBDCC972845D4664D911B0E64203574E588A6F1143DAF2573A8474
5ABC6D79FEC5A3BE33A9A0285EF5BAE463184E92A24DC07A7026EBE9E2D290B1
EEDFE0322838AAD2FB6F562CF3FACDBC455F5007030A8DC866FAF4CCC70AA1EE
4BD71E5344F2DCAE69E08F1BFE2F05C317E60CD87D8622BCFBF2709E1050E430
19FD6819999E1A5C2FA63A47940F5252385EA3E898611BA9C4C8A5E0A6AD4E40
D9A928D09FF6795A31930D91424572A24EFC245742B434A82034432EF4A7BA26
12F343751A68EA6CC4FD5FC02C703EDCB1F8AF334B793677DC9D0D6B2CF2ED2D
D230066CF987003900359010AD52472E97602424CC86C8245A33F617C5F28A57
87ECF6F5E76A133661B6DA9143D448C59D4A6E1D3A4BD9F0B7E0B28447E74136
4E315E7A1509311548A348C48D19182D79249080AD244A961CCBD0A6C4B22D5C
02D1E02E3603E885A6F4C9949F4D5AD4FA73204A4F206B13B702DC4E76A76885
AF0B09EB7F8774273C9252B73F1E4CDD4912B3995A7DB9B4C56C828F8583A979
A4821E48802F50EAC63D9917C10E24B9304C2B6E99BC9902242F0363BD8FA398
74B38A5773E6797686644768404F6882273FB569F825C8B5CF477E5A66AAC618
CB79AEC21E85BF1B65FC6300B048FCCA5DA7423FBC722485BA50072ED2124E0A
769E95F93F6629DAE30D14F1CB9EF1056093B854BE4DABB07F7BB64332BA41E5
84EEA50F61F4C70D353CFB11A82E401A42DF13634343E4A666C7A27E6AB0968E
0F2BFB2C8381E13CB69A288CFB8408890ECB590527209D19DA50258CFA1F636B
0C9C441A03AD99788F2C055E1A5AB5B114CA693BEB196781C04C0A6EE75D2746
E69AB8C4530A1BE5182B4F95B4988A9F5E686E357923D654FBDC140AE17DE962
63A6CA5338F0545FC28B003F1AFC72A01C5800D5233F46E4D3D830E9CA83BABE
9291E590F24481280A0242E823E22A4E32669BC829EF1B7584A7D1DF64C6AE6F
BCFBD9E9879DE2E51C85B3597B747E2F440D7F364C4030648BC39783FD7AE189
510DB5788EBB13FF9A22A528922308C00CCDEBCE60D893C887B0F2FF4E4A58E1
7059A66A66132D35680501A47FFD3C21C5FFA47F843A6972A781290D136A9B5D
69A31D428F4F003487ABC3D34172433CC652E9B2516AD0EEC9F4521A273F7328
F6F57B13A373A9E0DDCE6E0CB2008467372E0C2077B037B0FBA022555B0FCC14
21A0B660B7381800B7E7FF1754D70709127DE32FE92176B964274E37B45C5844
49B7B4737AD52783C5737C44F9E81FD41745809A37FB996A48A34BDAB4CA6460
6FB209ED35980DF79F5089C10E826801F1DF4E6A66AE2E78797E9880AD30315B
535018417C37FFED36B95995F7771FF6012B974D2061E7418F3B9E0ECE8D06DF
CD70D82772F56C044FFCFFE868A68E84D25B66B5A129C6EB45718D8EEBF746DF
1479C93E4BB317BFC633E3FBBCD53B575AE676393F472B86EBF0DF6F3DC882ED
30B17E0A07D82FC229CE2A91FF4F641883AF42461D7C8C767A3FC8EA6CAB6327
B0F5A90B25E1B5E2FA983DD0B162ADEF25E0995E5A52E7ACF37DC52DDF8A280A
683F1F228CCC7DAAAEFA44F718B77CBB169906DCF83F812FC70D29895000D5C3
AB8A2B81BF176805C18DEFAD90C8C357B025C7FADF8A6887CEEE576D41F1A27B
AFE5732A6F2BEEAE6C1BC70CC3480189ED70C58B1D7623B4BA401B7C66DE6594
FB48EB238A4A0B07FD05F1A0D9E8435CF7BE8F7751126D15630FDE372CE5FBEC
C53FA088067F400F6754FE6DDCAB593B0D8EEA0DB4D3C957C5C3CB2BE3E60DED
5201223E28BF0FBD4FC6FD00EEE3EAF0B066020A412F7943EE68029FC383057E
886C7A4B66B724EA446DB24A6AE9470F037FDD15E6AD59060D6CB572B41FB6E0
2C91A4DC5059B8F1E7B130478109395F7BAC9BB76DC5BBD65CE2119F15FB1DDE
E6BCB7ABDA1857E12A64C5235D9CEA53751853D938D17084978645DDA9F39E2E
49F8A1FDFA8D532FE899E0BBBACC54725A92AEB557B658A206D922496827F022
F5790CAA627F59F68EE5C809084659CB5B66801BDA8CF7C29ED30E008D881B99
C7F369DD56C7109506763CAEA43EB7D65C1B729453949B53AA31C96858D4798F
48E9CA42A1F9F49E223D060E6B43D028565B8E2859CB5381DAF5B26600BA4070
24E1B0DE6325E7F79D838F47A10953F2AA5FC94B344114DF567D11C91245C58C
CF1C55AD35578F88723770
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A3A37081
D7529F94493EB4739C267B8C54B3A1FC2146237C1D110D4A10112D496250647F
37A36F59299DD9529CD003AD4E0847689E519FBB2B7796420D8EEF6ECA04DF85
390E261B43A555BA97B9F30C18F4F39F192B2A2CD3C1D68ADB1867509CDA93D1
CF858DE8EC69D57E5A7BB2741F4713569CDA64AA18018935D81D1ECAC3C42C4B
6105C3B521226A3AA2ED3A5EA5FE176CE753C04BCA19E4C4A11ECC428F62886F
B3AE8EBC12CE6421C3E633443649187C8B38E5EE9428E1E533FF1260DD242EED
B955A9E3C2F73B641A68A0EF3B9E26314B306649FD15D7B593CF3F02EA2E6627
C292001D28A40628F89D0C92DE66489694C976E71D9214BE0875849A35084581
5873E4D6FF4EDA98E456F41F67A7063A2EF9ED5AC30A07BB8768BA4B23707BE8
C925BE37F7B4C8E511C95D4B61E15A9B84DB541D8D299C5C5F56DD69E7635073
B64FA376773A98E09E6A816DD71D80C3D80ABCB006353330E36963118A600F83
AF3F1902CB9FEDC0DCD19B1871455394437C3A7B477AC27F75850CFED5BDB2F0
71EB6873264F76A5963F0D97E0C4887DEFAF1A5E5016CE039FC62C37DB28EBBF
F30F651543A11127279FFE3AB5F06E440720BE08EE3F85DDAF46CC4190F93B9B
749C6AF33D323C2211D5ADB7AEC6905E1E94099DF34C4CE52D95FDB6A8E7ECA2
A07D4200535F51BD082591E896938B584450D9E008CDD0202DB1B3CECC4CDCCA
F87401373886FF9BFE508C3A751057316CFDC6729F65C26996C69E6486DEE35F
247C439B8FBB6A187926694EC48CB03CF1EACFD31FEE3C7AFFFF0C5E0BAC7583
F21FB6E4C8D2975DF55D9CC0ABC55E08BC81772751BDFCD4A1FEF82C144BA8DC
FD22EB1EE626D143E2530483ECF9EC3055FBEF738582004DC27F7E8E3BCD4513
9706F68286959C07BDDBE793C16F9C0CFA569344FE06F0B093B14CD9DDFCEEB7
BA24A8294C452A3E6A6E801FDD83FFDA10EF92642A17094ECB693C6A2803B6E0
B44C92FCD316CD45837D826325F4798ADA090462C654A145AECE94CC54218CB1
8A3A746FA3102EAF91E21517EA9DD8A7757BA31CA0D97D8FA881C188C60A7CF7
864A73195645D5071137F882C019B8B8539BE8444EF1A6724AF2022FE7AC5F10
AEC634DB5A4EC173057DDC6D246C967D9922A77F582E2B4187126B5AE7512FD7
4488D639D42394139880C537E30422E727F31F502C22B23A4C5F4748E182C1AF
0C5EEB7B354D1A516A378D005B5597D879D136232C03CC0DE6A6A0DDD5209280
E94C95100DEA1F328249ADC94846BF25787A55A2D0087B6B39FC6B6AF73508E9
704D6E813EAE5A545B23497B97D9E7A95614C4370D4B6CAFB8ACF7019355A559
F647DE76270E4A94EB9BFAB7D21F31D3BC973ADC17B9ED8A3F2EA99FCC05D148
F71723CD84C74E9AF052DB7AE3FE4CF86171C06BD72BDFB445F12EEDF21E4D66
F55B2447E1EB02ECF13CC94223657C174D1189498F73D941C935900CE3C33745
9F1F6A53036115968EFCFEB3D8F067B10E0949037BB85E9BAB98D4652A1D052B
B44F1A951DEC5C47C86486E08E0261F8EA96BF0A4F3E4A5ACF27579CE67CD188
AE57C35E165710E6904DD2DCE62DCFF4E39AEE65183FF4A01BA09A98CAD5D4FA
1486785FE5FB809A0570FF2A7D2CD93E9209ED3825A7B236597BC65E7ACA7CBD
3EDBC7E6D37BD45EED1DDDEEF97A72CA8C6BFEF8D78AEBB67F3479BBDE49EDDB
F9CC15EBA129D11A520AFC70CC82F9226B1DDE29D5B8C5BAF8E52B994FD1F05B
AC4795F3DB3972721931507CF8E65B8D01D75D2C7D31F4F5255839F507A00545
FD5ED9192C3726260D12F8A4A17F80A6DE74E1A7347DBD7A4253B855D18C95C6
F3F033B3F8C45F113951F00B624214EE1DEF17C153BFDE877828FA976A3E2789
30310BA275B412BA8321D74324C9F471CF51D4E9F200926EABDF3A00224168AB
D1444339051D4BB575B67E562756B9EA2E02A5843EF2071A7368B1EC37464D0D
25D9B2B9E9480BA0968082E2970E06D532AF79B63D9155AEB786A86D712849B1
EE65E45A52603EA3EBB4350A8EE7FD3EFB52FFDA6AA67C49D84ACE54A05C3E3D
F8CE788A849B4CBF1B850CE94B91DD616A1A4411537E5DC8A98EFC03D9B99125
843DC060D0D24CC63C147770591E3F82FD590064609847AA4D7C315DB74895C8
84D929BEB24E7A2A0690C33115ABBCEE2091C030649018B4D3263D687459D7F2
A6416BDC3F976B29F8F2325B94E85974AA32ECD5ECA2C8E3C3578CE7C9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5020D74C7714FF08F5AE00F69DBED351708B1C760171CE5
5D0FE3BC5F6769FB19C7951CD5DCA774B841330A2C8CF59CF458230A1642F956
21D23843C4332F05F5AF14E70EF052F02F7E3F51D6E7D68A4FED8D2C4A733AA3
8973CF4CDF768C31E35C395C3BF67A79F8B1AC292F38AB2EF22A87A8ADBE2C55
747D7AF3101C5F1A2A1BF6C0E245AC583FE784CD69B918457FC63ACB5FA24E41
CAE39AA9386736476F5C0BD3D01ACFCABB35BD346B884B97EB5F467C93A2FC7F
82A0B3682C1D7B0CAE0165D6FE43CBD8FA5C85EDCD122FAC36F59FDA7CC4EFE6
1F9F8E88832737186037F9E5AB161B8A2090F5569529861FAEFDC91E823E0A0E
A92E7F1118BCF413BD355CD844D0F88C47B267EAFA1585B4ABAAAB9BF885D233
DE4656E4CCC1AC1A5762BE48F5FA88A0020AF17A438014B5902A55EE220152C9
0348CF590A07761415D2F53A866C95D4A6848E2BB7970D176670F90765843635
9C2461BEA57F9CC512BDC51EF25496B2C2253AE85AB38889B26761BA509C7F63
8C6CBC4BBDEA74FD3B43A178C86F9A97423815F5FA2C09BA590B8371D5B7758A
43F98F4DC4792308CDFE2779CA6F20ACEF23FD8FC11F483C0CDAFE837D984A76
1286C4DC5088F5DC4B8D59F781ED48736CDB2D0B9B51340F6218CDD622544552
9BAB6B88481D111091C2CAE5E19903BE5F2C90E79E2469EFE314329B4653D49A
0C4443075770A91E454438395B4C37AF0A3F0902EF06E9F02892866DF87728E9
AA1F53F099E2D5173413B319837B430796BBFCFBACBADB5D5DBB72A5E9876880
C4118254A144B71BC932D9C20D341F3633D2B6F9060456139EBB0C6A0F011489
876C8920596240E6C25DE891B1CF3E973BBAB5FFC7E43427607C935BCC8B2370
8D6B64B927ECE34C20BDCDACC601C90E3F430F1F7770B0DDB0E3AF4F046724B0
1A288010B28BC146BA52AA3BA8BC3AC57140BE830840A73BD2DB0498AB3820C7
0ADF97C135C9AD0B05396B8498B918EA49A5D5DDAE5B31411B6C14AD38929CAB
018080B03CA09CD44120A2B637CFBD2E42C1DE5F56CA2C21965D97F69C9AB47A
BE2BD3D2110D4AA24A31BEB5C9B00149F33D158749A5C7BAD70287AB318C1239
89C77365F05C578905BD5C0A5D4742BD06C4CA061FEAE53FE081049A199F12D3
96FDC8023342C9FC75F522C4FA9D2EE21380A4540FA314236CF753F081071313
66DF454ED9C7215F315AE792009EB323334D6FAF72B87B3CC1B447AE9796D000
395E97CBC9F120F8BD23CF2CC84822144311B3117752FCBC171FB60D6A98C2B1
5077D0CD119DDAB8844290677B3ED0A386863E2C49D4881721D19C27510300ED
E3D856232A0D87E2EEACAF6539EB35E233E9015F321D24686CF11A0E9761C838
D1728785DB2586525CBA0D6EBFE64A867D28C551B69C1055767D949910B921A9
7D5733D8ADFAE479F8A2E6C614C5CB194F1052747D9D69EE00EF5A7AE0D90801
1B6E58C1CBE5BE7BF5709FBF31EF6C248D46DE450FE7CD2DBE8F70AE32DCAE2E
46707C5AE1F5DBDA6FAA1C9BB5CA31B2C53DEAAA9A7F1C72D7A468D9087EEF8E
9E81ACF4376262A1D28C0EBF91789EF36B4B73C6361843E028C3A5EE62746EA1
E1A05675EF8CBE16893FFED1922132291420BEC23CFFDB67C2D0B8441E082F15
90B4E4DB1531BD8EAE837520E7541D5E0252079506A5FC052A49EFBA97CB23D4
34663EF1FD9A8EA7D929515B62AF7A039D1B89B5BD4574C677B8BBC4D1B9DD4F
6AE3080DC7627E942C3A8E6BFC9A801C75BC586E550A3DC44B2DFCFB6E4B8F37
FF3A3B1619A1918BD06236790AA47A02E02092C3F6C1302D2759B39A9CAEDFF1
CF3D03C9683B22C48313A112ACBD960672C646F843FBA86371CC06D060438E2D
6FE5A28CEDBFA4FA12E4F12F8F2D4DA159A776C9741C826CEC02477487B31AAF
F3E881EA13A05F1962759E65E25F5A22BDB414C852C8CBC4C6EA913C9F7B68EE
C90AE090015AF65BC5342FE2F21857FCB9D530657B7687F6073D128BAFC7BD6F
15D7B7B7443AFCD172E6C142DA86ABD6B0DC843CBBC03B8E7C76EC85EB7B29EC
55F4D5A0241422A0BC0F36E569F2357FF348449C01E8511BB1D69761E4E729F9
D98B5D75BFCFE8A7DC3B71B71E1493A2A3570833EE56DAADA9E29A30393FA605
BB23440D4E9369354002CE9059EC945CFCC7C70E6168445E0A9BEF5A253E3B86
E871C462610A0A4FCB3381B04AA50BB8FC1353300EB4728E6EF76235F3815E1E
B1EDA9A2391363E765B91DA2C206813B951CFF8444A2E9B40B9ECB9E11F3A612
E3454AAE13E549497F72A3A9B624B3B1546883BDBB5E3F6A34DB979CD5C4810E
193C96B187A76BFAA12EBAD6A453A10FA4CD03EEF1C3FD5D31F5F5E950E0279D
CEDCB3EFEFDC9DCB94473B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890A7D49B0A6C7268E399C6C68B6ACC0D1E9F5B2
931BAF9EEEA6ED985835323E85D72C6A607A99212BA2DDD24D57809EDE36890C
F8121121306593CBADA65AD9EDED7740C9A2F402E3908B54CB4AED249AE575AF
E64C76BA802490ABB489275E5A3F2B926955B0D961A0B9B3AE205C074AA695C8
68FC2F6997531FC328B8FC65BB06C17B212C8C06D5127A14D7989D24912D1CA2
1FF37457E65829B6E1C65A09C1A101047DF20ABCD57E067A7298091C88C4B587
84409C67D00F7D95FFA0D125FB938B5762D912E1C0E116AA0593B1231FDF3BB1
498BA3D20DF13C7EC6D40091B789C9FB7CC872BB73E6B9D4ED8A555CA31581CA
0F057B10C7A8CE1D7CDD4FE2D5332FC533158B8CE6CD3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4ADB1A2C8B962924F38EBE33CB1F16324087EAA3272C163
41E5EBAB778735C9E716FE3E69CF08AC86548A8FD6D46574ADE5BED2698E34B2
39BE8B2CFC423086707AD2510CDFC90563DEC9250C603439C7AACAD3734C2E20
89A27762BAA58BE9EB710C0C4158958CD6707E3DE6C99E7B22C57E18750541D0
B1B75533C5A9A08B17CCEC0D2F881EC7256EE3FB416D8D4D75C7DB51C8299B14
00E1242CE5BE6A645C2653FE55D062B786BC3C6651B099DFA54C7F37D97D22AF
A04E1FB8508297F5603D8DA70065D910943A34F7D5F2090FB4AA42ED70C4FFB6
FAD3E1E05C7DDA076F4DEB286987618DE993F0A25D913D1BEFA7D862AA175758
D7B3F037498547F9469301F9501BD996B8DD12FA1DE3618681CAA89D622F697C
25D6D88CAE47E6567488A918261595698D840214079A4071287493CF60835B57
D688D8741907B81FC89E6EC8F51ACB4086198D629A477E3EC8E73003B3DB2F53
E9BF2BCB01902D091C548A66D0AF66A92C6EB0D261E7119F16443AA0477405EE
BE032480CF7F1F13EEE7801A392691139D11C2ED16576F8BBFF5741403E968E8
963F4DD00FB7163B7C6C104735889652656F9B7392569E015564370C355A8685
E326C5EE66B6F2B6411A3525E6273647BC89686FE7BC434EC0815C2A28FD4EAF
D39EDEF8B54FE04B0A3A2E265AC2F21881EE4A59FF5C5FA95025C49B0494DC27
78A20B98D3E011ADCB826685EDC4152693AB3544B900DA59472981C137D7CA5E
EDA4FA3059151C49017FF1B1FBA0F5D7D4B35D4E24AC4A11F6D76800F1F3A1B6
E08B071117DCD7E1D83FAE2FDECFF5AFC8ADB38D53D8B9DF74AA62D7863A9352
526D53712103CECB95958F79AA2B2E89F663F6A17D892ECA7C3449D72DDD0B4D
E2604F7775BCC1B2CEF342DC478C11A86C1A517F863F6F48577D753923BF2678
B0732BCDB2DE05C7EBFD8999ADB05DBAA698F33FEC19C5ABD83BED1579B1464D
A2E3E3FA4916BC5A352D4237219BC63DD75630E4D7BF1E656CF55B9F5AEA07AC
8015D41788180FF9356B15C104868DB82A285837E62986F81259FB7817244184
2808CBF589AB946C0BD4EE037A9A6F37E1D3C746FBBB6F19B6D865F6B53D30A8
3557A16BE2165F9D350B16A23DB561072D7D4C2EF6631C96C0DEB80748DF16C1
3594C6D7ECB174D9C5BF4717DE19FAB7C9B51EFF06931E9FDA00232725D5F414
D898110DDF814AD6BB636AC41677DAD4731B340D8EB0B4F100187FBBA32F88BC
B5E48F6F7B07A6DC3E32D59D2CA6FD7FC255149D329B4C49DC618973B6C3A8DF
204526E210A4CDE2E1CB3F7EABA6080B0A23B2FDD96CEE3EFE7F98BDE600FBA6
6DE374ED33387284A4028D116830EA518473622D337114EC64147FFC616DF88C
5A294D69CF82F26A5AA0B759762E658D38AB2689F9340EA5E6CE95CB3F4EDA95
4EECB6A27F0DCCF1B603DC8487D041D60F4A12976872F5724E2A7C8E73748EF3
2C5BAB12AC733C90E8784354EE196F49F504880FE708CC133BA54E750CEBE469
3601B23A1A42413C50CEAB767534160C4495156211C26E0165A131A0599010A1
34C2AB67378A520F5A05CB4D25325D7E993095A2C8A4C19FC18C4FFAF50A2A66
D943DB2C4E5472497DA77B27D1E2B3781ABCAF7D5B877B8414F5526FA54BE44D
18E979D909B3CB626148B927D84A604F7399DCE3BBC59E41A1089684085DA8C4
F7772021E91D1F7AAA08B508374485A484D1940A3383838844D923446DFBE814
7546F72F914D6D32589997A617BFB22A6E2151E4514CA68BB67B6D0D7B20A04E
D8D5EC7D40F4D53C29612C95C55AD237BB434EBBBB3FB83F82D3E22C4F0DBDA1
84AC34A61D6E01734ECED4578EA958D0FD3492B7468EF9F9AE9AADC0A58DB0E4
3B19FF82896140D9CA750D37AD1ED75ED892766CAB686B55EAE02C3DB80A5475
A8668A33306747D57CBAA5AB0785C67806FE05453A5A600153F29B8390C024A2
5C32C6E203F6D2846EFEF8A009B7BE6A8C6595173161BCD6BDFC92C1666BE5E6
E3AE76F59F484F77490042683D8424512271B82DF615436CDFE05ADA952D9C37
6B77E3B287A68EE4AA455E71EABE07D132D8DA737FAECD8DEB7B2DB76616DC5E
6B80E522AE23F6464B2EEBE45457F98F9E4F2B072D165D632687CCF691D4D319
1E36BE8EC3190CC0BA5E28D51D26C7C29C20550020FB886EEC1AF898849FDFFF
63FEF585FD5985AD52A16945DAA59DF044F75E733E1231DE27DA851F9924DE9E
DDB672E577BE9D8730B3698D61C743A3DC9BA4EF5291DA62382E8F93617B319C
21E71783F2EC4691340690CFF085BF856C34BDDF01238DB2383725850F98A695
1378259276B5896C5C86CDDBE0C7CF586CE9E082CC1A166D6344B6A489626DF7
4B3E4F5C2D92904B4D0DA750DF417B946AC4EC19E9D684173F43ADD67051B9BB
7D8BEF059ADDD4ABDE3DD15B85C0874B11C4568F49A7B0096BE21F3DD9299E45
ACEAFBA5F719B8852E7DE0CD84BEDAE25772D890B3386FB81AE06BAC34C2DBF7
521EFEFC5181CF46B1FE09AE5DD3D62FD7AE8D348DA756624810A2ACC3525503
CA8C482DA082B533FDFC30E8D9AA57A8518D7D0334804FC92D70D0EF8841F57D
227D0B0AF9AF02AC83FB9462A163CE5C78B6C9BBE072B0A5B4B4AA9E5100C530
685D1B7BE7632AC6D2E920AAC98529A70659C08D21291D705BB5FCD0D6FC5D6B
F7FBD4228BEAA42367DA8E15B57D8DD774728E27DC7BA2C6B4A2A20C6469DDD4
DC081144BC80485AF12D1FE7388B2E0A4884E4A9A4872D8409C2FBA10AA92A3A
1D82F3B420727A33391C9FF20C2416E5FAD62390C43553A7DC4ADC349F0B2337
79AD539E11C6E7D603B7BB8A0A6280CBD8D6F661165E7EF3F1A926C8B4905630
9B30D4D78D822FB38783A0512A6013B243F9C5A354C32C65A77AC32957DF2158
D6E496A9B0BD8D9B192A09EC20B9D2464BEE663ED31E09DDB8CD4E97B4E89E23
753FDFDD740794B7F1BEB5109226F400E13DD126874363B99DF7B98FA24B59A4
970BE4A68F701ED5E3C97C675956D5E1D7A076343FCF5C5B203D46EFE10D45F3
77F8A6E0CB4EBF6CC9635827B29DDA9BB93E32D6A9D0E29F7C9E1FA888AE4808
764117994A5D0B28788BA44323D31EB39A159133DE3B295C2B63CA370A54B627
8FFB5A044EC97FE5C5DA922B6682CF186944A627D6239714B316692FBEFAA732
B5A805035DFBE03B63630CAF30A7A97A4C2E742017B1381A000A34920B95615E
FA7F9657DD4A9E1D235BDE9A08CD2C8C7FFBFCD1ED7305F1BEB4ADB4E7ED0F37
7E582D2F809DF7133CDC8B8E36C2A0561D672C9DAA577D79F84946
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA411984C107C8FD9285
F08FC3C879AE6D42023BE0E114B374F049F75FC09E974E64A63E36F76D0DCE3B
3E57F4A1C80AE684E56726F52F4A49A022808893BADF86ECD0EFEACC9F5B7E84
1DBC5A753D3803C89C438B0FB99CAF607B7B16433C977215E7F78D80C54177E7
D853C4EB05C108B4859A21AFADEEDBAB163F8C1C822C4DA3FB1A29EC3ACE79A8
C5A00293FCA8CAD6BD2A94098E88D45175D4D9A88D0F77DFD5C14FD6081321C7
AEE0F7914B79B9ED057E292AC7A96CEE551D96F4D85369D2B4167C0A622AFC28
80C6D6FCF36412F8EEC622F2783C9F1A0403E9A5D876942803F08147525ECF7E
0304D3BD24256912A2ED3C59B32CB4091040E21EA8F9253E6CB7433656B87E1B
0A17BA09B89DA54E89C36AC72560140421800FFBFCF4372B123AB0EAA5A28063
EA72DB6C8E32FA349461C1A8946B78E05C110976E5B4B81BD89C82D81AEC14F6
8511ECD14AC322A438BDBC4262A26D679ED4D87F89B2D3FF1A88AEC671EC30FB
4DDA9E1BD3A55C4D59BBFB7F5EFB232FCBE3C721D8D181B02711EE2C105FBB16
BAAF98F469068B96F7ADA96E4C628D450E7E1B4025089EDF05D020C458C7F3C0
A9E5F676EB11E606954B3A3613D4E1DE3727C04BAD9177A42914B371F4FECE62
5C47EC539B20F4FCFB72DD0EF45CC71FFA185F653F299CF0858E25008D1538FD
4D2748FD791113395323560E169AC68D884E15ACA3BA6934ACB18CFB0869D655
CC9E8B7B2A883E868B7D9AB5F1966D7364A38F999D57EA93937C58C1343F917C
4B77C7BCD394C7A7C155763DEF4609925F2B5D58FD32BB7BB54CE2DC59D09E42
CF83A35DC7802A111D96E6C592F5DA313DB18AEC1CBD734D9C289A53647EB6D7
735D9E91EE200FFF4250D413CF779E46A1A18E239FD522EDAD8AEA7F7EC5D653
0B3F2D2A59FED4C52F3D93BEEAFDDEACCA99724FC6248DFC44FCA9723223CBAF
554E37F1F63A7CC7241B6A3197C6081BB1F3246540E952D3CE37E2F63D1B34FB
1EBDC9A60F4AB8C27EF1D4E65E5E97328618BF64DE4BEE2CB0F263EF782C0D49
E6AC6384AEA13283716F280C3478C8EE4EA63876BB37A5F17C733167B2CB7DA2
0C340ABA91FF0B3C926798326D283B4A92B34FFB6273EF4F8128FCB12A4F2C8D
13768637D078225DEF89BFE7329F2B420491CAF1794C18E8AB1DEA1749E877EC
12EF096A2BE42692EA401E2A3A11F32513AB4829EF58D62DF6C4CD5658D8DEE5
58D56E17F13ED15C8E490FF120C6DBAE75E3AA5B8D06A527BA83FC7759239ED3
2C9487CE5089F76DAF6F1AEF63D276707539A79C0AA4367F4B1359BFE46E90DE
9ED306DDA195B893F42B5C037A98F21B48AB50B63BC616BA3F3C588FDD7480FA
2A14FCEE4706AA003DAE9F92D5C55727F7AC23F58C8EF808B093595E631544CC
051BAFED695D5C51797C4E9E14EC72010DB93C1EE96A8C4EA4856637A5669681
D8058179F67449AE6584B538A32295BC5C5F40DFC533F5B87A0D016B3A67CAC1
CE1953C9CF7334F7F3605E4426785042123F5784844950C5E30EFF8683D73019
7DEDF1DA5A31B8AAF9FB4F4C4E0E815AD1282D0003D149F5A1A1742EC110A5AD
42B236F512DE383DA77E7ABE6662843B857DF4EFF9DA9D4652CE666141182F86
363104165800E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4CC6FC03C091CE
C66A50A9349FB3B1C2A695930A19809C222D522ADC89CF698C61B861F1B4CCA1
2CF4B2481E472FDDC90C7BF552E25EFA727413E0F7C59661F1ECF4DCCE59D724
2984AFC94A2233E590A733DF8E98FBB11F635BA1B2912109796C1C7ED9476FD9
4CA6A05BB8C3A756CCE5D25F8D2B1B99B73FFECCAF7C7531842B95B7A4A67149
2A44B7F43E4219879931BEA2B95C7510EA319DE31DA5E946E39856B07D81DF2D
0C98672BD99C91405F80083EEFA4F53DBE3356BE438546C0FB741303E40B31EC
F7705509E83E336BA0A9264629A6EC25B94E589B80B54A3BC1358EC3FA22E15F
C60EF3EC60091856CB963DA4B845FB3276FD3F0B755A375F5C9D4F03D038DAFC
2F7B2FC44D874EE1812B3F153E63FE095A87CC113B930AC5E5548B3701982522
7FD74D17B8E54FAF294389E3804F2D8827B368FD56FCA8E01B8FEC2384E26B98
803679524D46A5A1BC4BEEC335A5C78E90E121BEFE8C3E1729FA4353EBB08AE3
9BC8B715A541515BA68D3264DF63396D5C6B2FB989FFAAF363FBCD811050AD49
BEC1A5CCE5CF234EDC9466F1B88FFEF31523001CE48D8F355B2BDC20BDB11845
0F9F9C13AF26147A6F94636839CF1075286502027833484674C9ED2EE44D10C0
CE6B2EEAA9BD1B7182CE9151EF2A4AFE4FA32112954C5B86EF7AE3D015FAC570
F6596AF00C0F5C7D6336E0E19CA338CCD852E4AD9EFDB3784C6366C4A1EB3950
6A273761A898F69A36FA0E6ADE17A52A09061F578841058F3FAE9DDA4237FE83
F267FB2E492AFCBEF4C8E9DF3FA6967F6F5C9216D1F34F1F9025773C7EA50CD0
1DF13A42E9491468078630B74E277F5C32166AB539082917BFF7EF652D589681
C4958EC2FBCE0E01F764EC4EDBF1A7E60ECE54CB38A7251F23A0CD43453352D5
C5AB3E3F4D4D5CAD9543A3ADBD3DA129B2195F29379C4B88C50DF01F591763F1
6FE1D1CAD9382839AE8C789A6339F7D36DAFE163824896DC2C7B007941D39239
CFA195CE54BBFE9F13E4F119193F62F76BEAD5C3BEA1E7044636F7D3BAD00C99
38DA2463A42D22D0C888082F3DDEF6558D68EEE57DD7DE2478A2B21894DBA290
3489ABB6B2EB9F977F3F4D690B31E8F6E08514B46890A7D87B06DD81FCC70783
17F01C0E31E1A4C310B0C4E5DAEDBD08EDBCBC3BAC588F367E850F9D9D2A9F7B
17BDC34F34DA91337E5469B32C9ED1980C4CB36101226D4929EE7C9DC63EA8F9
780763E889B13FB2BC0150921CF2C5C11A3A9A52E09A006B8124A80BBF26C1B0
D309A6E8E5F3879805D13FB270799FDB98850AC5630E0DB9EA544860D688E9CD
F25E98769FDA84FA98DAA60F8B7B4B80EE209CC66F763542D242050EE1FD5980
C610C2AE6F94B0997E15984F42D43D629178D72F01CFE1AB79E6A2F569230CAF
55EB6CF686087DE12B3D6D19E4ED3FC032610EC4A97842F2BB59894122796E46
19F5CE7FC3B92ED8BC604ABBE0575CF97D126E1669A54A08243D46A59ACBF3D6
48C1AE05E9A2A4432B7BB69C467659C2247A0B25217E43C8C3A9D70992C1F31D
C6753222850ECF459A7BEFF8CE272B577AD0616D09DDA2A16584C8D40E7F673F
BC859CFE610AC653373F102E395262C8BBFCF5C16E64FBCB889EFC8F5CB01A1D
7C7D9C1D968238CADDE66EBBFEDF28BEFDEF19D1BFB83991280E8AE164321863
7BFE082D98512C9D23F5C73C6D1049D98797B1FAF91561FE88F6B59AC7CB0A06
1D63D174CCE92A2B70638D24A5445B56F34C92CBD4E80331798E82A8CDAA8046
3BCC001CB369CE5D0CCE7584FF1FD3333EC86FFD2CB48D694619D3B6F77D8D87
56065D4CC919ACE44690CDB5907C380524B381B6236164777BCFB2273E157B01
E8B11BB02F5772F0FFB1B81C3ED5CA1ACEC503AC5A3F9D962D8B23770C91FF42
EF52D058EC3C0B13410D4DF0EBBC7856F66566786826CFB01F22A944EF21FAA6
C12D3BAC92E531CF3456DD2778F1181D774D8A4CDD0A5787C961FE2354A448E4
6A492EF0633D73C071CEA58830A18AE1C56554E8935A8E29EA9053C5F3EFB0EA
307483F841C23B766D1CB22E9EC67D91F7299AAC56823CD4BE926D0EE4E8CD01
599BC4C22A42A4E9F9365D91CEFA249A039485BFA31F9D1FFB1C157CA626EC05
6A68B66C652833CDCF08803F40EEB4AD2BE99A7A0858D7D26AB192CCFE79C07C
7ED5FDDA9D4AE4C409B2719E566CDF77D94A229FF53A0011CFA86DE80FF60B45
926E88D1714610671D3923BAB73DB3747D8AA14EC6059854FA6DE8AAAAC0A855
AA667C6821D655778926F8FE0A064A24CCE1F22EBA80314370DBEEF9F7CCD561
DC7ABC387CDF2B6C6F1D7D2B33C37AE910E603808CCECEFB9AA802F3002A294E
48053B5402594A8D6CBE3144E3F023BA7B594B3C738E3AC8167A29AFB38F8708
85E83F0F87AFCB125DB47FF5134FDE8B541232027AEA2735E8E862CCF28496AE
C62C6D2A9117340F3205C1198E32511F945E117287AD86E517267E421D37E93F
670D79239ED9C23CE1CB161F50091092627CA0CE851D73E08A7F3F8BC5E58313
03447C940325E2C4030CBF4F39893EAC86362504A872500F5A72E99FD49D0BF0
C12A7175C6305BCCFD126A1E65396D8881438CA223336ED74D2CB53F1FA77EA7
4787017E92DDE4CA70E9A409216C2F6CB26B9C95E60D2DC40052D3478EC279E6
FF80B23C94DFA8ECE2B7374827AE168634FA007F8981ADA3D0355AF506D88E32
379E2C8F02E1379F36DB5250CBB102B21359C32200E796531DE4EB6632820659
74F633EA0483358A528D56A6FBE9F3002E56EA59E9C2459EEA50D4558727B404
136F691BE1541AE3E64BE682605CE4EFC5FD59DDB4A16140C85D55AF2AA52C92
EE85C37881985A9F22B7E3D74EBAF8B072345BE26EABB77DD815A2C40A43FAEC
418E16536B30D75D3462EB461C609C8D47E2B111C2A48FAB1C999BD8C3910780
3EDC1CB30FFC89509DFFBE1F55156A7951B8EFD72B485F95F8AAAD655EC46EE0
B1269CC8781D7AE8780028A6CA54C77CBABD469AFE468B7950BDC321CC873A5A
19873D58DA915279D4C414D7511069F7BF2152984266E65DE1A3A4189DADB602
2E5AA9715DCDB8A3D3D1E9FA06793C754111044E6BD47DD72384082A6ABBC6F6
2F9D368D0F93C4E2551F1E1BD1968BA2383121482B7727ED2FEEF31983E07927
F8878102167E6C23C85BE7D3C1625DDFCBB59703CCC55D0802F05B67594FAC20
AE98EAD48AEDB936A29293C513AF98CE93D5063F7D87E6F759A29F32ADBF5D37
B697E1824527ABE5B8F62F15899242626C9F22996711088F3FBA80E2C1599E58
D1F25BC54EF6FFB05AA6289ADEFE783DC387F689DDB79FCB67920CEF937822D6
AB50026A3744BF5BA2E45A826F84216D7EAC6B9A8134C4E80828B0B849B269F3
81281EA458FF71185168B5152A74B0D383A2088632E52D26886F9BED966ADC9A
C306ADAB6AB6118CDDBD6201B83D0E86C2405A02517839D51030B695AE25CFBE
C0CCD5FD1F4EFDE44C2E47EF8AF9790FBF0497F8CCCE3002458D6D475A6DCD86
4A1AA95C1F47F45B554C5DB2004E075F188A9FF4DACA08F258DA5E279D8FA49A
6B1525ADD1FE7E7420B500C440D364CA8C1F272323156F95644EEDD4DD907472
7F4FBD3C035BAEBD18239DAA37517B3FF2B21C4398EF3C4DAAA73D2E9E02B7C7
F7C277A3DEB8EDC0BB83249CF414967A020E5B8B0F4C985830CDF5E299E0C0F7
F1D0C83ECE888457C900E82C4133E43905EE91B9C549CE3D9E2806607E422732
EBC81F6DBA1E01B1AC09C515B31676917D11D6AAC4F958DB61B556DC1DDD04E4
4AD3FD17A2C6A56854206D95098E2350C75AD80244BC4D6F73FDE34846245FB1
9B5036E5A40FFAD255002931AB82AEDD0BDA2953ED797E7569F71563CA7C5F85
5EE5DA523977FB149576AEA5549B61C5475A0A6EFB0F2F0056228FE28DB2DF16
0599E3A94522133EBD574DA06353DDFA9C87125E5C9B69FE0A5923903203E49B
3AAC7F81979ECA8231422739C0C58B4ADD86BF559D2F5028AE5DA5139E8DBFBE
BFF644019D08C6614921A8C129938FA16F33A24555973303D8CF202979524863
3B82EE3BB7AB14D465CB0E4F622144E415EA54E08AF6BE26B0A20ECC10367817
3A5E658CE844D4F0DDB7D17CBEAD0F5C4AA381B8581DF3F82578AC6FFC9216A0
6EBB48A7D5CF358A8F64CD0CA264AA0476CD88D97E2B329ADEF2F4CE4EEB512E
AB95AC899DFB6F5923EC7B3CAA8F046B4CA5055A4E0C3CCE2A30757E1385F846
2D0CDA1D4FE31FAC01B3BDC0B3A663581AC44D7E7652336E2DD2A86DF840561A
91BB942FF755C0A1B04D23F4F1B2E01628DF6C5A021D50886FE4E385E858EF6C
F333D987339F41F2B8899C23CCB7AEBB5D60F011E319A23D2D54576AA26A3A33
3761183D0C720073C05A2F6D7CE4EF45440710DCD3C90B959AC3A19FA9D0303D
AC5BE0058B7AC46EFDC42A3BB7EC99ED28D2B4A7B685B9B278C77FF850296A9B
645C8A6336457245B77DB5BED5AD69086905342282DD090F725D2C12B770B646
6A74DE9180A36895C3013A45F8EFE7D6D6BB6660DCC1DC1737FCDAE025AA1456
472B68CB75E7DAECA154625D290753F8A8446BCA2EBA9FA3B59F1ADC65ADE10F
AB296A939884449842FE797BA4473543F1383986C413CBF283AA4E1B6102C1BD
67947A2465141D0CC94768B538891AFC33B1E9929C9CEE82C4D82646280FDDDF
C1EE81028E13027F26BABF3AE38AF0FD6BD08D531F526EE267EFED77AEC294C1
580C3DD5D2E27CC4E0FEE585C057513810E439B5705D8987D32CB0F3130F0ABC
7C44086BC9088D84F77D0BA3F6A345EEB4F23660D57E81C232AC4877088B9B84
432383997DA609369AA5CA7EDBB00B60E26CAD17086C48CEA3FF695D59979DA0
EE045EBE4A35E0BEDD1E25DF20EB1EDF35AE415E0986768E3BEC5E192ACC1FBF
937035DB4920F0B8ECFC5B6E55D103CD56EC5D3671C94E6AAB04B37AC092F445
D2160FFBEDC3E4B9309B6B5FE9CAD2161CC33160B2617450B1B61F32572C4946
A32BADCDAE25BC4D7E3A256280E9447A13D00FA3D6E666B4AE09D0DF8AF91F1D
05B98F791A70802250E0B8C62105738F25F88D5DCD45CE52430CEF71DD281EB0
E280C1EA3C1E47644204091A0C1E303470EE1E8AAD274E14259A48571D77DCED
344C0A20BDBF4582011DB242B488416118607C68F104318C965AD2F0E56F9482
B8AF9A3FFE6A603B119E04A365378685B85A9826CBA11C00F4BCC269C84755A5
337C34829903FBF1D34D8D6337A32D5F06CA5583D50CB63DED6D4884B85BFDF8
A699A64CFBF0FCA8D2C58730D69A4BBDB90443083A74742E7A0C2BFAABFEA06A
1BBF176A08D3C975E980BFCC8CF7435B83062809E10DC5B1ED555B1F2FCA3090
7671248569054F463C9999C70E43EBD1E81973D800E720E96FDBFF1B2D1FD60D
7318D7323F9B6752AD3F194F0C8ACCC73F7D8B3B232643FAB39DE2D2A4C48E0D
8C4E450024909E5601B6D1E91E9FCDDFA1761BD627D86E69BDF08C1356CE7695
530BE32AF9ABFF613F157B6D35489507729D3A3B7C2E6AAB476B753586C697B4
14EFD4874CFF62A84963541AF8B46D6276DA9A6A66EBCDF427FF838F292192CE
B9861313FA254CE192150A06A437F194A50EEB0A766C689ECFFD2E5ECBBBB787
5513630915F1F145083D3ACB37910A71D4F26FA58059FA6144BEC7658C05E12B
A3BA84BC1D56915E59246A382A2EF44013126E9745030171081E5D5EB271BAF4
2325A7CA185A61D33A7E3016DD6362F3FB3299F341D019829AFE863747C1FDC7
B38BECE8BB0A7F3CAC1B4EA21D07C4D7BBA3AB19B14F1490E5EFDC8675BBF28C
A7C0D267AC0814AA776A2F731C046E7B342B860643E025D14171FA920BEDF846
2A59235F808BFBFA93F5AAD5573ECCCBB08273A8F6870516B31262966A171B2D
C03CD003680E92F0D10F566B7D87C01ED5E6E49F6D43AD5CAE8B56AAB796E5C5
54F4EA2AE2FF56014214CCD76BAA1D80F1562BA19D44A904C99B2005FA7E0F07
C92BC2A68D47019DFE0986B36BE8F6E9775A927F2EE7AA698D62E624BC2288BD
1556D40E81A3759E13390EBB491EEC6795729C8D6F0483F604EE345E522AFD19
F8C5F946E4718AFF4F3A1A611D47EE7B715BF06D0F86AD72B679ED40CCE32031
FCFAE2737B412807F7C9E6494D01703AB130D84AB9618A4CA77BC722FA601A61
23A48DB29BE57995D78FD99C5784B2B7C7C509E9B93BCC2935CF86C10B14F472
CB4F3E1D8B852485F974A2D2145BE0125AE1F1526DCF6D389B34C824538EC663
458C94BCA7D82F65EC5039310EF1F4ACEA1A40014BA27BD58490D2410B808C6A
D163C0DF5E0BBE039E05E2833378762504B6A257BB43C2E61C6F69E97493F3EB
CD5EBDBBE63A7C58182951B3AA708541C4671738A1E0CC16CC4016405B0E60E9
28E3FEC10CA164F462CA222E0E0083D34A891505BC19837599E69F256E24329E
C19E1BC2EE98C878DD54F9923F72D6AC5BA847A7B94349ED2CBA8ED26D3288E2
F0160FAD0FE07B2188A293F0F76AD99D6CF2DCBB97194637FA075E7CE85BA0C6
355D33D6E03C1A537ED6B29FF9D2227A5447F002948406AA5E6FF418EFA673A6
41E499437DD79826FA99B797CE57151790A040F61BAF86BE97F8DAA8326EB1A2
B45114244FEC9BDFA45070AF2310F00A2A464B0CB8B5EADD6292E4EE007B390B
4306B56DB0021606D2B39110AE5BCA209398EB212B6029EA99838BA511A88E25
C03D370D6CBFDAAC3A082D9EFCADC2BDD04583C106BA3812E5070286C3F4CAC7
1F4E90EE0661E9284998AB98F1DD4E042B660849DF95A39C74183F41E46F2C56
BCB59CE6AEF7E914FABC530F1F6510D8F19ACD02E04943BA7EC7F18E90B7A364
1CAAC1A9F7E87DD609A40C735DA40E068D61F2BDF54881E28A7E1B43265201F1
B4C49A4EE76448D1CD1E9A34816FEB195E5FB218CCB914449B44FB92C6E63D1C
3F320977263E4EB261F6718EBF15ABA15B45CE0008C97AD5F6D2FA07D508BF3F
6314B934962984C7FE400CC8FE48102BFA3084DF1A69D83BC517F09C0F7D604C
B847B63E6F54891B2C02490D0C06B8CDF38105C15DE2FD03F6F04CDC95021778
1F9C6ED40C6247A0E077BB143C37E0A0E604F5C5C0F1B1EED3C5AE4E1DB6DFA5
10A2F18418FF2CD33C89A49B87C1B241630696D6E8D78666DBF52EB8000CE1B5
5B2F5B035ED70817E8C999AEF82993A4B55841383124196569481872D2637F7C
40061417CF94256473D1DFEC96B8B48C55D6D0B9CDAD690F8976A67362C173F1
9D47E4AEF5AEA1F2204CBA67D2EB54FF7CB4ADD26DF3B254084F007745889B9F
3983211CF964849BDC8E6962785E4CCB6A2039BC15B70DF7A0EEDE6E2A464997
361AE04D572FB04D48E69939FDF48DF49CBE4C7BF1A0EFF092AEB20C9A785CBE
BAC7352F57C70ED2E4642815D8E4CE08C3953F99A361F8B5590BA9286987A49E
58129E672CE9991EB8C422B5C54257C66582997E82470627ED82B2F9D5CB5D32
B93F2CA8FA546DB1A5A2BF33C6D691D207587E83E22207DCAEE1D18C7A5A482C
1EE3D85376D595F18A4289312E74FA9C289A53647EB6D771E46C74671DE9AA69
7807EE15268774225FD2E9D3B5C1933B6C3A1DCCF42389A260FB4BDF2F5BBADB
D746080FF6E5C469D9A5443BD8E8BD8CDF61FEF2585E482EE3E27417EA149106
56948887FC431311F9A5F0D5B1E3F86B817A7F8B2CDBA530E9795CBE691C141A
143280C65FB2A0DCEA873AC7B461E0FB63D7C1CE62B8FF34647199266305ACD6
59F3518A8B601D4602EE86709E2642692593D4D14985545A41071FAD8EDD0165
1746F55BAE6D20F4A066AB48D9326985DC273B24FC9B07F1134AAD7C32A15E1F
AA84D69CE8C6203A71CB424C72AF75C1818F6A1F9547EEAA337C69B5681BE101
627FCB6E622B8AC60B869CA16F02FBD40708F6E4BDDD108241F68A7BCA1C18D8
6D1B0D5DCD70D140B498BA43863C45D94E6642DD04C9692A85412A6B40EF8129
335C9340BA899EBE5BA3C0911566D1E78B1920D259C0095BA4D5A0F9607E25DC
31354D131B17C741D529C5C10F6F5F38FDF5A9009205413A41CFCCB321E0DBB1
291EABC3419C009A5A37506BC273F2AD6D6B6E5E4BA62B93B21B999853F22A14
1C4B6217458B0919365662F6447C26EBEF90C3C5C5827A77DB5905522479FCAB
FCCE42F80F2F270CCC454CE0A227682DB88816E5FE553BAE20B09A6F8AE40BE8
937089322282BCDC85558056EFDE8757BD40D52FE71FB417926EE7E007419768
372CC0E84BCA86276BDBA191466083845E13479BF3BE8726073C5E069241A906
F0EF15886DFB61E3A6EA275E1D42AB092C9C4216D774A36899CC66DD9E141B22
1812DE926D5F5B853070BB58B87CD0844E561678BAD76D4C63A99114EFD23133
E2FB8243221A2E8AB1C927D6578C34519695EAD030B18D2B1B928D2CB8CAF6B5
7E971B783BC37749D7EDF4B3170188BA06228CF9255F632891CF8BAE0C5A3B12
27620AAABEA33E8692ED1BAF8CC157F78D75440D43A1842C41D9535EEF055008
4F465AB50CF5301148D3FF60C0D208A8233A0200CF7F8E6E6A6A884A1692AC59
8ED16C47D16F57DA03E70605C6454BF1F49B45D16CD53C8020A15AE53C4E7425
67609F501271A27455F796B03D84F85809FE454AFB961F688B806987CAD2C583
19987C4D89484EE18FCCE668886402A0A0EDE9DB08733416741C77C30A39A9B8
81E6454A486E0EDCD0AC69A34B5F54605818FC34559A4AD68EAC43266C4F9DC8
C616BA9F1AA22C72790A97CE703AAA6CC20B900DC631D1EFD0526D78F2CAD37D
9E52911D53498066B606F8D42B73F3E3550E5775C3B7178C0D169323C8747621
2029B22F885988C306058ED73421F9D738DBD7BCB8E14AF723F47C6B168CB726
9CC802B14545C8448B599BF784A753B513A289FBBED75E3EE8C1117912BAF852
504A91222775300DDF7F463EA60EDCE62116ECCD4722902BD2D138A6BCFBFEBD
5D3333108674014DBD539BADAD4D29BDC1D7EE470674E964559E3E635851E1B9
4FA0EF759C006D83B9020CC042D64D1C40BD085085D8BEBAC637D3C1CEAF96B4
581E1C92C1523C369946C3BAD318835D4707E90A0340BB7B6ABEB7219EC04E63
E90381E3A52638877B18EC6582059C05C665EC53F2579337B95BAC509D8865BB
42CFEEC2BC6823C40141148F1ECA353AD07C46D076DE76A585CC2F1E1D067EA3
BF11CA27B0493E7015852E7EEB380DF5047C4E2592F6C98BC185514EE6896702
5779E5CDD456756F33E7CE6D7DB100632A4C173F4DE74A32CA1514B3EE8FEF7E
6A70DE97442BC98689D002BEB5A6395AF413C983558461B68F6D0D6E11B3FE26
8772307DC168E01E794A1254C4D5CB44A6DD2B195117096C46D1167CC3B84A21
05BEC19134AB3C692C6647FAB3612AF3AEDFDA0706442BFC0B249362BF1999B6
EB81DCFCDA69E68F2A60A84564602003B45B60BB1B6D62DA735DA6689C2C03F1
96AFA2408EFC0B5CE164677EB1969E80FC408A5814C436BFD269595F1BDEA4D2
626A0AD63FC287C534288972EA8EF08D36023DEDB0CC9AE428714DDD6619AF07
85E90C2CEF5CE0B9B3365353AEEF2AAA1B0B59DB7E560EA8EE27A15C1D27E5A3
7C44B0D676049055F26D06687405490785E5974AFF0ED85AFF0B5A4D3C2D1D94
B53399FCDB0B9A7F2AE36932B1C53EA335483605847F13D50934419FDD3990EA
EB73B9CEAB98A5E5B24B1B627B7A8FAEC8F108960FF6310EBD4306E2D9D1D13E
303C932EDEC2896A96AB8CCFDC7A2ED1CC6EF05E7BE3767D68053B9A33CDD725
BB56D86F22ED3EACC46F750F405FAF96268E80A1E04A35845B44538A8917FFC7
7B69D538E9731D8ACFEE6142AEE1BBA437545C4776876111BE2F80F3F67EF2BB
8A7CE6FD95C829BA1924733A6C81AE0BE8FB1A69E4B79624B13159F6F0DA988C
6FF06B7DEF84FD26D37942631AEA86E4FB350EEE8077AB14A3DDFA2F11A0D89D
F6A1D559713364C8B41EA510D612146659C2BF0FB69596881BFACA9089ADD035
545E9094932679629CF8906D0F2E1E63224419E5ACA10F637832A1658756AA2A
ADF4F9AC7621009A516BF6FE2F8A052E196CCEE9EDE37B1D01A11B7030840575
96B8930BAC7BF095200979771AEE3F8BB74D1B1861DA7D23E3E543B75A97A7BC
960A7F742A2C89212834A553B42BDB21F7619180B8C7E0F275BF550881FEFF31
BA32E72EADA68F6A0DDC1BF80268E5088BDBE5E056BD4A4C4F155166BA36E2A6
FA8745C28178B036AC8106AF258648E1C966330A3DA363331BDB4A21737805D0
C1CE0EA78352CD22E77594549E5810ED4B2A01419CC245078D1D175604B228BA
1A08DEF7D871A1D5C5EF59A3C0DB4A6724A7B6E605242727E8CC4149D01BA994
6820758AA4FAF24D6DF96C7906DC4D3F814370CD3B1ACEE58FAC763D309BF5ED
9D8632C4BD136C89169D45718A88BABB84C2581AB40EC799FD22B6D45FCEB6F4
FB134A21534FCDAAD311B1422C44EFC191009697138B9170D8C568BBDA8797F3
41825ABD849980EBBAF61719BC50DFACBBC5096C2DB4498C0EDAA9F293E7264A
221A21C15AE0743B8C701025C3AC407FB24F4ABE14345D6A3A253C967BD6F8B6
132800EECF73E62E6B46F76D950132B8B91CC23324AF3DD5D71B748F6814D308
FDD1F2E214177FB453CCDD94B102666269B3512888E10CC9A453019DF489FBFF
737B679CC1F5AFE3453AC21512E0FB7C64CA58C9FECAB09B364BA46737C2A61A
3B8F58CD63014155DB034B8D006AD4E65585DD5741BF8FA5615C67DCE3740E00
9C0013ABAA4E15A612318059A253A0AB65B55F560307482297455C4187390037
66FB193DD7B97DF0F9A11121F93D2728F1E41C94D9928885FADD5A7E59CB4287
2E6AA780C4208139FD8E3130C5C36BB2496D555431BA22C4B3E462E947B12955
450FA857FF46A7F7DDFCEE9DE8AAF84F6D5BDAF0A33CA7DF3F607647F4A11610
71C9CF935A04BA5D688982C69EE38D7B278B16028E7F91CDCFA3F062FD5C9430
9D2CF8B6FB1BB5AA574008C77D6A4A6750E12B6705E0ECBB9B1B75EE4C24EEA5
12C6D38A8CF1BD2EB99E4A9D1DE6EFBA5E2E6F395F0D6A4B4CC2A487BEF79C86
8813B9C0BA8F9A50E937AF4CFD6D3DA4DA070D49720DF53FA0A24F53FEB7373C
E058456E0E12808D22EBE619598C6FB61C68169211790027B87A0F02EF9371F6
C2E217F204FDA7AFCFEED49928ABAFB7F310733ABD960B453657417FDF0E05D0
17A112FBB2BA9013B0082F147DE584B1BF94E7AE2B160160B16ACFDB7CD0A8E9
BC81A3B2274CA6E1717AD575588418A95335653C7824798BEC88263D5F34B341
078CFAC444F377F12D448492DF57CD1608BE0091F9AF137D2ED327198B77C84B
68E348546899D5509DA80B6D4D5A34A523F7FEBC5BECA2377A67BB580DCF74F8
7908EED631885FAE463199A95CCA61379EC4CE33BE3E81B091311EF157E42904
175EA6F9DC98D406C4C0EA88234888B9B7859837E214CD324E34C467095B7BD8
81F8C3AA6FE33215B51AC0A0ACCB2CE2FD613AB205117D988F73621FD7A84735
F99591DCEC42CEB0A90A36C99B0AE36244814E94F3E09D480F1FF2A8EE6CB57C
A2442B330BB37D5795F85F7B8C324AC1829BDCC22E7EB3B51B93A36C4715E9DB
342108B5B8E00F715FC64F91985ECD01D098E0B6E25717EC9AC75152F916B958
334F352CD7DD27B64588C412989585232613F56A84604E61BEEB21D35BE63822
46FA443D6910F0CAB9E7577ECFFE71355D244B9C1039753C0640AA1483036C3E
4118FCEB57F8CC3A3EBB013732C5530790E43F1B17399962E0B01C58F55CED1E
AA87E1419B199244E01635CFFE18655FDA35EFCF8BE4FB0285A41423130957D4
EF32A68E51DB10C89F18BB67E1EA7D1301DD9CE04ADE6C52A0147952F4D50DB5
0730DAE951A0851D06F5E1A3BE4D5A5A7FD3D3AAD20028B1DC009F42CC87A327
2C58648D2F29CEDB294AB6FD06ADA6C4F7AB6375053E0875C0DC50326A4F1EDF
8A6170E257A16D91F629FC2A83ADC38A2F2FF86C3AFE386179EF5B35D9730F3E
4E67F2FAC2082768ECD3DDF7AEE082148BB65C37A7E87640994115C81497D4D4
82E427C76929F7C11AF68FC5C87A4507A5A16CF5355BBF46B92CDE3C52068336
290D74705098D4582DFA973B3317E339B3191F3B728DE40ACCCE8E958E0391F5
3F3EF506C65183A6B338DD38AB88E4670AD128169BE7248A16F42EBB466A07FE
6F45BBF79F3474E8378B3859CA30675DF3BAA632D451BA485E740E293979BB4E
FD297D3442FE057B7F2FEFEA0DA032EBF816C3B5A8287903E9B8D4C91EFD414F
77A77270A3341264277B7A3866C6FF6AF5F232B53E441C7B9E9A3CD001D3DE8E
C0EEA45D86E4C832C6C77492190946E4A43E85BEA75A6BC4DC998E34C8ED328F
3925D37219EB34EBF6CE55861CBC330F4729CCA2FD670572097EEDBA923C90F3
C01FACA7B475E3323F85A68021169A1BDBEB96785B585CCFCE857473BC569D4B
486AE1DD980419DD6795EF1A3920E59103087A16906C69996F208649DE85B97E
EA1820AA9F63D4AD244C9843851849C6BF4F4B0A929474CE9D55A3B182532FBD
DD2C09F878C1DB2D2BA5CAAB092A3F94DCE9D115A2E3CA996952B71B7F820BA7
A0AB1E133BCCEA721AB7EBEFCEB8F52EC49A6823CC2DE7FBF4CE7920D8CA2332
E0CC2FEBE57EC76853351F99CAC6349A8030F0285C7180CA45189BD8A3B135FE
7050A6DD93D6CB6FECC3E8BA84E391D84D3A6457369A57F024908EA52EEB4A5D
9D76621421AC5DFA5B1AFA9EBAB3DA2BEC0452498F86806A0BBE4C71837ADE25
606CE729D413B25FC9FA41AFBA1CE7EB73BED06F79544C1C283339745CFF9AD5
51476FE7460F7234771297173CBF741F09A14CF9E567FE7D8D483DCA3361F95E
C9F53946FEE548A3EDD339EABE0EF038A5AC83F6DD79345E02C664E8B6E96B6C
797307BB3C23B0B1E8CE8F83AF63B851DC80B69CFFA286BA34C639115CB402AD
2E9AEA927C62DD985FBE9C1CE2421892C6FFADDBBD2F73EDB3025F9B12B52159
18193CCD63701C3C4909B75D5369025324B818204ADDBDF0C6067773F771E24A
BDD91972555D6E73579B6C14B8725D8EF8594775EC3BDB37B6229CB59B8D06F3
4783878D7E8A8E4921FC5685AB6A13B22C5EEA2C28939AA4F9886B141449CCE3
A95318E83DB5FF5AC7042182B9B2D841A6B8F3F9FD109BF76300D9E2CB7AF4F6
2760DE1008C98D7CEADB3CCA6E74D851CCA12A011AB97DD732A7CF40C2CFA369
A5C64D66319AE0C7A6370C21AB153F59072ABA18C0FDBF4BE3EC64BD5F5EE17C
DD2CC128ED61E3E996DC3B533FD28A4E12F4B0CC42EFD18A09181D007FDC8CCA
333BEA774DE8B4599ACE588DC7B18B6A717F9722810F8C3E70E3AFEB079BAF1A
4826B974B86629CD8A15EBA397578A6E29526F8BC0D39E47A945CF0529E34C56
0CEB551BE37D8D9AFD9590C4B8B7394551DD5063390B14B82F41761E0AFEA23C
25ECEFBE5CF4A4A44637C890270163607540CDBB3709E4A9545AAB5311C54596
7F311C9174332E793EC734534B91EEC5DDE1D8BF68483C3D239C8A4EF0B0D02B
E90F7DBBE47A336603D97A6EEFEE6090A1DF9EDEC5A3196E9B6C6FA4B7408F85
F5C6069BF3957BEEA1503C101C9E6496AB07A8CBD4DB1B7F5B10802915B3A7AD
7EBC15463982B7BB2BCA402472EA813E71F4912B6CB4E29C77D2249FEAC7FA5D
F66A294AFA0C99DEB4925635C226E1221C8175FD850BB18E74B727CA15AC9170
B16883442DAA883D028C9017D6B30D6E95F0C4F38D14C98E88531D2F455AF7FB
D99429C486F353AD514E3EC0BE40EEA03456D80DFAA62CAD453C2F83093894AB
9B449F059AE819CA5192EACD8C9A943C1ADD8CF633D91383D40C13150696B4EC
59125FBE184ECA7779AF4E1C60FDA20B03A3C3A395FABC9E75E662CB4FC6BAFE
A1CC1CE1250E82E9BC673DBE512D32F1C9CAF34DDDD4884B6079D8E1F89BADDF
94D163A4A843E3FA9440829394DB9224C63C3F88AF94A9567967AAC5D5DC7373
D9C9F1C30EC13166D6CE197D682DA4B8775004BBD9737E3DE10A9173E07DBEDA
0869D0D67C31F534559D662D4B0DB98EA9AC5FC3EAD979BA7BFDEC421CA714A2
08640FCD2BEF029DA0D8770B3764F1CA4B807C8D71EFFFE4AD3461326E5B1258
BF5AE63F6F30A6015376262EA3ACF6D119AD1787551B020F475EE7004D179FD6
60B8B9BFBC4660FF42190819DA4E7FB7E4DD4A61F2D10A603A0F4DE38812F9D1
210349FD2DDD7A81D18E49D44077833352FD5F9C0FEA50C30A312CE299A42ADC
168C6D5FAA4C18AEA81E98DBDE390CE5F16DE76F7DCB69B1ACA5AA995EDCA2CD
0ADAA949A2EAB9CCE57B8B14C53BA2265A495C28D22DAA0C2F625E48C2980240
06E4466128A5A822064D851E10680A1A6DEEE6D2C647D1C8580744FFA1036A32
0FF938F27280C742F4BC24DF6F5AC4A1E0EB8491A1454ED3B5FF5CC5D7DC1F8C
7B863933EF0F53D6725CB351ED76585A2D695199B0654A5A7D19CD96B138FD1C
28B672BC0DFAA0A6F771BEB0D42B0254BA31629B61581A44F53FADB6047ACDA8
6EF788D50AC6ADA72D7DA44B29FD3F28BC2BC1F61B40C08905C71449E90BD6EA
65B8E7DDBC69A7F7EE5667075DB2E555B50FB8224C27161748515E1D0F154BE7
887643D8B9B577BDA22421103FD9715C07F0D77F124AD1252903E29951B42E51
7793832E01258058F6006BBAEF5AD04A2A0B4A7575F833D6D87639C1242B0CC8
A8339AFAB41082C37446AF933A661FE91267885FA95630BD7FD13222BF067006
1DB2E66D3EE2B8464490354DEFEA96F04C5D6CD8E09A37B35C80BE7FD8E766F8
04AD8F2218C3E4E6819AFD04F018DEEBFB8D5A33CE2A645BDBA2FAF64A46B091
0BA9E173FDA2A093C08380C440EFEC3D9EE86C5D2D72511A9448302E6FBAA18D
D43C98E7419505362C109C81DC3C5238524EADC55DFF4FC54669582EC38D93E1
E6C5AE7EF2EA8E0AE872C57280EC0FB42A450D71E60590D321770BE7EA615A56
D289B214A4647E53379B69F2E1FED833E2C18F375CF26546437723B4437D0537
0FFD827E439758B2C119DE916B29DE0D0779BC5594BF3F2256C2A460D5E5059C
CB66B0B429465F121AED5926772541E19915F2B3A1D79E67FC1051E57A92E06C
557FAC744D9ED24FA824A3708586B4FF1E2356E0729DD784C3F86454551EBD35
B2669ABC405784976B78D6497ED547EF3BCF6E11B189CCDFD55F9CFA9A43B99F
77697F8388E84DFFEDA7D3958C62CD9E9443E0BBA5302E788658C0CC05B58BB3
1B0B2AA818D1A3F1BE74036FD8A76DF28EB455824CDDB7214E064D041B905D15
30C8167E227995B6517CED8749E263AEBDD3EF231CCA7C7F525640E329D60FC8
AA7546D1ABA1A5C43AD2E136C390723D630F19F400DC1DA5546C2EF38E1015F4
9C63FFEC2811B93E04BCDA588EF807519A5526F787B53096F832A3E9FEA9B227
B94651CF1F2FFDC112185C677798333A695D5AB39E041813F745F2E3EE3C0F37
9E76451D99AA82119E8EEFA1A866D08C1F42ABFC97E0807C576F7217728F9136
95F6A94A1F949C17FC99EB384DC7963F4C8B22DB6903CBA2641CB168927E4925
532684A429F690536B79F694C12D75CE08B0061C079402E2BD9735E69C6303EE
57D75C74FBA727705134491A2E7FAC007A270363836DDD8C63B9058005ECE3B0
D5E5C8413E88F74E1E6A135849F6A2DD71244891FE993445DCA1A30FC0BB894D
769D7CA908B6D26D7B217CDE5D9F0E3E66665057517CD7803363BC90F19D98A7
2A2EDD5337539AE1C3E66486E30F1299C68E97E7D0CCD7A0F8ACEC2E8FED09B7
B7D697A6CC35D1036E4686A34FE80F9F2F87BC5ACC4F23AA7C87FCFFA285EA3A
43F42ABBAD809C3D0F1D3C07D0AB62B226BF075803360B799B2DD031E37669F4
31F95486782A7DF11A56B6C5775DCB73A6414B86DA44DBFA1C2F2677EA644F29
AABAAEABB92B2DA1769359BCC601BA85B214C6E6C9BF579FAA33B369EBFA1BAB
C14A906A6DA34BBFCB6B09424A5882DA5BE3355F1F1F2711B525237E75AB5D83
694B5DF7B50A1C62E61B7D8B2FE588040424B0C8251D22EFD38216581E410ED9
6B711458B7D5F8ECBC20A1FF6FBA39B52B8A60E25DE4CE2BCD1E02C3D7002507
FE12A9889FA2FF427C2024873786FFEC97302900B172925FCA18966321C3CBCC
27FA43AAE5B49C399D5E8BF62203565DC771ACF32E65AD4289C7F3A03283BE32
C9F7785F8E984220443B845D286C7B6B18E0B553E8D513719B44EA0106DFC468
77E1032CA8C6A31D0ABCD2A235743933C82089F699D88D6274FDDD1A49067690
42E8A83E2E7D8E4CA67C165A6182D051A02044DDFFF73D915A92E07D2228D398
70DF1A6C0B8034BCDAE7CED10BF7AC808DC490ED76D805F8957FEA0052D1726E
C6287D7E6A23F0C58713EE4686598F875C9C782EB39A105A71C22CF37FCB40C0
E7D83D5A2230B4673692A3A3E95A52591D794734198F009DA37186E6BBC957E3
1B7641A745C268FB11A2D11F2F5641BC10CBCDEFA257E69AD350F7D1EA566E57
13EC7ED472A008456624447BE9321E4DFFA683D6A15BCDF45C969DCEB1184901
A4E7ED359E8AC4B036CE3B855EE77285CD14D39EBB87896DB83EB909D41E6A5B
65AAD847E1A694C075C97D92490662D7A51B14F6E13EE500835D79D5FE278516
EA983936A6CFA780F0A5E1569752BCF5C8B00400D9BB63D5DF3CA040A385EB21
FD135A9B13B37EA71B511CAFDD8CC627BCF5A47DC0D363B82E1040111662B8EC
012A4EE51591E645AFC6EFF3E84B7513F1FA1B3B3EB8AF4525FBD37FCE83F046
57F239D60827F9BAF6672DC80D9D2F3ECBE0235EB0C0A5D436D90E16006762D5
16CCCBF3919739DB56F4522D02299507F5DF31CA0AF4D7262C75C96940DC3847
3E98152BAF5C1769B5A25003389601489BB8A3932C81ED34B43A8A9A44FB2767
7F033557B262B817D7C337833DD53B75B05F357A76FDDC3D0CF15BA05A901D8B
991528CC1ED3B30CDE23A07FFBB7146673918CF298CE66E65983EA230EF2722A
F3C11A75F0B5B3C1C6313CF0CD29AC91D2D374734280ADB1EC4B295299BA4CB2
1C0C1DD432FB5237811A4B2A4791BF70ED2A118BDD810340B5E6EB8E24A307B2
221E490DB4DE53F08C71E9A95C5AE2C1B9BDBBCAE517AD82B6F4EBA47DB5C4F6
8566BD1BAB8BE8A9292759BD832FC1A40F580221BD5B80B80E97CF253F3CE8B3
F3CBC837DD1506403215A33E829F99E49122E726F3DCBB29F24D88E90FABA507
6969F99A82B5E558E2677AC6AEF085D4C0C92A8021611C8CE906102D5F6513FC
15FDF323A7899A1BA694A320774FC770313EF2F526C4F788A8C8499A8917CA38
47905CE59E503170D597B029F810FC1E393BC856E13C13BC1D1BEB10CB61A60B
FBC9642B9EE451B5CA6A3287359262A663CC8F3EAE795056E9F91EB389E43287
DA33979F6888277E2D1ABDAF2EBF00137A7ECD260DED0C84C64CB9CBFD780C09
9DB0C9FA4CD4CADAC61A3A8E149EFB595D479CDAF11EF27F1C85D2D2F8EBD97D
9D5D461A2252230C5A6973654F78C58C993BB03E80CBFBACD97558FF82603D49
431D17084BABB6AA9C1EA487E9152DED911B062AE1382468C394B15B263F794A
1FE97851C115B2825160E717FFF377F0F3654F4CCCEA2E675EB56F41B247F3F1
94DCD20B268859F1B53E54EABDA3DA36A5777DEAB9DC542BBB9741630FF8CAD9
2488DCAEC0403D74906EE1731129950E3B6FD978DB4479F57495F1009F940E95
B5D379454BD3DF41D19656968FE9B976EDD8599D460FBA0510B4637A635C6A37
6520334EE5443899310DAEAD99EF9D95BB3F937F1AD84BCFE4C98234F5A6FD23
AC4CE9B33B14D95CDAFEEC5907086772F4BE1CBA7691480D037E3392551D5CC4
EE98C878DD54F992BF1035C50A8F0B27E3FD3FDC534543B13C776F9D8893BCFB
E7BA26D55B449779B3EB054C08AA1FF2664C6E168929B40E73469A36BEC27B7D
126C181A7CA9B72D5787EF2F2883FA2A4889E45DE2AB226E7E3F29A38E96B194
B1FFA220503E9EDC623DD02C323D7064944D89EB2E6CA03538ECEF7C54EA07F6
FDB19C96DBA02AE3B0DF0C17BFBCCF622D9D8817FDD3AE194D53E9498614549B
82E5D9D13517F026EF235383554C1F534651D1193AE5FCC1D8E27B78CDB2120E
B02CFE5B0A5F675EB6F513BA4ECD5DA9B3ADAA6AA1F9F2A9F7A9C4B84B9E10B9
FBCDB3F2ABDC2023FAF26D0251A3799F7AC8EC8E6CDCA9515D6E911192A0772A
C9CCF99167639A74B63AD8774E6299DEFF547629910A172C63A730CF1C8176F5
C388A4B24AE7283EB598E4B071535201C6C70DF1C755A6A0C75E67953C412A5F
6FADC75BEF5331B96AF75DF0188BA02BA7BED03D24E34911F4187E963AF6B570
63911E20CC1F0BE02E645EBB50EF5B8E7D4AD63AE725242BECD5082219004E8D
A71604E6933352F0408FBB4AF64F4D308793FCEB3138219FA34CC160E1611AFB
42B21301F1EA3F59257F0E92F31A0A715279B6A3B4B30805394A3D3DC9AA72CC
D610BCB5E64520033DF3EBAFA60F6ED8497A293261E480A1BF9C4AB70E4E79D3
3792446E953D8E9950803E1A5E79C813A31E124222E5DE4AE81A1E16AF3354F2
4886A6C4445550830124778E065A4ADD58BCC72CAFAED1EB86AC745F6C76207F
0434C9599D05DD150A7C29A8BF6A840371A79B8D2AB527A8515C2E2329AA24C3
942A7104033DBD8D7CAB58A259628C344C677EA76FA0B3782F02366DAA1C1574
E4E1C75C0C1920DB282B26DC0933DF0590CF2001DD976E0FF7AB74E830939CEF
9EFF0B7FA817B2973A7DD95352BF15B290D229A1C353C42A0CB85C214B1C5154
072DC18D93C36E0D6286FA5CE8A73ED2F4B0038635EA1891DACA66CFFDB352B1
2A9BD2BF87FF1183A8294FB157A7401AB49C80F23BD2DB742F5D99FBD2DEFAC4
291CA8D16D9A2D6E64C49A796D7214981A0678BB2138B7FF05556CDD7FAF7FDA
EC29E7151445216C26286A1459620A95758C87D68C6605E242C213CB237B187A
7B54F41B54433526B5BCF13D212D3FBA9AE6B0AE4D83681CE09B1BAABAD5DEF2
C0EFFDF12392A08E129B014465B50CD7EF528214F30327AC66151B118B0D0451
FA5C0CF712548B9D164B87B1EA7B60E209B2664678C070E5C8D318352BA6B4F7
380B9DF235CD78F675A952EA29A751C457DD331D088131E75E22810CAC6CDB28
10922F31997A2D61CD02CFBF5AC9C6B0B6103714CF4A4B2143CE22FF470F696D
A474B23CB8650C7782685DE11ABC85B9F5C5D0AA1E1475BA9A9D33EDD3B38032
6B56DC872F0AB224EB3B17321898025CA6C31E30745909F90CE97F7D3658753D
370391C496D1FFF138664E5D1E0182CC8C70D84D3C47FB6335DBEDAD13C5F886
C67C38626E6B6DA2E75BA9995538EADAB74D3DCF35CE7CACFE3E3CBA2984EB13
6ECA5AA00290C864B2640E65464560B3A4083BCA0CD61D64CD7396000CC1DA85
5281486E8B243D29114BD7204419B5C06AB5A1B0E180B60409525FDBCC65958C
C35649186FA74671E1BD3E206BB0F2392BD8E2B90BC08482674F7A33A7FBF525
D7A8D7607C19279EC0BB94AD9DDEF9A9A339D74B436205126E4CDCC23EB4C431
FC6C1DBBF79938BA63D8CBE42B2CFE1B1C5A0BEEC5A1AD2C208BAC8E9555043B
81EB88F452F56193C9D6D357122AAA06C55A90405ACC12527BAA489DD69AA1D6
9095C7AF363BA81A2D8EEF0D5B1C18D1749EF164D33318E970278AC508D2AFFF
203485674E77A2744838A9CEEC88E9655D5D5B3859A9265997F60F31FA623938
74C27991334762A700EE46CCFF0F8222069A239E9C090B59454B825144FC8798
D2B6E2B78A17B802EF4CAD1AD8D810E5ACBA4C014A2D47DAF56605F718B787A3
8CD24D660E9C41339E234B1EDEB20905D2369478E485206155FBFD4330C584BF
E5F7EA7494DFCB3128BB928CB1E6701E63F7B741344010B345394F22199DE571
B5E71F57DAD7B753B86879DFE1185BF04B4E527C706E114259F990D388284442
75706266E620FBBF4BE80B2F496F0CED0D1963747A7AC47A9D2F4A10FCF32787
186F2650B1FAC557666E6FB73397DC4238C6FCFD62576548D821B40AF593D4DB
C59313D2513903102C07F8390C5C521E9113042786A385EB408917C103223FE5
EE289E34EF732FA6A5566ADBB5ECC056498FB8BA89E38FB33C770B71F5FA6B48
E872B17EDA24E8B0B8BE1CA4DA93EC36AEFB66C0777FC626EDCF56C4A0CC0A87
343AB6AF77DBF3C2DDC16FD131C7F302A2F9FB65ECCCAD46169327C857F48767
637093A0A313BDF17ADEC6B5D27A5D3AAB29A90CB01EF65416294CAF223673F4
51FC750AAE067A3E87A98CF485A5ABB5580D48CAA783FC4360E8E49FF5E7B9F5
FDC218C305A5CF3A81942435388ADD4BDCA1CEE1BEA1A77EEF42F50F46D67A4D
D781A368E75CCC7C3E9D61E023AD60CF2CDAEEEFEBD12888FF26D3263B0A734A
6204DE3F6F1EAF14CCB7901A3C1C54A705AE4325C4BEFBACB21B1041C5C68C45
B7E6448FC00D9706302210758E025A8E35EF6B9DA81147E75189BAF640A23EA7
48A4B9CB740AC6487DD5F14F41574247A0FC3BBAC6A6CC99C46AED0692568D2D
85EF3C57386D2FCE8603C663E9B26900FACDE591FA91B975499A088196A877CF
F424F99584BFB274C4D2254DE23513EB6E72F1C7FCFA2AC432ED575511FDBE6A
FB34657559B9F38F17E3877053BCC3F004DB440C372349CC2631116809206D8F
C9AEA87866065A86E8C27F8FF6D2810F4434BBE0556851FC6BE6C6B7422A8B1F
6A1098EB20A5B543B9F395508FF98E3410ADA67D0353AF45A1F173B1F353814C
0425422114A26E9D403A4D59908C24BCF00261E2B36F8D06F4A8F57A4DC5CFD8
96E5ADBB2ABFE070DBB2BFDE5AE79C6C268F074924D0C87331C313B5A62BBF6F
3F924AD3D83219C4683540121D80A7048295A277AD9D0FEC3B62A43712184830
3A7067F02BCCB4FEF383D7E255919BCA3186758D9F53462BAC038D76EE6F78D1
B5DF1483FDE83815A97A3C0ADD82450EEF4D1102CA1BD85795137A61DB977EC7
BDC3F755DB6693581C5B4EC466EA119BABF0145D6824F051CD6391BC93472F78
0F0D6888FB6A3BFFD27D21F892B9AE62F4A045DB30BD037CC7E3071A554549D1
C28673DEE0019727C4CA3BD19D028FF20ACC2C60A822C940671D1C0DB190817A
74BFFE3D4B90B2677C799C8989072BEBB4FD0741549F02D2858AA20609999C09
87D86E381827B3EE4FA1597B159E5E296C40B01E71A6F3A65EBF6BC5D6C83591
8A52243149770CB9B700B92453683899ECE7EC3DDFF5B0B8CCBF3D9CF8E9CA7A
2A88DF09B8B1BB2CBC485C53B76929E9814981135538369ACB070FE886A78DBB
A8C01F8CEF5A76EE5B9CD8C705F65F67BAFF5AAEBEF5C10F13B6A0647A5B45E0
F1378D7EBFE67BE3E3AF28807251F21C1EC7472D56ED0C13A96773010808971F
C44F0FF1C2D569AC48A0E6E0162331A7783C8DB890DD82B9077118A04252A2D4
C6775612347F6F009E19C15740E0D30941CBBB01697186E3E5A927B8C53792C3
09B3D28822968726E8E357CCBD1B932B3916F852CE9BC8E0661363B9A7D088C4
7FEBEA13E2B29FAFC89C2430549FE1ABE58BC6297B05FD52E99C741A3E0DCFC7
5105A7D7D2067EE56B77B439ED5EC49CF3C9E438FAC13FA8F9524F117D03DE46
DFE6FE21E9EA3FDF1C12F79EC36144AA17EC55B74EC5CFDD4DD3B3A9D3E2390C
346F2C10D7B1067296F7768B25282A209E9D8BBE538C8E53A2D4A76E4AF52BA7
2F37E472BFDF738AFA4BE01B38C2BA1B1562D9D14DC25BE54E958EDABCD445DA
E1FBDBA92398227716574D27FCFA754A0B30457FCD38003882A66A4CF8D7B1E2
803CCFC1C9FB7E8FCB54A86A5456A0293797A1BD1FAAB9AF2BAB480125533D14
577705EFEFF28C43761EDC0E66A5E026E1A9D80D71C37957E885E308D4A9414F
DF10EBD25557B85F9467BE88E0F05541F9D31B4518C67024DC179AE59E28C2CC
8C2DA31500445B3ECF6C6035F883EFC0DF2AA759A0101B45D2A6AFFB7E617C92
65B466295CF70CB228FCDD1D8B3B0F66D6FBE907224496686847529F68DEA6FC
25AA89922A1A2AD0610467E040A6399719FE1F2563A3CE9FDDF95057F1A668F7
137A0C348F450B13EF02D74B030AEBA047E0FA256A192BA240D1BC5F95F52E23
43BADE43056D2724D0AE624CB648EFA088C9ABC3F50F216D9064E1BE166534D9
9CF0FF65C79276EEFFF7C1AA4F4A82F063B45B7D944C31658C09B09DAD4C6EB2
9F729605B8B3C4F78C20D80F5BE8AF329AAD1F056CEC4952227A4ED3148AA8F2
010F195C21494E564B6AE2EB3DD88426FB2219848FAA37891083DE863EBAF991
0DB33EF5E1078EDD82BB79BEB5C06D47BA84E0955588F47E3A20FFEBA425DEF7
4E0B7D93A33107AB68B7FE21DB866EA5C1299D94203EC74E4905C482B190C7FE
B04E13FC963C0478D72B621E66E9733C327BCAEB58D4B2EE5966C71188ECCFDB
DE599541284FF35EACDD9B71CBFD5D25D69E3C709894266CBC76FA46B6F34EA5
5BDF9ACEA5C5B38AD4611FEC1900F2F1288187CC54055E2BD80245F249EBA604
E345E7CBA12017897EACD1FB64C1F829392A430FA692377E831E4FD8D7385C11
5E229FFA8A794F67112E1901B0CBBBBD3391734CDCA6779BA989B7147F03C8C7
9B62DE7A3A0D2D6D55AADF2D6CD1FDC3BCC724B90B0DC960EC932A19EC2E46FF
3DEE33EE3AD8BB734D2D090457DA9D1A4AE09392546A9760E5ECEA9F2FCE0B99
1E85351F6DB5A04240B0584D28F6E8A019D6C843CE275295028FC6C416CB2009
EC4388311E9EAF222F958F56D512A82864C684B35E063576B2567B8EC2289F1C
FBBD9A879E27B42D911881091D99EEEAC430924207CDED6B1E304723A557C4C0
F1EB77DBEAA653C858C32F14E4D87129E308BCBB38B9F426BEBE03307976A39A
895B80195AA12476ECE4F0C604173EFB8448BD9DF018533479154F9BC7485E8D
C34D8AAA066F41264F0AC879A67E1B0B621CD8572B3C61447414FF4CCA4DAB06
CBFE577AB49D78602657410BE91592C6B5E68C3458B69664BDA474E1F6557B99
DD87AABF8774D2C4020186C39479C5FC047819D2DFE843DC65F2FE194EBFF061
013A51253681FE4F30DC92770D546E889C63587B7457D56024539177AFF11D94
536538498428398107C6FB519687B361ADB7A200247DEB7395AB62D117186D1E
E487D39789C45A09BB65AAE476588E99824777CD2041DEBCB1FC8F4F3B288515
CE437135700D09C01154D17DA5BCACC3DA7E5AA1062A7C47D32240DA911DE326
38D350F86FA328363D1B4FE236DDDD5D327E8DA65F4DB61F528999160D492D12
DBBEEB51D892651D8D56ACBAF76E238BAD1F82B87259422BF54E5A6638014C8B
1AADC9E2DFBBDDDAEEF12EC1D00034579D9E18D1E0A10A1EF5FE9CE3B835B252
BED0466F2140FF19F5A2C3548E55278AAFB953188F9C9B88B7B5A19F8162E5D8
454B7DAA12489580229DFEA4CF551103450057E27BFA25D69F040A0D2491AB13
FCB507AB79FD0421C5C06B9D59302551FA666A3ED9C1AECFBC3AD200383477D0
5545B04A5152209B93A88A23E53D9E640BA6585C8677676CCA70F6D73E6EB491
A0FA99A2B281FB92FE6AE445E847C411D8C82C722030F7AC9FF5A9106F2E4B11
0C5F7AD863417ABB85FA120C6FB7EABC7BAE61A01C001B4BD33B2247144F4083
9F8E95B7AF1E6146AFB0F795842BAFDC6993DCAE1450FBD79EBD8873A7EDD77A
04D9B75AEFD794B2D3DABF49BB1155FDC7CEDCCDC52C29BA4878ECF291309CBD
B5920CA142797E0F0C40C15909BA02E8127B1D6467EEB754ED119973AB763E3B
857A6D32903A4124E226400020AF76A7F7282FBD398422F52DD7D4F199BBD874
DD442D65A409FDF7AF81630306D67E0AAD0DAB78243E1B8148AA83A0BDFEBF16
ED33449F74C1407FB4E20EC3AB0A7A3B6BE31432C26AC08DA9888699B1CC4123
9580EA0AB37F7CB3E660F617AEAF7777F563203D8CD67807CAF01EE6202FB294
5484D6EB81FCE0A73B020ED934D900C128151C9587801F7A6CFE211D8A95807F
EE5B856A8C34BC6B1DFBCB9FD0C58A3AC5EE79C5A8CA987E997104F70573FAAF
DBC66FB96EA51364647CA4969605D6B269C05F2B6EB6CEE22B6020C08C09126C
C46D6C604DF945456E2D326C0BEF4C80125934B2FB9D7EFAA0A98BCF9B53EC26
49EDD546F479E7D69B54FA9EA908E629679AC919D668B1E51C2B2007A3914B3A
3C3759AB77A09397E0F0CB9CBDE95E84F4D47146CDB5CF915F6FE6BB16A2789F
0C4CE7806975398573D65BFE4D18394C80193F72B5357E8BDC19B408D908B1C5
AD9358E2768B4018CA0C7AF81DAF1E403F552653EC2A9E090BE03FE8062A9F91
01ADD125A32195B8CB98C9B19235F9CE1E85FE9635A0F5DC4890183DD07B3162
60DAE1B682ABBFBCC343A60E6395AF687EC87D3B619BE775F0EA941AE282941C
0B875965B0E32157F8C5437A7DD00B5A7EDC7F8EF3CF8FF4EE345E12A0A29AC0
1B94AD8DDA990A4E2CAD5653360080E23CD355D981F91D77117B53DD52FE0AB2
D5129CB82DDBB0063DD49939346592BCFB1B3EA36A828AA30FC8433AA0E6994F
FDE390B0F6AADB39F36AC8B75B02557F689206EB5365C156E47A9C1E0F96024C
27EF184BFB947F0C5230E9DE6E29C04923A7F621188E6DE64AF4F0F1FBE1D4C9
B9145E0C30F8BB47D9737A722DAFBDC469A47906197996371F4CF2448E3EF67E
F87FC74899D1667D16306506EE806011CFFE9B428D5DCD32B6D2645F8EA27F25
34BFBF606C7592D76EDE49B0EE9F902EA5DE664A154B06271C18333D4D11C731
2C53839CF61E415091545A96B78F6DED8CF0A7F4CFBA1357D8E49F885C8A0FEF
4C3CADC2E4D1E10E3C26FCE96B24DED8A0DA83D58D8413A45EB18A534E200E62
765CB57ECA2162BD29F0E926A1042B12AB5F64E47599C389979AC060DCC41D99
A3D3AEEDD3A3670AB78DD1B99BBD63D794376766D435398C29C37968508DE53B
6FA24F3AB2E219F52E7E52019EE8FC1298298386884E2083D636409679984282
CC412D0F131CCC253833C87D3DA3F5DB311E5672052E05C3A5CCB847F4AF669F
F8EE35A93B7E27A9BF39734B53CF410AB3F3A5034D2884F0B424AA60711B28D3
1C755C6C03BEDD767A12E1ECEB25B18BCBACFAF313AC51BA6360C4F0BC346BC3
8155E7A2915DAF3D8379BB7312E1C6950255DE1629B0911A18CFBBB502CF3C1C
33D64C241B9F161DCA2422AF244A122D90C64FC0793B178018DB98ECBE34ECC1
CB8ED53062C786EB15A5F0DEC6366D20DFACC9A51E37BD743AE1E00967BB5EDC
8B761635A25AB894750A1AB42E7E8A91B7DCFD58902B637141C9C3FA28B55B1B
5A21BA2CD4665DD42FA9522F630CA899A5D78A360E095962218D8CBBDE6C58A8
FA419F310AB8BD06D067F53E41FBE1AEEA0769808810964FF5E53F25ACDADDB2
AD7D611AF4B0C0D33C63ECACA57F237E377CE827C631D1B6580CF2810AA65FB2
686AF578D9AC9A678220537095CB9C4E4BD0B8F9C6B3C6FB075F188A9FF4DACA
0C373D7DF9C15DEC2AEA8C1983DFB4E01F67E5294D3C6425B717EE2B77300EFA
79F5038C2F8C18609D8770C727845DADF512EF4559B770873C6CBF0A66D8989A
6B01108ADCDB804E973A275571270A612826B0E61253F8DDF1153744E9909CD4
A49E4600DBC7FE9A727D18EA999ED5822FC6CF9935D1EAFD4894A600072ACC70
C91B876A49CD4F4DA84DF20998014260A53269FBE38672FC59BF417B6466D3F9
D51BF73E000254A8671C3523CAB620C1D07667FA45EF0CCFC2AEA3B4E47F70BA
2D5AEE9FFAE55F3D25A1209E17F22E4F250B1AD234808045A2343483A8F0BE34
C783D8B7162B0D094CB5DD44E6AE702FDC9D3AEBB17CEE104D7B4054DD4FED1E
C4EC66A1A0A6E5F496EC80C65C7A5AFFAE527B7A0ABD639A1EA655193016B2F0
4BCFCC5601340735DAA893E5CB7EAFF884737002FA394244CDD63239F480705C
1D172991FC1DA68A52B76123C04C3FB31E3D25BBBF397F83C246136220D0D162
A6E3C33421B8006C3C593D569F7A52A9D4B6DB1A68574C342C595637E7345A20
ABE27FE991EE03F109FD8E413DECA146C7573C702A48C722E94FCB94BA0B0331
B2DEBFA31B5078DB9824D0599E1581D2505933E9B54444AA1883290DF04D18EF
09E592ED632E44DC7ADFBC9EAF5C8833DA13804DDF77DE8161D536C2D0011A29
BD0B32C7C08DD5BA0988D92C18E47772FE03860683900B8589D6695E39724130
30FFB2BF545DF047763824F521949DFB48D64107B03CE274EFE7CF5103688C94
717B2F1204BBE9A32B02C569FE47B757873ED4F1219AD80D394D7EF737E0276B
998EF4993A3F79F270F7413A88828AC205C816FB7FED803064219D42660920D7
6D9D1546488B7E05ABAA458C5CE797A327685DE3DA4712304723A557C4C0F119
1116F1C8B82758E41AFD3DA3DAC91F4FB4365874CC0D628CD8B846AABD4E3998
DEFE8268F95D84CDA83EA4B55EB2BD406A363488FCA4DE390C7EB93CF291C367
7748EFE7B1CB025613E5334B9A1DB19389E29A8E86BADF6F48FC1CC2F7AE9253
71F915F25912D9BCD939181AAE2D053794D42555974CE01ACFE5D9CDD9FD68E3
08DDAD10E894F2F3CC4B6F6B55ED1D99ECDE2FB79E17E8B13F34DD2183586A9F
60BD4125F2FA99B9C08A7233FD59308F505DBAE59B4943C4AFF39097AE400B89
99F052AE0A8CF6038EB3DB7ACD11D06D7C952B12E6646662A651EE4185C57256
07F2F4C1962A211AAE398BC44E3BB991B949BF6B2794E61450817F35607C6E62
3E74CCFA7E2A20BD24F5A908871DF46FD0CA9AB0011BF7C2F875118AC0AA3361
0591013594282A9A1DDE34782CCD8E42C2AA52FA44D430F9D91AA32E96ABABEF
97AA7238BC11A128380FC7668DE35AD8FF7901A071501004D48E781F77316505
0913614F8EF8A85BE29E113D06CC87D87CD44D2220BD4EF12017FACD410123C2
39F97E12B0CF5D845A44FFB46A93CEE3E8A0263882542F7F103D15A397E0CC6F
5A17D0A887B5BE606C0A21EFE6853F86AAF928A1F6AA8CBB9B5DC32EDA308F14
9704EB45943BF62FA5C89ED4BAC0C5A0DDEF52F121996E2483E9C4F22C7EE772
C6FCD6B3EFF627203630AF2BD897DB3C7DD9D66F8A4FA50EF1BEBA5095045ABA
7952457E62E4081D591B019F2291FAA610FE8C4CCD57A7A8C9F5071193E20803
4A294E7DC51C69967B97BD1F1DA360C4CF05A5F07B5B964E59812F6CD9F83F21
CFE1217CF272748BB9CD739AD668C50DF812D8CF9F07F4648192A7EF6EFE726C
56A56B105ED68EA36A61BB73ADE9CD8E73015F7F89334210A4BD2075719FF52F
6FE38028BEBD82636A3D07044AF41F940CE71FC3EA50B8009493929890EBB3F0
C168479B6DDA427B863AC7E6CCD3D272C580211B33A99DC5E168ECFA641413A1
3E707E88CBC5B2CBBB2642E6E2925931181492EA7880A374C5060D0F07764E57
8B8B04C1142F82278F7C6F68468EEB6B12FE727CC0FA6D306B076DBD08FC64C0
DD2326B351F6A75388491201A7A7E5884507930BD0C12B55EC21B9DFD5668143
B171CE29CAE9562D45218EF07DC7F74A0D27FD0D0D274A7CB5AC380B1B2006B2
8BD56725C2874403FF978A2AB22E028C3D50BE01FC6FD699CDE204038DFEF08F
E49C20B7C5B7B1382AA569C1389F87B3564F3136A9F207E785BE5C1785F299C8
0FDAF09CBE7A67B61EB70F31F472166B7E42E5685EB1E93C4AD40770E444D792
4BE2901B46948AB7A3BC63F993F72204737B27B8CACF97B56367EF01CB17596E
3F55CAF2F4419B78FF39B929627428C3A6736B2788478BABD082E4057BE8562C
A4AD11B6779DC17624BF55BFACAA04EDA7229DCAEBC8D0F63BE49DBC2B875436
8C5E5753843A42942A17ADD7ED20E5A361F1507C3F046C58CB1599834A73F6A7
F1957BF95A52353BFF9D3146FD780B2568E393BFA04605EA8CA119AECCDEDBA5
9A5FD466B821BE32835DFC727DED883FF633650ACC2DAD557200C80A7C21ABB6
57E9905C54C9B6935D9A6DD1FE21A151698B8476C6C454F9E31C71A08EF5FF10
CB8DACBE7AC4B2E757C1D1AF5E31C8A54A7A1AC26C140B3B0753E044C7840236
6A5EC499EB5D0F829D89390D703AF1711C21699DEE76602B7A60179F204B8A79
1B5B54E5E9D98BD5B3A86DEAA6CCF40E983A7CFD19B9DB652C1BD8A82A05234C
07BD87304D016EF07782EF3FB77C73B3E72A6A5876941BD639BCBA7B44743658
D8D43AF001ACCC0284EE83D6B900DDC00B59EE203950EDFD6CEA20D064907144
2B2916EBCE5F4B581E5041DC0191890203800FA9CFD36EB47CE4A1E977C811D0
93863223BDBE2E7116E4E76EA817C93F1C9D9780C871BEA209917709BAF693D6
68F7AC02F3DEB82BFB839B8D2EA6CA54C77CBABD46E74EDA3DB5F08458740907
616BF5E7FD4AD8D5F07BD93BF7D3B878829E0C4DDC7B6E6E6867AC612C4A7BA3
9FAD5682A4E34AB38324177430EC9460ECC8D9181CE59015CF337A218A8FBCAF
554AB8F340C8A71E60B4CEB9383ED0A8391D817BF93001668E36BF66A4EAEEA0
E6B037497DE8AE398F0ECD902FE516EBBF0D8A9043A119EBA11ADD7501A2AEE2
F85AA00FC26DE10F277743C54C36FB1E6FB57DAFCED1D207D9857840BE0B01A3
3DE66E4A145A65DB755677EDBDA91526B99FBB38F80F74B6BE30324BC55F8CE7
F024251BB5D0A4F9F66D9078BABBFE2E4AF4652A045415357139753B6A7F2029
FE2439769D67DEBDC8AD8C861E90E5322F7511FD57C4B2F686ADFB72757FEE03
A5D4B906997D535E98579D536CFAF78E601BC228CD716E472C288EDF4EFC25C5
A7FFE787387CA91D863A9A8C9FA8CF7BBB5FEEBFEE6E02FCF0530E683A96AEDB
A01D6FCBBC224F848A3BDF3A350C28A51822A85F52589360AABBEB81CA64E222
DC138BB3CDCE8EE707017B049B767EC86BCBF8E6854D2A1900A21CAF0B38F05D
2F428AFDC70AD649FB56EC7CB97BB083C58AD71D3C32869196A7C5B72821D677
6F3D79D070C1F2D00D57F7F7BAAD9B9BC0FE359F11AE7AA0429F9273AA1CDEC6
18A6BD6E4674AC32C7C1F2B5796404E186AEF9370F65A91EABD6B26BC6AD247E
5D5BB50242503EC1D76DF545B7751D8E85BB97A7F15104863D042C030C155D3A
2FAF64A5326B54B6625A82BA03BF6274BFEDE57512741D799AE39A39B7FC1A6D
A0617F71A03D6E1ACFF8BB118DFA9CD64A24137F2DA6C213E4ABD8CF343D8A73
BF2B8DA03BA98D8A95E7D14DA39A03B71876C1DB3A6B32B70C9CC4B27DA28E97
CCA8A886A5F5212F5FBD689E5FDC0BDA7BCC4392158E21E5FF5239FD6DF4B25B
62F3A47B378A341378AB1E9AAA8811247E3BF9D8EB2FCE5DF8E873AF92E7A41E
0400C3AFC76CFFB52229B014C1532DE7B7795242AB54725732E2B44BF38FEB59
338335AADBC9301FBD0E96D0E434163479F87D2C6AD7AE02AA5AA6382253CB2B
A6EBCCFBC26B35B90844F40312B91E66F516835B7EDF02BAE8B740656A01271A
E4EEAE0782026D405BA7A1D57080100B5EF88CAC4EC0729FD8F7EE51A9C5DE68
7893B51D46B2914CA75DCC44BFA51FFFCEAE9E1A97661A47326B6308D41B37EC
80A7BFC40196082485DFE88C095D46C253252AF7805F320B15BF4DC76A7070F1
256E6D36EDF2D59E5EF83B6BF6BFAFAC20420BFCC06AEE0F3896A254B1279AFE
CC1041A6FCD1E20CAC60BA728EE459CBFB2869B1B14B5E9A3271B8060DAE8A58
AF57797F28BC5B61D7F53F108A6E72EF09FC4DDCA06E61167D9808C6E0909582
DAC9E5641402E68C1B83F155D555F8AF402FAA8B048D01BAF31D6EB2CF2C354E
EF635BA405AEB523A3D5D133317508274778977D0690214EC17CF6EA2746B424
0D4013CEB7D546CE9103B41EBB4A65F34059CD19DEE504B43ADFAF2218F3E684
427B0C570D25549507C8AE6BE01CFA0D7F81651CF91083730E1A3A1794A08B5E
80D1E42889E45F33A0EE58255D968892808B355866378E36EC00DB0D5E6F7F3C
437BA65A21D4D6E37FFA17F8290D95F1101E3FDE2CCB715C2C766364FEACBA1F
604854B5ABE6EE0D251D1FA385F0DD65B8543414803A144F697E140779B1C80A
F1D786082CE82BB100B4FFFC470F60563AEC4BB67DDD75DDA803DAED7FE78869
D75C2A621BB4E33882D0A6B97275EBE77FD059F35B0386A76836907AE5372E85
01D05488C4E81228EF6E6B6E645BA8C704D34361E7B658F560A3236D8D800EE0
0474D8D5530779A13D113DBAA3ACA4F7BB516E5CCAE49E77808AA58FA85D662D
65F615B9BAACDE78D95E08154A39BBD29F45B3593D67C6F5356DCF188706BA18
A9437C91EF105AB04CCCAD9ABD7F20F345BAFB43FA8EF1B7285A1FAD8E895BD1
D1A6C93FB4B47C3D3747985639A591E1EE07C525151DBC75E0106F5F94BD683C
509D970BD842454D47C60A98F6EFBB46906BBCCF7422517A9195C58A97DEC9CF
CD9729C2A2ACBF9C0104FD0290B90C8F1F627FA8BF1DA88B6E0B3EB66A8901A3
5553B8B34337D967A9782C3D10600B531B0E2E5C790754F466C25080236490D3
3BDC34237A726F2D9618635B257D82A34EB939F84DC90FE109EA6234B340B1E2
5BA98C2C7F5A6551F739C6D9F6253C9710CB47BC104829A9205866905A68292F
70B3ED88A4D4FA03668530FAD2A7C40A8DD44C02FFA537999A83137F25BC2CA6
A023CC650104D3FB7D11D7DA73D7D499C8661BB328B3810516ACFC7F27AE4F86
4417B2211EFA422907452474D7CA75A85EC2191C3A81A9613858A74B4237E1B6
4E0E969F9A07434E0398DB92AA81A19CF805240AFBCC80284B7319937EFB786A
F63CDD9131A636853CF4A67DED002F78BADBFA6325F997555C1D0FAC983084A1
94C1014135A5E0357797A5728B46BA75646F73DF15C4D0543AE0CD7966DB3A49
FD48C80DD34E54DD4B1C0DBC4617FAE7EFE007695D587C93641E895C01BFF987
9441A81CE10DFBAC4A496DCAA75FD412BD1D031A35B00DD09F6D54356B366C50
55361C4AE22B995F91624E0043A6858D67BBC7B7C2EC0CE500E89D1C1CB5ED74
AED9B578CF4DA44DF46E364657745FCA3BDCBB64722076E4DC9807AED9DF68E8
13F5AD20B9625859075FDC0F17ADC9663C7126102B2DDB62B55FB4CC7BCFD4B1
815157D3C57CDEC5FEA6C8F5B1E11BC12299265DFFB1914AE235F4F872E6364D
B639136FE9D89C15644F79C391C8113C9AB42AE42784EC649EC33C672629CCE9
4A9E12F4E51A2680D02F5797289ADB08F17E00E2BD629ADD0C03E5A1D49018DF
63DE696A2CA35AE25B79F366751B3ECBD5A4F180099DBB23C444E1AEA19373A8
5071558A0F76AAFDA6BFF059A7836D53A42EA4189E4B5AA10F31D9B1DE1503E7
7E5C63C947FA32A6F50FE71AF2AB76026D941406D023A27E7746CE82D746AACD
82E75EF34E217262EB236FB273C7CD91673FE97FCDE4F778DF43F5CEE1C7E06C
9D6C62F4CDBBDCE0604F84CC7DE13CF49E6577FBCF479A1952C1856FA4C73B40
0D0140515BB8F7CDE02390E9BC6D447D1EDD8E5878A375A60A3D3DDC277D0952
03E37B2D642357D6E645A5DE015C9D7AC6DA389E880E3043EBA224853CEE3E5E
48BE9DCDD2CF7D7D187D437A28AAC307F32224FEBCC9E13EC6DED3D8FE7A74E8
5A68E4500C149A90B008278C292DAE53E5923FD70997A425AFAE2A980405FD03
AC3CBBEC48DA6D0EF95CBF19412200F518444D764E2F124DC8950C8D27C8D9D6
3C00081D07CCA27B2F1DD77CDF0115DE5AF41720EAEE68D43E9099CD8C0CE8B3
125D4B1D59BEA4D8ED58BC6A573CECFE62543F7DF1B953A47A7AD04F2A424010
708309AE0F99AC9294081716AD9C7C7DE1B9F45A71CE09B8D579F6A057A2D769
68DE52F50EBE6649B7785D33AF96BD25B5AD2AFEA1759F39081E04B50E5BEC46
250FC61D035D436C7C66A978782DE88BFB28EBA901528C75262EF6C51AB65B7A
E3D08F95F68C55A7C5027A5B9100F3276E2E2A61D2A43233EBBB5F5ED9DC90B0
27C0099FE6E6FDB5DBCC60FCA4BF844707FD0DB5E60367E5CC0016C7FC6C204F
BD3ECBCA8E1AD73772C29FE86DC7C3BA4A8CECFF19E925037E72A2013B3642DD
962F926CD80AA0F8BD7BDF67B7DE93389BCEA95428844AD4E4F0FD89B69D2D35
601326E6F0DE15594285FECC8F8642A6B5E92377755C85DE26BA4E0A86B4C96B
95C8F90902A1B6A6284A08E0C2ECC8FEED320C520D360CE3634B20601394BA72
5AD6F2CD21913A87A7319219E529D7090BF490E9977089BBEB95F4870B8BD20B
5575BC30F8EA6FF7B6DDC4962F2D4A4D45BAA857544198EBD89A00E6CAF298EC
9838A303E249A047E194DC9C98265570DCECA15700A7F5DDAD6266405F4CC9A4
FC82C4135EFEB95A5E3673490AAC6D9CD915FE2E3F90B51313D743B7CE52DD1B
3A6F9B1E9A0C8AC33B2C611040E9E91F7B2D0E744E0953F39826403790C86586
FD84170289BBB653ADC5FA57D0684AC7020802C685C816A8C7C4FBAA12DC6722
A785A141BB827CED77FC223B3E7945DF6C5C969FB8C52AC26F5F3D82AAD16192
EB41C852C0C84CAA5D949EBFDEB4B6DBD1BC8D14346DFBCA0FABDC0C1DF7282A
B64A8D3251ACCC0EA722437FED1ADE96CD018FE80EABB7757872B01F3019FB71
46FE13F58D0A5B2A7C26B47E1D080A5AB1B79ADAA579536BC61AB04F4DB6C6F6
4DF4AF30ECEF0D86125D9DA580C2FDD6AC8019FBA8E1B848D0634776126F4ABE
34CA0E037C7D2452CE847A1563A8A74F02E46A494B35B10F1115762A67502A4B
35522EADAC9FFE119DFC7835E9D1EFB0ACE13C1A749968CB1CBEF98B3DAFAAC4
59FE3B6150A542E916F7650E30991C512FC49FCA45B6D0EB3A2B44D0AAB142DD
AEEA783BD79497DBFBBB86AB3A858015F16FE84730AD33D9C48CFA67F06C8794
7B28941DAE73062197D6B5F28DB5D8F759D4E1F9A5B2A7E8192CF74D0278FAE0
318FD8F0F3B0418E46A60FE1E691F3049A11F6366322D5572CF05DC46537B25D
5C888D34F33C2980A984853CFDCE7E7F36466DAC2CE4FDD5099DFC8626BEEBC5
730D4D9EF77B2F7B58C6FE5FF6586D5A9E8D7E4DDC28267A3A8133731C095984
F30EE0BB86C4FEE1725932EF9828004EE58555ADB82A9C1430C72B6406F9855B
4DA6C513B2285C2B17E9850B5FAB0421B1FC0F57DAB189B5CC22574AEB2553C8
658671E00A084E3AAF101F2C13C71F008ED021AC9C14052F636E14F27928F151
8324569A666F0DBA8577943A644EED9BB6741D5AF4AA408928C5DEAACBB00215
20E9FF4B42159E59789B0F5FCE20693F0E85D66F9B9415DBED089A43F5E1EE1D
D4F78C291B4557418A1528BA23669B0111D5199160531F2CCAF159653B8AFDEC
730E16E15660EBA4FA32AFD9C16F6ACBED96D3334A6FE7CFC7D1560C32D82134
6A191E5C904A6A7456E0A649F09E0B15DB6EC325CFF63DCF7484009208CDBF1D
0B17D0E9B1E879DA86E1BE8E825F3BE13678C1A6DD522B4B91767BAB3B0D4B15
9A824B35DF66685D40E58A180421316648993FC6969D6B2B4A9478BD9F1CDD2E
D32BAD83C8B49F333C1D1CD3C03DCAA9DE41D485CCBBE663B7D3112639C1299F
1A512B5576CF431C8F803CDE5A599E528C2593EE330BA2F41FDE567A63EE64AC
0E84EDB3B5801F85DF505A1121B2C09C52C422EF56C3681103A84711614A609B
88B43F59558F5C9CFA0A9C15B1E64B9D94A151DD77309B0B2D8E9B650AE75EBD
5E19F239F7FC72CDE17C8C583DDBE827F45F10462F0B8A19807C4C6A41C98CE1
5B887C34A110886EE005AE0814841739962D86C8857474C823A0C7916B0B2040
413A4E9CE3A2A4F0AA3F86705792981F11997A50F88246431ED0999D81D7DD81
3B9DBAB46779BBB433CDE19A31AF6F2F5924EC77CBD9E794C2734157442A161B
D517C7212E7727627ABCE01ACE76FF8983E48B5B244F8C9E645E45198647F401
8BC9498C8F6F44367BF6D1706473E224CCE2A2217FFC8F1476903C506C055FB6
652AA7040700C6CF97E1D223B148077B80DB0590D9324A05FFB754B280BC7D48
2FF0E9CE09CB4C01DD94075F29FA12AE745C1FEF03B7C5191D663BE31A15605A
9EE21CF836F0F8AE8A8CC9F3CA6C836A43F5F8F8315ADC809FBD57076E287082
FE39F3D16C5E1A644D9C19E8C05BF95A7352BF823C30D48E982F9FE05420A6BB
C87A416BCE69D4EE6310D92CE8F8D001A98EDA2C4F013C66728C5CA0A46B184C
A299CEE6AF7494FF1E26BF0907F9C1938F613666FC40AEFAF7A720C5D22FFA72
DE535881723BB6B76B4C3CE491232AE2D6028BE11EEEAC01D0515BB23ECFAF7C
6CBF2A1736043824B686988E5006359FCCE096BF190D8FAF34B291C63E2E78D6
31647015569F86172E113DFE82A525EB40EAA8C60AC4AA9C4F680BB98ECEABAD
162B52A05E81BA0B82108E04BAB903A27E1E25D1F17F4A9BC03333D2441BEF9F
5B36C1F6481BEF7F4D8B7607806241A14327E2F0118A7B9A9C9FF51E93CF66E7
3DEDC6DB8D9B49E744327920F4B2E26C6387C17B9217D28708DF35E339FB7E93
B222E99B39032235DDD0320956D21428470D53C5EE577B661C51AA569A80375D
C95FCAC6BE56F2579337B95BAC500B31DF60AD5C95F36C6BC3C4797374BB08ED
9C910C5A9DC5ECB52460D1B5BDF510981AC3B35C01B43BD164DAB0084E9CD47E
81C232AC487708347C069F36523B39E391605244DBC420527C3272ADA3FFE118
A7579739D6B8656BD780C9033265DE57FD1794F531DADC1826D8C1788AD1A356
CF35AF48709A09C2CF586C1CB1DC49CE09DFCF97E68B0335E17B8C982B8395B1
4FFC96A5EA144DA9EA57D36877EAEEA07008F3A83A4D220C4CBCDE9BE38361D1
319CF4B7FFAA8C63BE1276D3F7A982E2EA62E23B4B37B4AA708541C467173801
26F3B7A29673C5CD77BC99143D809D6AE743E39A8E59A9490D358C25AF7CE896
0B229BC8E5033B6265E6C07B1A3A7C0A0E0D29601610A1A1EE541526E1C0EBE0
6F5CDDF1C152DA47D54170A4C1334DAE92461A62279EF2D597D95F3E01393A93
54DDE73E4269E24AF55FCB96210516BC23F89D23DF5911D48D50BB51FC8488E7
FEAB5713361639451FA3791964E93766D69B4181C9A604FEF632E516979F6869
D2D5FB3D6D52D2220BE7CF344415F6BA3785C4665630DBF98D0679FA990882F1
49552ACB673691B4ADB87A07376E36765E00D589E7123E284B37DAD66FAC9701
AF19072A6B65838AC50C9EF8AD248C9C71966247DCD074F74A307C960BBA61BC
B85EDF596DC4E50B0DB81EE2F4EEC9BB8956A6091DFE205061148BE1FEB8CF51
15A5C2FEB9412FF3A437B70A378DB388453D745D11448F61D93C9F16432BEB51
56B42460A85BC9D3A38EA55ED8B64CA9DD060750D390244AF51F163D477347D1
29D241B1ED758013197FE7EB3811F6411C0BD26714E22F9F4D5F79D62E76B443
94EE3DAFBC689112C728DC82384B7F17FA03C2990C3C41E34DF5C1D95E48175B
3A3339218D423CF4EB7E91994157F2F3490A1CF0ABE9C7D46F5BF06BBDDC70E1
11B268EB02E8526B911A768DE547A27368D5D617979FF41365030EE00AA39B7F
9240D271C1B917DFA7724F8F6C1DDAAE9160D478D14968CDA944EC8197741CDB
30AA1B750AD0340DD6B5B588ADA4917CF2E3BE1BDA512CF2283E2229A1145E52
385EA3E898611B0E754201D8EE285037F012A283EDA3A8F89B81F13EAE6F5714
089EB04DC6F80C5C8FF539137A54C6C7874AA4B33C6C70A3379A61BE09582284
19E1CFE94C49D669F02EE9D9050C97DD19CC7F4EB6BA8EAC9AC9EBDEB883A027
5285294BB3CEF5F75AF91FF5C50BC30C49ADA5346FF816F9B900EB9E4A2E0DAB
1081304809DF523E58AFAFAFF2024AACADB7A562C7F2DF06E4DB4454AC1CF865
6DD37338434CE790D563B0381A2FB2621AFBAC3B3DF5D016716558D26CCBC6BA
9F3E80BC4AF09BF6784690243F4765EDF42B3758514685AC410BDC211B853AFD
0ED9500432295DCC23370FC7B81AE9EA694454F7BEC003A7497135F092FA58B2
8777C0DF3DDE7B4B17BBA8CD08B33B5ABD843119AF94F7928EDEEA8963ADB95C
08C3F2D60F8105103B2EEDBD4ADBA5A3BD6B99573DF08374F50B2F5B3073FFFC
2D5A075F421534484F6904326938F3094506785548002BFB98679659B561013A
F8BAE2E94BA74745010B8DF0C35AF1A77476381F6DFF03AB96BA536D2C679B1F
7D205624C297A3C6CBE9BCC8AB923B96DC7302067E94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 67 /C put
dup 78 /N put
dup 81 /Q put
dup 82 /R put
dup 90 /Z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DFA3731
29ADB71596F968FAA7B02C2A451CF6BC41F06633E64FC7717128037B32ABE2D1
2962A05B46A2453BB9F280FA10A67EC1382813606BD95D2E3626DAD8A6F7825E
108DA1461AD0D85D5541825CE49B65D05302369CCC6587F9A6BA58A0399B8E58
45A4C3F0939E28CC5154BE59A387E3949D0F143540CA685AD4E7B74915BF5D4E
D5C4B69E53E0A159A081D5EE21179FDFFF655E4CFDAB7EBDF1D97E1510350FED
48DDC2782659F1F50E85A8AC196F341FA1DF9DDA78F22714FB9DE80D3833DEEC
7848D7C0B58AF397729222F3B7FE28FA141151082AB1027A73C267E0D478FDAA
DC38FDE58C8251C5D0FAF6B6392FDDC2402AD389465862718B6186BB2CF4B290
AF5FF6212BE86E7C5C16FB6CA58FC8BA0FFD71495D647DB017ECF3B8886671E1
B1081AA96246E185C477A9D10D843E980BD3D248872563E9160E4EB16BF9349B
86F4E6A68654E1695F8958AE4D69E5076CE4300137BB39D677D7394877C88A41
7A449A88485A0EF2349E69F384A753B513A289FBBED75E3EE8C1117912BAF857
5EE7DDE6217581860729E94F051003A4B205BEF3C2DF54AE91879C88CA6B1C0D
DB42372DECDDEF76D26CDC5AE2850EF17D03E59BCB34F9AE7F0E845915D9FA37
074466CCDBEF218B2092F74A378B308F05D8E2964B470316617538D36C98437A
237BC6601800B0175C5AD2F830F8E6AF1246A7C3E6EDA91ECFEC0ECF0B5340E0
DDD17A6381B58E624B306672481FC77B5C6D7843D0CD59C28E408A938FE903A6
CD768A42943CFA8377EB3E3F4C64EDBD899CE2FA9637DD6898F67884BD71EA06
45F89E12CBDC99C881C3D8E85B76FBB10040F0DADEE5ACBDBB433617FA558E3C
D6B827A8DB1FC3466DBF5CA45728E9274A49D4602BB869D5A85CE51EDC81601C
6FCD6502741ADE2471C7EBE744A55D65F3FB3C7726F68EA7F9EC09B823A0FA5A
18321056A36750BC67D3CFBBE3A4BFCA1D7082661851B3D94D71719C73B320DC
91F4F64B9C543FFA059F2DBA1E5502CE2E76C38CA97A8F71080044C4920CC2B7
61F94727DF477D8DB77017269151CAAD0BAE965DAE012540D9DF5BDE9F4F5D02
D46BE73348ADD641A983CA3BCD930955DFBE0DA8B9619E74AE64FEB34DF64167
C634593178C4EA3370F98442CC71BCEE0AADCD191C733C695B8DF0163FA0C03A
3232DB6E7494F86F8C3939211D916712A414BB10FACF6804D2D07B7DF4172993
E0068A1B74F45732DA28DF09D51544E38F98AAF6C37CB0DBE9499869CEF394B2
8A7DDA5F3469BFC41E342FF7CD42F6B821E75DADFFF9628CB826D732F60C7359
331530EB552CF3C551FA27C3EF0221B8690A03412DBCBC3FEEAE3DC364060DB4
E0F6BB01F0C56FCC494F773EA3CEDD717B7AB5ABCC7482B0C3798DA5A68D0EA4
AF872890576B1DE985ADCA97A5D34F1252D10711BB4CAFCE9D3812D777391CC4
20470F389AB49058232324E016DFA148799BD822D068191B7A2F28370C35C4DD
AFB83D743E900401CC15503BC31EF6609A70C3552E6BA6A64C207E70903684A2
51C6B71F1C6D9A29F943BF6FAEE306F0A68478DE7105F3C00355E52AEC803960
BFA8BE7EF0EF6B0BC1B111916879BD2430381FE1A402D78AB459852395DCA2B1
FCDAACC1B70A0369495419FA3371A1CF859E6734EBBD6CF471A8D90A760F0644
9C12145ACB8B2B068C6D72758733B7607B30F8F11FC8E199DF46C496B6F9B589
A936AB0AB491FC90BCD657F5DB632BCE44B9AB2B8DEE88772408E34F824317E8
766922D21CB0EDDF2F9DA6617467A4DD200A9AED9450014C9C29D06AA0367F86
6F4BE2CA471B69E1CADB03F58EB647E943B26A3970221D8B3B0E421404B92A20
983FB9E659E6F38B2755FFF992E38E21D38AB35B7EAA1AFFD24DC90C8F20DB17
E431BEC819ED5219E64B6720BF8FC24B334FDD0642CB8DC3DC94E502EC330C58
A0A8ECC855A82ED2453CEC83BF873DF12CE5B93487F5DE8D0FFB53404CEADEC1
1B8D46A053550FE5E8986156A3DD0A09F2EF2E03E1726AD5F0D30970F3865FEC
D8B5EC116F72D3BB0F126E91719506DBF02704D819466CC69D9908FA6D16D004
8E23B1DD05C8261272CAE508C13DA816AE48925487E983E82FB726FBCD22E114
18F42EA78E2076BF3A1801C3B35CB9BC1493E965A841229A2CA39125C8736463
90F0C9712942AB5910AF161D14855780C9E2E5ED637805D371FB34F0D00E3197
FE4B6BFB2CCCC4F14DA0FFF5B137C06743E5F71BD5A32E5AB4848BF76D3F29DC
DA4FAE2BCCE99AF589F8F92CB72F77C05848C55FCF8BB3996BBABB94BBF97381
B90AD4A83A3EF5C1063F3B63BDCF750571E5CB0042F4CD845F473F21240DBF86
B7205A541A612BD38DCAA854E05F98116432648F8E0143FF6B808AE9AD06998C
19D174C710F49BADBEC0275B14032F697291E69BEFB3830AEB1F0AFC59CE4995
4F9CEA581536FA6E85401D194A172106383DE7DAE7ECE4EF04C4D3B2AC92A636
063AECFAE00E428DD45E03E3B941E0314392F848C21F65E8C40D7AB9738012DA
48332829438BC2B0BAEE060A06FC3D0EDCDB02E137DDB78EACBC4EC79A454B64
F62D0D6110EB273DD7057924431BF687DF6AA2B61F1F3CDE42FD133977C824B7
28F10F080C589A57D3DD43E8E0138EBA9070E8A7A3DFAC99A1932A49161F10B8
F436F54298B2C3FC3F360B3A9865D360E497B42CB6EF7BD61FBD83FE6440151A
02575686BD3F1CDA5F7D5094F38E58C31F6F69F708C9A0D91146C459569F00C7
68FC2D655AE7EA9CB2CF8A796FE92A33579837CC5EA70FF05F4150429E5B2147
0B268A9757E7D6997579E1C7475C41D79F9188F753824CDEE7B1BC857D96557B
EC7B52E70D3F90B881C40EA80FC3D70D63CBB5B52EA5A28F5F4F9CD098952D6D
57BBF5127209C81C74B755B685A7BB31150120FC1AAF0339A75ADC3680EC27D4
B221991F235B56FD07E97622305E39AF246CEA1C43A994982048B6DD9D1F44B2
8F229D3F4D0F87F15264765E89F83DEA6510C6C0097057936EC9BF023F92B158
DCF2129999FACD7DCE543135FCCF3644C4825CC117737C7775C9410140C89A90
9FBF593D719429A0990C3C0034671A4E268B166C2681913575035732086B2178
E27F58ABAF4D8EC2D25F65FB2C6DD9C6F83387F82279E37B9A0017F45825E272
E5F5734A2CF5627A77D91FC9670BB59372541944006F06728A7E795387F16EEC
07F2B48D9886F91583388E37AC33B6C4109B4D5723B1F5A152FE6E30E0F1CB97
49B473878A2EC535781E5966EFAA7B72226A2079C21ADD18F5165ED57F75229D
DDD4F4432FB6BC9F1B792EB443F99ABB2D5826ACAB6E1F8B6E4CE32BF36839D8
CFFECB87177762FF848E53CB4BF9DC79A9F1D7221304007E0B55926F51E7CA24
266996DDF9CAF5FE58BDF391F1196C166DF1F2F693740039F961C1133175E25F
09A3A1858737DF21060F9418717B19D55747B7DF7240A38176C2DFC7C03023AF
EEB59FCF1F74FE5AF83A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39829DC8A2ABDFC584BBBC8AB8932CB
FDFB9FB917139ED02FB419CDEAA892CDB606C133DAA908377AA57FA5E2A16FE8
F9DBC207EDEAA72C2F7D4B7B7112BFDD1A5BC950F254FD477654C63037748411
037887C4B65D8E1DBFD8BC7F2661AC6E39CB510EDF4CCABC332ED1A5E5FD49AB
7955B7A0C9770887DA7B5A123239565BB1D04FA90E615D06A805EF2EA704243F
B382621C073D18FEC9D5FFE44F8C791C47B490C8E3D8B586D529D30A9E40FF7B
C1C8059928ABE24544F41569DAEB26F1186A550FAC789DC46BAEA1D028891BCE
072BC4077D5280C8337FA283BB4340DDEBC4D256E13F78F42DDED30EC42990D2
D7674A62EACD13CBBB381247F44161A0539A035AE3749991DEA439FBF139A16A
553429E039046EFE39B6B9B33D252B140142EE927CE5E607C1F2BC03785EE94A
E63B97F0E34213A1B0A55054B02E9C5BCE6B0E9B760FAC62828B9B2C3BAC419B
073E6FCA10420F989127A04BDE01D71D3C32869196A7C486DD1CCB62FEC5AE72
4457E9628C077A0C7218B75BD86AE495A872463510543EFFE5DD50FFC2FCDAB7
133032D62176E87C9CE253A193BFAD2575B7B23BF4B47D1997E6DC26B83665DB
71ADF03DB565CB3278F5B72C3E42823F4F7EDDA13852C3D2523C98C6613FBB7C
5DFB870023C31C1FD013E274504CF62EE88454734AE583D443130A9533C9769D
375E5A0DFE646D603F49A26F9E5F210B120CA7EE5A3EFD38C40BC343C18EE38A
6E5EC1E16F206873FFBAFA03266BF0D28259D561A56EA1DEFC0D6891AFA3D1E6
DE83FBFEE99829CAAAF9FE809C13BE788C42E74A8A162BD9BB26137253BA8B58
1941E759A7CA7AC42EE55AE3ACF0B696E4444DE0BB3491FE84A6315E3725A28A
20C7E32793E2DDA8ED6D90F8041298B7A4C1E2A2D16FF35C3D8F5FD37B1D5760
3AF1ADAD3760CFBDD46FADABA26B5433D34C2AEB076031841EA0296AC711128C
794F77BD223CF144C0FDBF1576BC1C20D6A4CA7FF78D906699CB9C2B43FD2042
ABADEB88D3FB46627EADDC9F2827BAC12E0E45B310AD8C11FEB1DE5440585524
AD00C04BA139245E95B76F3695B0BE5FEDE9A0B810C0D8253B244EE74C47F8B2
0547A2ADFAA6E40432CB09DCCF5C286D5EB04E5A7D952E7167268B30DF26FC38
1D8D871D0D96566F0E4910D1712E7151AFFBF5AB2C8A5AF1CB6DBF0B027ADD1C
2409375ADE1F82292CA07F3948B726E9D3DC6F3AA19E84CDD50D789E56263362
340FBA8CA49B9AD210E2B4D77B4553E8ABE6A6FBD131E1691F749DEBB18A5B5B
90DC695349522715A6B6AF951007027352BC7C9612CFC105C8BDDBDDC8BAD0B8
7F3BA50D36D20926718FD37D86663C2F134BB4B5EEA3039CCD3F02DB45E13804
E3B7B4E4EE45019BA6FF7DF40D9FE58108584C65DAC1D387D9CF2FB4A626EA3E
546717AE6E23981338327681221810546F0009F98531353C9A8EBFE7DB9C9A1F
83F6E3CC814D6844FF1A23AB32B521C1A09010973B310CD03A0ADA22C6863683
473B13FECAED39B923980E1691F99CB068EC99B0F5292E5450773EE1769530D9
051181315AEF884EABB76C5B134E7E0185E7D5929C128293EEFA925E555E77E7
2F0216B34D71875B4FED0EE2874DF99ADFD2E19382CC90DFFB25E67F6FB762DC
D3C3A8C76F4F6F7298116E7FF68A8348389D3052344BC6AD77FA9B4CA05CEA57
E184293362DFBD0B5D90A7909896CBD0A038B6BA98B6078C9FCA1556AEB8E16D
CEE96FF74BE92989C382E8FAC254F543E8D3E7146C9A0600F9A0BE530EDDD8A9
01220A971045A9A8FC9239809D764B6036E658222897A77DC3394593C5B714D1
EF72E72786BDDE985D872823D8DDFFCCCF5ACABF850C801E14FB8153C749EF79
3EE03A1199D0A9EF4C5D26725C6A658DECFF150A9D0FD7AB1F56F507EB972BCF
356EDF826023098738D40D1E2F1976A39CB1DAEB62F9F7729E6E985765D126CB
E7FE55D3E2DFC75C0F145FBECF6A2D130D4840A799889CB9DCCD3FC716139294
FDE93AA5F2D8120ECA4E117C31227384B1C5B443F68FF78E4CACACDB36B7C4BC
FD26A7241379C2955D9BA1921169B16ABD7E4852648FEB205E020B27F5307E54
B6F4A4858CEF9F21FE9A561AF418FD9D6B8576F8DCC579206AA9F21A1C50D38B
556542BD5BC0BB3EBCE2E7C56E180C73756CCDAEAF24840E6C6A01AF6C1A517F
86D2C6190AFE9B31BC89297D17D4564C28040B982EBF82D0914F7C33F549D305
58B5E8ED6D88D23E7530C2BB5B2FADC5B34ADE0644C0F54B03AD9E14CF669C7B
38CB2D16EE53FCC59444A3FDDB80E6632FCB86E990AD1C8A0331513E0B6F2A90
442F6791C4741A0ED35AF47FF40F2DA0B75EA8C8FB72576304008495771DFFCF
89E918F1702F5867DF3636C4F5C221A18AC30E1CC4C35114DEE607734D0910C3
0DE2682CCCDB283F082A7EC77AB52B21BA9B8D4A0B9D7C5926D1B554B27D710B
5690DB1906123D94EAD0FBA00FD369A6D770D5E2564AB454896C4F5A393516CB
0B28F80FBB4E20BE353D30CD025624C7B916A97812E37E5EFAD3FC3E46711774
FEC1F7738A2AD81197D1CBBF29B5725D3B132DF3984E59D8877CCE2558DF1E30
A5A6DDD8C614B2FFAFCD4B6D9F237ADA30D3C0E24D416DEED9635FFFB23654B0
877663453EB7FF454D41369C4D069E6D1762AE662D19514D98A4606942FC3D76
5F00D47B7AF675CA22BCE830482F7347227AA1DBFAD15C24E79ECBF158880C14
F356FEF1BE1FA788335EF0647D47D0E9415E00F0963CADC84DA9CE87D81D4F23
06F0F4CD8882D55D5220A6D9197FBA488EAB0EBFB50FEF925BA6DF2F7ECBCA5D
B4FD78D89E2167E977EB8C0475E6BF7B0A6468833A730FC3D22EC26F9B276146
9B0EDEE8BA22F029985EC5CF4298C38E32B95D790323B4A5713E69521D8E8AA0
1CB34C18DF8A379C22193172318686ED9E447F8E185DFEA44B45241AFBBFB78B
D03562DD6EE838D77DDBFB30BCA82A782AD53550CFF43B4DAC2BD3A84C1A663B
BF1D4F15CFDCADC40A08553B2815A915DC33558C496994773E172D45C0D27D21
F892B9AE92E8480F5B8A2AB1B87BF7A95DA47617A27763AE228559558798FF83
A81BF4085B5542FFEC6044F952A4EF7713EFC7017A63899555D5DA52BCA32E0E
B863C256F65A8F40EE3AC0C9F6154C4975D6DB87269D8C8640A757736309AB56
8DD976F3356398E4FE6449EB80A9B134C0D4478C5ABCA26796BB61D2839669B9
C11CB98612D45C4BFBFED2C841F42B1FDCE3A56B4EE8FCB5924E01F73A956FCA
977A5793953E253F649790106065F2F956E07BB110F1D7FF4A5199B53F26D310
D9E3553DE260FFD590BEDC71CA9AD4AC12B09E8031DDD811E7CE1C4E2D9B0998
C10E0AE05405DCE8434015D5E8434335D76E0707C36ED5E5C2EC7E59783CA099
F4BC31F75A62F4C02608C28329316045535EB9203076E59D45EB0453370647B6
15E56986C8D5E2480661F7148175EA2A55A5187666E9D9BD19EC0057F585DA96
CF1F91B38E71825486F2C563C52C7A22BF7AF3BC490D2042E8CE8832B38E2566
82C68F3D27FF9DC1CF763E3582052D32457998548EC65BF412065C6247166107
D6C1A4FAF9AE46BCF6A6475B41925A53331622A8090D0C2F709654C55A596B7D
4F164FFB0873E01C5CF828ACB0730F46F17A34B04C110AA8EB42C5B71C6E0A74
481B0B3B5885EF51C89659D8ABB19FAA034DCBA3F680A07649CB0BC7A85AC43F
9D158B9CA2FB7F42EC4506909C1B4904CED6AFB3EA913918F7F9AB0D733F6ABD
3D815E7369EBCB3C06B404819E48BF00F1A73E152A1008A2B4D3084E86BE8BC5
4E82358DB43D9D3A4499A8CAE80EBA5DD17343E4C6A243DD5970F8C35D3B4924
0A30B24C037F7DDBB167F06DC08847F4C678344A229F51BAD5F1C83B0948595D
4B2775B250538C7272A82EC705585C9ADBE255BDA077E525640CF211E7A3B8DB
7BF746E85C18EFA0E498258156FB30BA45C49782D9B2884339D885C49693B264
D2A274CD739F6A9A8920C2DF579A8C1E5ABE833C5686F4F22FA5546410F5575B
56D3A484AF5D02AD2647C95AEEA4C65E463AC3961D2D195C1560E30A519908E4
B0EDE9BC6DFFF567025D6E00A898F0FA2804E0B8B80ACFA16FBABDBA9EBDF4DE
3A734D55417D4499D22E13BED177DA5905E8B396E7492E95B9E76C94149A3F1D
9478234FC2E34143D2C1D5EBFC031D9DAA06ADBE7FA5636480623B6CB8ABA8D9
B716C021A65FF920CCEF8C95084EF0141FF6535C0E67D552DDFF0971F466BE00
421FC1F61DEFFD95349670464FC59801746974CF0C084ED099199C387A3176FA
92610FCA346A09C698B6B3D2CB4202EF618BEEB8968BB436D735A60EC1DC5425
DE9DA289BB60EFA293111C88BB07CDD75C48DD000C74C3351F8C78E4B9A0F49A
FF1B3302A64232D15AE1BA2485A3E1CF261967A11FA5B073A62AEFA198FF5739
C42C3AD46BACA453D38B476C7B79AA3A0EBFCE8A593AF339F9194CCA784A02F5
FC193EB3F202D9F4FB0387D88D9A39E978BDF45C9B464B9DA1290584B298711C
B7177290DB831F0FBF5E2D086F3115B185CBF6F362C146A2D2AAAB9CAD4F891D
F034AAA2F22EEE5AAF118E236AF723533E8C465362CA8E91B3C759943797C24C
C83176CE2A809246C4433B990B0AB267D3837F53B0DE93BCDA24375FBCCF6E32
FA15B53C70BD06F06681193AF93A55066C2604C5DFB99BD8677BB3AECC027730
7A20B641E77FE5FB60A021D3CFF14894FBB509021AEB395418E202D933C72578
7A7711638D5760569422E603172B7CC7BC55ED7CEF971CA26B393A98569E59FC
7A33A9F31B1198C6DDDAE438F0EC679E1C63E8243807390B2D12C844193569B0
7E4DB9EDB2ECD79A062243ADB3EB7A84E9A79FE1FF4BA568ED4178CC13DD87BE
8C21EB3A9ABF13F7A9C468CF80515086F457B5AEBA634AE5C75971733044D647
3DF1110E17AA50A7E01776A21B4278637189D45A4CBFE14A568CDFFB3D85E655
DD3EBEE6EF04DEDC1E3E5836367930EC9460ECC8D9181CE59015CF337A218A8F
BCAF53D8F3B32A59FE9ADEB63633F1C21E5441B02D336DEFA8355C1350186F97
AEE58D9DFC7713870D1BE59FAD51FAB5AD5E6887463F834EDD2608EA2C03E016
4D07F2F4BD697C2BC55186C6E84C2E1CEFD0BD71260782BEF67219EF82A31CE0
22CBA49FABD2B6BF09FCB4CA2D81A942C5DB603407776CFD06CC2C60C88FC381
7867ABF9FA73760534D0C4166E42246934DD00C08EF218B03254F35619A27572
F145E7CBA12017897EAC21462DBA71A2679796B814CDA9B8D8B06D3802279847
522297D1EF900E8AF31AE5C9A7A5FA8A32C70F2B0F2A2196EC8A597414904142
31A18A53FFE7F6E35BF3433CE8B6F1A3C9DA8C4CDBD29377F1B90CACAB3024BC
E0A3E10B009E48968EC723C6DECDFDE76C4A7E75CAED36BA2DC0FDCBA1C570AB
49AF137953153675A67394DF695D85DB4B8EB762BDA2CCDA2F5E5ADA62706D4D
1FCF771B8D108B7CE405504ECD699F42B6DEE9D130BE81DCCF1BAFD7B886C679
89542394C22735D4B0620C714AD2DD09A881AD81B6A8871661902B6EB87D3A71
55D9A360CD236543FD33F885D1054A54F70EDB1BC66DBC4B0D0C5AB7CFFC1288
DF89BE3A55A7A6C770D4F7E864FCEF08BD7E0BB5ABE6B5DE82FF252600C67408
DE17270E0CCBFE5C7594E2D8B7498C00DE1C735AEAE93E456ADFDFF0BEDEDDBA
75880CD30B27909CC8C16F3FD2AD267F8039012A6AB0585242A0053D207E6B6F
6BBD25829C3E3C11434EF11317DC8D95979C461AA69DDB99797D1DADCC877E41
5BA9ADE8D72A64F3367968437AAA035BEE23BCAB45393BADB09536AE22A322D5
236A7AA741653B6DEF9E374FD9B04A094E7E6FB212A0E84C863B42B03F39FC38
90A12C38DAA3306E0266BC78DB5BBE16342EEDB93C7FFF2F161746F5D8EAE791
DA478647B592A7326616CD44DBF864B4168A0890CDEB4D14ED754D8D56C2BE2B
6372F2D61DF86D5A812EFB4132ADFA39B4F873B845ABF2660C73022335D5DC73
4AE3AC5EEE6658D792EB62131E1DFBA1C4A43BCFE8DA1E521D197C5309C2919A
8EEB28686F8C4DC0C8F94568E2E17613658DCF3506FD4770918757F1110BCC73
B27F3638B59766AC2FE42827D171434A374F10CBA9B76A56A327053E0F6D96D1
C2B699867EB1007BCE70924602E53DD9BFD2DAC29A0339A42F6A342FAFA40215
4D1360C711A40FE7FE508CDB795A3BFDCC677892BE01D84C5D8946BAFEBDD990
BC58E653AA0B7567E02481683BD817FAFCFA53893D1A325A4C1E1DBAEEB2506B
D5E5E810DA0191D78DC4590C6F4A4A6E85662526851D53E15083E2A4AB07D283
706CD76979B53994A35DE74BAB8F207A12293571760A4D5A7D58A46953188EB9
8DDD8A8691F3FE1D7B96C516DA7DFE48BF6D5CC24C216D97068483D77D259587
A79B98AAD61952AC0BF324498B4B8377F6A19D5F37AF5096CE711EFEBE6749F7
9A9A8F17CA0C871AAB3CF16015E2B1785CC9CE17A488F76B09BF829D2168CDC2
7B077C1A3E64030D40F352A155DCC3B4CF0008880A1663932AC35AA2CB73748E
CEF2CE3CD754E07C23ADAFCCEBB1B6339D669432436844CC683FC960BDAF1B75
5D8BC35C7F5A2C3BCD13A6C1057C9007EE185EEC793CE2058C93F089488540B4
34F1C6B7F475D7C0E6D96D981615938B81AFA5C99B02AB37CB7492A3032BC29F
9A0439666B5F3D9E08B7A152C7784AC66F6EC752D427A64725517980FFFD837B
6139DA3B60C4488B6AF86FB86B6F0A43380708A59D6337736BA2184DA061F6AB
3B261DFA6F72133343F40992AB476E5F84F49B1D0C796F51ED591BB8A9E7BB77
6B37107CD588225511FEBE1F1657BB95A7B240A8362813974AAAABC799660EA9
42EE4C0405E76E0D75E77A06A2EC0B7193DD414AA8135C8E1DC70EA62A948E88
B3B323E0DD7E5B229A8753CEACC46106B1ACC17886CFA89FED056BE9B0C4964A
E88138CB39E8D7F6DAD11D691A83B545377890D32F0FCF2E78D333ECDA84358B
D38A52F34923E7C63E9CB9E28405DA733CA68D7AC0F998B96AB3E3E182E29B81
9FD861E52B04E009F892D3F8B06202FF8DCD698B56544751347E9AA3520A65C6
44D4B1F6F9AD92CDAEAB2DAEE928681EF627A2AB980D67CE7B6B5CCD4A00A486
6D2F89FB374260E9C0D10013DE2471C7EBE744A55D65F3FB3C7726F68EA7F9EC
061FC8B8E3B1270C1BEB1C4042BBA0D34125774CAC7365D2B929533FB0065C5D
D17075585EA332D2963055947D63056452321CAA003E70FAC2CCEBCF8C130564
BF2DA601B15EE37DC5F4533724D785C22C645809C6B3B4BF942974A4D2FBF20E
45EBA5D846EF69573C5C757A1F17FAC7800D3BD58F5D44F0B16C88AFA1A33F9A
3D8C9DE6806F8146E8E615D349ED779B787232605BEB38346E3621C678A20239
2A840C03215EB573C7785B85F11DB67C23FD6EBF727A6A212D64423CD27DCC76
148BCD2C482200E0021D3FB5D5882F227F5EFEADD582C932F59D55ED4E20FC09
F2A23D9835CAC736F607207AC573291E6E55D618B21204776A715DE0C28F61B1
C5B1B6CDE7CEF528F1D2C4834A5A1D1078DCC4444EE308B8A5AAAEEF347BA894
FF23FD23002CEFA1CB9EDECE33CA0E660F3939F9F7B2E0430756301515E27EF2
16FCEC8EECF816434D63EC5A3E0ACD13B07DB2C2D78520212105DD5D75289ED3
07C730A46F0F71CB7937864A8B18325C60459A91799A89F8E0EDAC8376F8869D
C7CCA5CF8B0D07263F0ED9A6A38BB39CA02A3504FEB9ECF4787CF3C88CBF70C1
028F44347CDA0C2E3AABB4D0AE6285563D83626DDB1BCD36CFB0020B11D1CCC9
186C1571D506413BC2C2C06D94E602481654E5378C8D137E3A872753CCD89A29
F20F423A30C79C5CFA483AF99DC1251FA8EDFCF2E42963BF87271B5DC4615D28
1B73F4DA92823A4FD6601E2CC03E542912B987A9BFB8FFCFCAF3501977899347
B2092C84EE337093F5C8B64F4CCBFB12C66C8B6CB9EB1EDAC5B425EC8BA4590D
D3555C2E4BB60197FBB2324B8FA15795DCE6245908215940818C0E1B3883394B
A9DCB25E6513FC15FDF323A7899A1BA694A320774FC770362D28C2A1D208C042
9066EE18CB0870B0DC25F2E3490A9A4FAE056AA2B7755C4BCE15B185CBF6F362
C146A2D1FDDA55D54CF0086FDEE6B7CB2EADC49766F44593DF8DBCA7D017EE7E
574B862576F5EA495F51E1B3A86090ECF47893DF3D22A3B0DC696248FA3E8888
241B4057A578EF94F31F683AAA25B2BB44126243E3EC779A517C4D6040629FA3
5ECF5F72BC11EC51393E0B4F66C9F9C1A3BAC53475B5A70CA1B83D37D2718425
BB84231E6BF13AB85DCC12A3A8B9AD5994E179D48DA51173194BCF6A5C4AFD15
90BE6561CE5C988079E99BE0EC8743DFFCC5B40390E50DAB99A669F70EBC4901
DF9C5469C868EFD4927586715D48BDE5E74F96C82774AF2512D837DB53D1C47E
1E2F900F8EEE4A82642D30067D42CE88A5A5C7792D8E26AE484F2222BFD38455
BA078A1A500CB006AA6A7D46755B85BDB17DFA0E13328CD052650DC4448ADB78
D43E5721704CD3EF0235E14156EB241070DE216B7E52495E77C6C42134253C04
FCEE9CB233501A96497FCF85FDAC3C8CD834A1E8AB45FFE334532FFF6EE35125
2820E23FE8DCF09199F13A726E93DCBB3045733D43880F4D01BDE7916F7493DD
611F3CE69BCAD8410DC9787A8C558FFECC16C4E4B67265585161DD46B8A044DD
445B84139548F10082E28A8D951207D7C494A7B2784E050A11FE8B1DF33C4D2A
356D2DFF4254DDE3C571B9C6B07B09618AAE316461251DCF8A9302D6F53ED0F7
20442A89467CA60F03FCF132BC70894EDD4B14385F5BF95ECC01C22DF26B8BEF
DDB96F680B3E202E28B261022462719D39E5C3E7D878262C560FAC2BC019A171
1978AEA4FF9F8E856957A8BEC92F57789B62A14E6495133A1B3B110F97D9D17A
2DD22E47363FC5AFEDE35069E38DA417B8A345D4C31C7C9E0DBA4431261733A7
6CB16082B4DA5855DFAD24265D5D525E2C91A8525079B97D9FA6FE5B7DA4A263
813B567EC985BA26DD7650B28A326F8B92F4E100749B38E30E4D1954BF641FE8
BBECBD8F83F33779183066983F1E8DD71E60E25A5F5C5E63A8C78D8C0CC6D808
0518943CCA498D3809A6BD6549A52A6AE38C80AFB8C867AF2D69F12D8919CFB8
97E834D81079750511F5260974E84B5F4B1F47D6E6A8D59462D759009B19E9E4
F465753B6608E6E8DADE4FBF97E68F1E8880FE3F7F28E2F992F038335BBF9EF5
B081D3EFD3D8CF64D8F619AE619F5CF7C0BA0218FD68EAB2BCF10CA21818B531
AD10A20BDB91831CD38CE7311A006376660DC7C687555DF9C55AD867DA9A1F2A
02A0FE181C13ACE08EB4A2BFC9A596472C721DC09D8948B40AD9A7B337F96CA3
C6E1D860526021EE04AD9A8B83FE9782A6B454893AC10647CC82B1937B920E85
130F41C85483A47C5E99A7BD7243045EF3BC63F882AC630029512AC3C8B9B48D
D47238B4C18A9A7997E2E1681AF46356A2A5C3B4C1F7A671760EED5D95F60268
76295D85049E4438354CC6B692896971F28513592B2818D3207E5049538CED34
E669A162E422B331A3242DF9092E79CBA82DF0EAFE9AD88A24905F7DB7DC8097
C0D9B0F93BF2FC149DD5E38602001C8FAF28B2A4F1AAD052694B19CE014750C3
EFA20150F9AF0A5BCC8DD9C7DD5343491B5283636D113EC79899621E1789548F
30389BB0DEDC31DAC21B126F607D31F950B24B2C9042139D5E7DD4391E4DE612
13F8168F3DFF482FB7C9109DF46D02E2D34447B2CBC71F9DA6B570B4451375B9
EAEDEA1115846E0F47F0859B7494E26582C63DA46ACFF5D5CA41BAF982ADE5CE
0E4435570615F8826DD8F9666C4D9156AA7825750CEFD16E320913DE0F6F5038
EC5FBFE0A25EC6705994A2DC929A0F9117F420C72F0B98FFEA8975977FEDD0B0
262AEEE4AB04EE89A019EB6E90DD5E9973BAC93A9F5C33AFA9573F0ADFF57607
D1EE51B084AE9319C95757E75D477919FAEDCC9135C58F8F73D47D434DC4A4E0
C28876896C7D8D18BD2AD151059F1A220E400E7F38B995A95B0B9B6CECE72D79
92DC7BC4F5D001F82EBFBE58CFDF18EB2B410940A6DFD0667DC444D634220550
6A827D221020DE81CD6B0FF6176C13E0534B375CDE3CA6DD71472EFD0D73DFB2
FCC6CA510D1697AC1FF0A19C372A97358660AA24F57CFA5CCB8485932F527838
C9E2F1889D108196A65BC09DF9CF7AC51625202CDE53409BCECAE90497FF714E
57C8F6AA9362E8A8C69E14731135956DDDCBDA80B29CD9930C9E18593DD201B9
3D885973935C91CC6AFEF18CA8FFE7302D3B2FA93CCC37B409007F18B429EDB5
7CEE9E6B7DC7DF1BA50119F71AB4967291D8F4C7F97759245BD5AA1A57DC0E95
6ADC19E19CA5DF2F8CD9672CD815D75665525EC2DBFE798E6A68580FD4C97979
5A8836B344E43F5EE5683E3A7F18BD164E2E92CBD9284CB598E699E6064DCF24
EEDD570C6D62190EB9D3874EE03BD79FF10136EB44A8DE87DA279FF7D54B40F9
54901DE878D546FDA83928B3BE98031AEBE6894AD20C707BF7388ECB6383C6EB
BFB2B61FE04B0B13B26BFA8A80D7DBAD6B195EB2A498E60E6181AA4FF088601E
0BCC65D9059466C84CF5342B479A465137BD820832EE94D79A8FE6FE6B038CD5
0943CDD5B32ADA56F50A1E47F15513CA19AD82C30005002C4E3FBAD8EBBE1FA9
9D924A09B20E6B38E7F21BAC8C2985E23E6FBFCB7BE1255583782E14DD810F44
34BBE0556851FC6BE6C6B7422A8B1F6A109E9DFA8ED849FEC7A065461871F62A
56555CAE6BD34D7CC8829BB788B1188AA5757A22154C03831CFC91F03AB605B3
A3FDDE1DA1C862C9BDC3A2B152842BF8FE45235C45A4B65565788B7370527464
C55762EC46306800B7541B189F39235E00862E70D7E93430EFEEF4CA1441C635
2A40A74DA16147589A2D3DADDE9BB1A63A4047EA20DC3C4D0C55550E89FF6276
53220F144C62A039A19FE0567DB387FD918D3B0ACAB4DD394F6FA4728AF2CEED
07C261CFF0CBD84EFD9EC148AF4245BFE780E23BB321DA5475243A8F7AE05761
B5334EC794BA47E30E92CA260328E59FEAC2702369DFC8CD27783C6CE8F4217C
2A536AA09F4A6FEA7C1D4EAD89507E04EFB96476A3B4A2511E205412057471F4
0AA31896C6DE2A54F2DA9D4ECDBC04838313F8BD80359E6CEEB26113DF32D7FB
D61DE7DDB8C21C490317FFB83C801DB9D655AC9551F10922392F1BD2A853C011
17E45F49AFB2D3E936B548CD78AA6A6FCF0CF5DEFE3E55C525FD30BBC70CE036
E5186A0F8B4DD788A2F768DF9A75ED5B78C49642E51A141C5F34F7579AA55B30
DE6FCF1820604068B2844CF2550E4A80236EB3D6F8990240926797C0FF396363
3223EE144CF28896B00B1ADA3B58792D4F9ACD92ED5A79AE617B77D886B36E18
5986B65EE0DCF0830C02BEA2CAE21DFAAFB537D8D9F216F60ACD80B40A1D1BDE
B7192045D6581689406DE2CFD789F137F5D721EBE79A621FF37033CA412EE05A
459F00730C6574F0D402ACED2B7D63523757F6AE29273EEACD94189F1ECB563D
4909081BBEA2BE164FD761EE98BF5F5542FFEC6044F952A4EF7713EFC7017A63
899555D0D611B9BDC69BF798F350598765BFBD34976FF8B59351EF8865ABE270
3BB52ECACFCE5B1A7E46E3F2ADACDB61E830E685C67F73B1786DF4ED7FDD5B2A
6C5097EC50C75206CCCD11327D6B165ABE463654F1F31DC682747267E8335E49
F08A25B6B242E36DAAF1DE150D2674F35244D41473131882FFFEECE9FE525503
DF25B27B0B383BD65148E31E91520E8F904FF4D138518DD564140AAB4C91D7BD
5B80B51EEB416941DF533537B33C794385AC2422B16E5C59DD5CD608BEDBED9A
B15A643F7E1EA8EED8CD183078A3833636F8B33B0C66ED837176BEE6E6A8F6BF
17030AF17A438014B5902A55EE220152C90348CF590F0AF677458C17EE6E339E
5C3279B78C4BF98B23BA5E8AC51D2C6D351853990FD81536DBBEE2ADCC6EA159
97765C70930A53702E62937C18838A430C60992C0D5CC50F381CC3309EB885CF
0BD48D1CC0DDB015D9A513FB2A760583B8D83192711F973F0DE96B4533F5E9B7
9231AFA500B552FACF258072F733DA1AECC72715A99013EA30A40AB0B386F92A
8661CE6E429DE0B3A612D6CDE03DDBE7968FDC5EB12AECFAF8C4FCED792AD8C7
B9CD4753C97EC7A9D341F39913EA22BCE0635C95A998A77FFC56DFE9EF7E12C1
4CFFD98A31AFFFF8C34ED4505C7F6607DAF93FB72A72EA85547426FB8DCA85CE
D8C179E8DA15A08AC1610BA6E71CF9EA41C7E5BB38F4B350CE6F8424DD8C7DD0
EE45050BF63E41824B1622CB29A88C8843A60DC46A922F17A615B1FD4252DB7D
7139592E2A6D585CED4465427DAE6E95576C7F7A2A25823683BD51D67648F05A
19DDB64C7C2FFA658BB21E8FAC70D8E3823E358718441435C9C69FF9B6EF2604
A9F35B5DBFE2EAADFDE26D853BF2F88D4AE8A2F23BD06ECB8B0516A6F95F4096
6FCF17252740D8C45888D4A0CF8AE610E7017E11E78CF5E16373B73D777A9AFA
E6A7CD65C78EF74B4C57434FCEEE97DCB17BB6C4BE1C39B7DAE297CD9ED4A59F
E7A1E8114F0686D1E58C2B1CB5633E89A7CA6CFA4DB4C08432BD9FAA7FB715F0
C8D4F478D007CE9EE3809379FAD3189E43E29290A078C85A84003435A9119864
8A941C64D12C2CDAA43425B7C87E1D24C34E9E43AD56BA6B5B915CA43AB3A983
D7B5A446BF526A58DA4682C9F22549FE68E9C47FCB00A352AE3DE5D771C66E86
F97387D4AE97D6E821836741C62354A35CEBABEBC3E7972D404DF023E59EC635
F5B60E17C6665863AC03E8F8CE02D50F50548797EBDD3CBC1CFE349AED0167FE
B6593EECBC997193BEC66D9BF24502548AA33E45BC27D76528CEBA5BB0E57C01
29ABD9214BC7F3D1E370B1330D811FA76A32154D39CB6BB05857E4B8F9D6695E
F332BD3BAA9EE551A4B142DB63C95D566003B04D0603504C04951290F43BA455
DEF65260E1AA4AE02BFB5505446B53D06300E8975FAF42C7323CA6BAF8FAD751
BF26B2493DFEE44FAC4B028833975418EE180161A5BA285A634784B5C38BF0CE
1D0963CF4C4CAC9BDEC7AD1230772D7B98333D5398A82465238D52C6496DA73D
0D402F3CAFC7DD736BB0C4879624730392BCFEA94C6A4EA4A96C696DD0E62D1A
74313C4E0BBD8141EC4506909C1B4904CED6AFB3EA913918F7F9AB0808F60155
75E5AE4670C0B0B61EBAFC697A2CB63C493D6A6C0CA020EC94BE066CAA01A20D
C6E90636869186AA71F0C1ADF3AA8290123A8B67E6AE0D3B851586488177A8C8
F976CFDCECEBB8152B9043D3603A0E960055A88EB090534CD23A881E6D86F82C
0A23B80573ED12C18200177C729F813D56D632F88A4EF310FED856645F5A8D84
FB1C177AED502F9F054D68CB91DE636D5224AAF53671ED0D84110670483EFE13
BCB89E89F97012F8EEB93F1C143489363330FE17A7CAC73B25AA25C7656D774D
8D275B5D7E5A9781B2739D42973FA53DA94218E5730EDBA7B453A4A15E8B8137
495F25DBBEDCF2CB85D3496A07180796B05E1C89F8BF758BD445EA22129528BE
85A25FC2EF78FF074AEE2D574F2F1413B4C6B200C87F93531283C6275E3B1E2C
1F59B4EB9149B347266ED7239E8ED5BAFCF31C113777EA71DA655F2B297464DC
C5AF13D57C3164763BB0D9368246A81F791E89F1285576E95DEBA7E62F33D813
B1D32B75ABCE6A6BB030777C57A05ADE88FBF2D6B94F12E4EA3A9BDB285BED83
2622BEB5ACF682DDE991AC8B025497852E03BC071DAA2EB34835CAC050E3F02A
9636E89EF795734A43944A722025F686227B12FAA9D620113A18D118B979650E
646A03CDD09C9AFBAD362573965B49F0F6D5BB19657EB68AB168DAF8FEE58727
EFA4AB79C5D156F6A37F088B4D8ACBA4FE54256D88CC4BD4DC84B5EEFE217BE0
B436583B18A92AAB5BFD98ACF80D5927A07DA8A3AA987A899E28EAC3CD8AD155
60CE44A39581BD6B555165091C5D4107171E03595074FFD037E05D5CA52882F7
204E9DF81B2CF713E28EDE786CFC2B617CFE4D6E5B4077B438642E42FA7E88E9
0272314C412C5DB4A6BB35BC938B24815C2EB9CF229944B9CC67F7AF33B63A06
B6CF52D85F449B56C809AEF55167FE8A2F947030413B8C42BDC2E33ABEAC400C
5E247D21FF6FA61A1B3F446870C18C35D41F2FE00A83563B359553CB8C438CD8
8E7A2B731BFA4C9641E0232A45F656DC96CA59197ABA5C76B7D4BA94D0F9D1EA
DEA424AEC09BB17C9FCEA168CCBD65269ADD11D6A8BDB5FC9718A5AAD8D7F258
3ECE181555EF5C3235ACEE34F9FCA967E0CB50D135C4D7458BDA4978BECDE0A2
32EDEDBD4BCFB77D56D845DCD305091A549391FA9B78C15F88DC6599E66ADDBB
9D0EA0B59D3CE1DC908A740DD5C4525BD16161AB8C155EBC341BFAFEC3EF8FC3
2015DCBFF67DD860252ACFC5659C3F22DCB01B993E5CDB95909585F867CA495E
7720C85EC7B4C4649880A0FCCDDE09B55605A5F00FB5AA0586BD678DD4FA00C4
4B59204379139158DD9AD3B5471857FEE0AE59D33B1404F2036B1E6DAE63D459
48D2E7A87A14F138CA731CF47BD8B45C8EFB5B7DE6E95EE57E39119B9307E94C
64C5037EB6A5A106B801EF53DF9096B2016C8EEDD5F976F10BBD57B002E02BB4
13ED644B2B932ADE030D3637683FF67CFE7D2BB48688908A43EEAC6048AC8482
37E30DB8618BB04B765781A7EAA080503F951767C87C6384ADB3ED2A3C733FB9
D4DF51D26EE90E00967070E59280AE1B784B4EEA1F63CCD29969C9EB2770A7AC
3041EA7D7F6CBCB6EFE320C394745299F1C54EC22E3E79B745B08A171A36C711
92DB40550EC3EDC44839C135CCFA89A8C408E110CC5026AC088BAEAF37CC3B4A
B9E1F95D2645C646BE448AEB86F53AD9BFAF9C0270E2B39A8CBC7A4CD505326C
AE4859DAE712C10A8ACEAD8A3C087831F46721BAB041209BF77FCCB5ABDC05E9
78BFAE410EAD0B6678415DA2C7938A527DFEC6C96CF090995F33AD14309CD736
D12425CCE96547313BF30C4827F7D0DD43AED43522065679A1D67DFC381F6EB9
A625DF841202E4C3F06B5605E5A26F7D0A37EF8033FB17B76B48D08D7EF20F59
9A5414966287499F8358077205666A656EDE4FC3C3EB1CD3724AA6B4524CBFF6
EF0E47D2E2E1B53B93052D3BDDABB56A6159FCAFAD819A799820ED513FEC4B11
71AAF1B07BD329C250CCEC0F452E3C7DB9069F0D1F0A0ED6EBF832E81DA39A1F
E25B022D9E5BE5AD7424D2CD1BC0281FE40CC2D3DD1B36FCCC46801187BFC141
D0082658D35A251EA07539866A1DB7839361A7A62FB2FFFD6F1A8348CFC3FED7
249236C0992895B8843C6FA631EE7A4E09E690D33ED76B14F692FB22F192D435
B43DE92A98C5317E4517E94A9DB0568E67C394EB060ADCE28AD07487B045AA21
6A8AC072551355E9CC758573CEBBEE626826B38F9996FDD5020DE7092E46C08B
983607E2618F969151D25B03F75C8841923271B96CA04B6133746B0FB2FDB08B
34F62E5260A5E9C07715640AAC29BAC2ACD8F8AEC7E06057C5BDA1B685FF746E
FEA3EFF45C9A0061D968D72A796A9E2C7336903D846DC0D0FB64EF327A9BEE62
237D73ADBBA07C3D3E8326AF8D38645B74AB963931653B364771F48716BD9A6D
8EAA3A45B953A46AE4A3CFF94506647E28D66C9A9D3F61AA34F3DDAB60E0F06C
4160893D523EB78605B23316B67B93DC4DFE03595BBFD74CE0B2512EF49E91D8
3EB8E146628620FC0EA0F331060E781BFD08E875EE85EBD4AB8B9C92DBA60677
593C5FB2DD3D50971A1FF8C6778DBA87420DAE97E5A862D2AC28C6B2B546EFE7
3498C96871EAF71BF00AE73D59D1CD688F263EAD9EC43FE4FB096F826E9209D5
CE5B09EFD0E3DBDAD1CAB8375B4D7D37BF4C7967D856934FA7BE4381629F2B27
048346AFBF0AA67F5ED4E45D53E7F75E735A02311BBD51DE1F1F36449E817FC5
C0911BAF787071C35B1981E18092C5EC405026EDE40E5A6C00033E613386C712
117E1856E03FF0F6EA0064C439A133CF884960E56515826D265C7BCD6931A762
826506F3051A3F98362625378E5DD00FC028082B1A05A09ED24623BCCF2616B1
AA07DCD254BC3856347408B3EC7C1394D2B5EFC3A96E559D73518443479EEF9C
03F89E026963830B08E9BED0FDF83EDA268AB8D87F1908F94927BFD060CC594E
01D7232A2F3C32EA55B3A8CC8D2229A01DD3EE09EEFA659502F90DED98BCB0F6
14F72326C3F650CFD4308DE0425FD9EB66656B25DCD13649ABC2D268C833BEB1
8FB009B215A0DFD3F9E711FCE286E6CE623421D3CC3EE3ECD56ABB41615A2A4F
8E5759B1F2456676551A5F1A2D459C4A7493C3C8A9AD1552A5B097EDE60DE0E7
5AF817F8114E71ED9A21677CF82F2AC8EDF72D50DF9D10457818ABDB573450C2
7504FCBDD59749ECEBB78B83643002A3453502A41B07CAA6214FD4E30DC14F1F
22085EA743F9C98587768C2816E4F17C3272EF9AC837B3386ABF10487E8A59E2
99B671F1CC3BACDCE7276A6B357A892D84A875E7EED85012819DD2FA25B9AD13
423743964081BCE8E27F3B93E0C769742C2FB0C45ED123643CC3C3FC8D32DBAD
FB07D96784821DE486273F045C74A7F4F75D13962EE0925333AB4A68B5015462
25D0BFD97BD4F070C1B633578F4D590FAF2528F78533F157EE12BCF98FE4517E
8E55093CF65FAD79BA2602C6690DF4832588A2077C7DD0158EBEB34410CDF5D0
DAFC78273563D92388330E4B271C77642D8016FB629386B644737CEC68B1F8A2
45B6EEAF4B16D671B5859E2648A7AC138BCE2F26105965D8D75B75AB13FB2E9E
C427D116B7E72400BE1E78FBED71ED2FB13FB2FE1EFFCBC719BDC2448BBFC520
C3A20820E775C4064934FB530B35AD9155EF03D074AB5357DC1C4A95D3B69AC4
2584F602B69F8B6E3C20910E8233D015F74684222C6861BDBCCBF531A5318AAF
CD249A01138225AD0A34DC0F7933F19A1349B394AE89D2FAD9427A1EF9FCA4B4
45B0D1CF1956EE85B3A5E20848CFC85D6233C52AB69DFECC92A2CE43B2070D0E
C8D3554CEC3DFDF1BD06B73B983BA15FA853992FD343506DB01458825F2A16C4
4E4F60F1E032C33BDFFE3CE56CB0912109796C1C7ED933CDFC1F806F654553FF
CB696EE9C9AC9EB976DAEE83B9472D0AF7264E027D2F7EEB45596941F9D1FB8D
24284D6A5055166D46CC80BBCA6C89DADC27B02F88B02B0A8794983256BFCA95
F87116ACF00AEAD5AEFAA9ECE9DC30DEBACD686D999658884F6B4348DD5991A4
02D504A2A6E25845B77F95E9325950C56568EDDD9D68C4381BC79EDFED5C5D73
6A2A68D94DF013B3EA4C39D7A989DBCF71BBF93B6D8E0239BC3C5A5CF1815832
211E1318D4A9C7C4B0F6CB6C4E0100520A7A3CCB911F9314411491D183470245
E88B808BFC67E1AADD707CC9C7EF10EFE78F63D1B96584D12FD1E04E10957FBE
1FC68E5034928B141BD90E0960A0E3438BF1D4512C8CBB34903E4BD3037898DF
5958C8E3D0EF63274B611B22EBAF65D279FB914D02BEE1E5FE8B17B7E640BD4F
01B8B33BECA97FD68BE71AA73987D570CE2DDF953C6EC97865BAB4B59F7D94FF
33EA3281C5E352B4D7C4C167890560A0F70B10482B57D2E4BC003F059EF44B95
BAC53014BFDCB0220A9B7662402B606F9CDB1600C5BAC9F700E00622D0220DA3
A0E66AB992F20B10B3D7605F58514563133FAE68CC914D904D180DAB9DA6356D
B15CC38A5C07B95BA69E127CAB3E513AC3FB08CE64B396F1490076CF7A5184BC
A0A5FDF4DB04ED0FBD1365DF89A95F6078B3F3587643F20ADD074744705AE001
AB7FA7CEAC2DD48825575A099F0565DF8C19C153EA76C73FBC31931B6AC51FD6
C3C5A6F475249E29F5D66A710BE69D3700A07B38C0A7145912FCA8AF2F102DFA
749319051A7BB387596624B9CADB3274B39920EF27D98EEF3655AC1B633298BE
062457C717E064306FE5E6210184B402BE4FE58E5FB99559F4263372FA25D049
174459A99B7EB3B768B2819565A72D3092FE8F1EBB22DDBD99F996A92D75F6BE
D516639DA055C8AF1CC348988CB1D2B89D9857A65347488BCB948F0FAF73D89E
2F8EFF13678BD16C9B59AC32F36B838C6D8CDE8BB14E7654EBC85BAEBF5318E5
3D8D9CAD826F3690D2A7A0902FC73D9194C5650A92C3F8F3E237D1DECB34CC4F
AC53D2950EAC77272AD347CE57EA02940BDE36D1275F0322FD8ED5AD203BD53C
A4C1653C0DEBBF7EC9BC2A79F5CF47454BF11B0F983108BF3EAA18816693A273
76FF7C80634400F300D851131DF5557EF42876F76EB35EAA4DFC8050FA541FC8
C392E98C29986B14D002EBFFC08628185D92C9EB8FE064ED9168357A5B6AB898
B25FFC0ABEF43FC3D0EF1108004115AB6ACFF86C5B057FBA8A473CF7B6397288
9B74AD6F525F9A017A34A18AABBDEC20E7700686FE8FAF1CE8AFBE8A1587A7BC
96C8C35FEB815ED98DF3323EB76E2F3BFC56D2A710AC5AC35FCBC43DC3855DA2
F78CA10DF480C3FFB59C2412D86AD09309A966538CD3425FA152DB6EB29447C1
FBA149ECB03C8AACCA4C2CFEEEC81717E2509CD7FC438B8EB6095887A1EB6B08
114CD048399EF725A27F13E80496DA13F0D1FD8D2DDB9E2B1E95EF10D0273E58
6F959117FD82E475072D3DB5257613FEE70F68873F97CBAB88C535BD22357B5C
C70F1A5B6C282CD2B7284B83AFD2E33DEA0218424F615D4AC6C52E6C67FF1AF9
B6754DB7CA7FCEE64CE049BAFB60F9D87CA565352D8CA24AF137FC5810F32BD7
9212B4B6EBD776F0DD275AFDC9941B565AB7D91BB6A48708E146210424806516
5F4962AF8FD0B6B5B9933249AEF38CB4A2AF4786988D574EF767734F6FFA7D37
A2AA42A42896807E1E2E6FD6C4C82EE4AF7AAD7951E9EA3CC6F0872C28108F7E
BBF5BF770C0BA6C71225D19C633FE91FC8103AC6DFEA6F007AF4A42C0A08C4DF
D4B037D1639B616A81B2E18349C55F794B95622CF981B46D7B6C735788AE98B3
3E45E0C7B75E171EDE92520ECE00DDAB010D8B8618CD6C8097D89FB484B6DFA8
62FB291F1DC4ED93E5409EF34D783B7F81758E7EE3DEC510ECD8BBE38C595B7D
128724D5AA08C9EBB08BA3A1E5278DC1215183569F9F613044A0584E0E5B1DE9
65B895DCC9D8FA2C78647326DF0E5F2CAC5657DAE8970714BE4A5AD9A75AD188
9426E4855F8D5C9E326151897DA981EECCA1124159AAB8B35794805902F5DEA4
B42619AE5CA04A078AE1AA90BEED861FC01DC44B9A76183930D004C1316A27BC
4A894E41EFA93E620983470241F9D25C8FDAD7666186CED87E55E5EFF1D56497
93C85487C0571E75403D111C5EFE83AB5351D184B0A8AF561333E150C9B1E5C0
BB4A93696DEE0F03ED111120951D40F1C0E49A2E5A36A6964B7CE3A4697F8D04
B84119B9FBE247BB1E885CC7BF2DD6BACF817A405FD55D08FECF8A6CDEBF5C2B
5CE00FB627435107F017CEDFE61632D681EADCEC82E4151477B96A74B5BD1603
79D0E14BD340ED85CE89C7F5875B7E8EDCB96F2E6D77DB8B0387D8BD56253A7A
DBDD5E5514567FEB068FC55C7C1E25C98E92979341A8857C6032426D3A136AF5
05AFD81C39F7243D600CF7EE976E469E85E7566E630BE35930592958BB8B98A1
EF089503FCDB80526E27FF873E542659539C3801F7945F31871CEEBB11BEB882
55B2D6EC357FBA3AD4FFF1C4254331640B2C26C5A3DF2DD220C639EA4E37DED1
953910563A49CC3E4BAA3F053E03309BCF36A4D9E44AE3E5B43FA0E5A5D77546
12BC9E70EE4862BFF889EDCAE16A158A037C06741C62578366A13D87BD7DC78A
79835952989494E1C13FE07B0B047A41F215D18893C785C90DD049FD73376D22
FF3C9693FE98F7AD41DC2AFBDCF0163C05CD0BD8FB8C3E0D94C1BDF73CBF8F8F
90BD153C6B3A5277A4BE66533B21FD461641C4FA5F7DC71D425F9409954DF168
966159B2A302B801CBA29629F20F423A30C79C5CFA483AF99DC1251FA8EDFCF5
7C3E0D8598B7310A3DD57B13D3C78EB58CF7FEF83DB06EC2184138DFBB52B790
35787CA8CC536FB0B97095AD4AF3CDDFADAA2DB90C671E9AFEABE9C04E982387
D326383E9BDE22B6A1F0DAA697800E5A05BF8428749028B543963662D44F124C
F8AB7361B024672AEE4439133BFE7E43E8392869DB08506178EDD06A8D6C08A2
D8930CB37A074333C6D279CC08B086858A922004FF7E9A8751D10054867B96D5
65268B60A938406709A142456B978EEFC2D2AE5B24E1B185DE4808B7AD3A6D16
700C801A236E136AF69272B96BD052CC244E2C181A9D049AA9B94D9067BDC1C2
681DFAEF7F9763214B3110ED2FDE390619072E22E1B02A4453595C47446373E8
E10B6C92AD03FEAA5C11CACE3F59403B19344DDF807173C1D207D2AB4EE6AF02
A6BBDA6F80859D9E1198DF99F7C0B5C283455917BDC6FE26717F02C441677BB0
95069D400AA0C118527863B183B673DFE7636C20F108E70F729016E117FFA642
8294A1EBAB96C0E033CE57E64863E0F1ED4725EE7312BEB40CDBCD8DB12F3951
CA19DCE0F3992DCE431A289C14034203F094E4A4A8617B8C8D09650239DAF887
E2021E75F643777288736B378FE86691BB120D275CBADA113C56E193892F00F5
95D8E5E963E8FE17D7258D2BD1B776D5D2E4DC52936D6E31D558F6FB02A2E0F0
B0DD59F8BCE551440517CCFE79AD530B41C90A3D2A655D2C21917894D9AC7EE8
7AF5CED09CF717D58E2A1C8B5E7A2AE4E28D23BE2124E2ECDD3E91D91C57D855
D818C86819DA7A0A6A2CDF63407E6822533E61A4C1E267DB9FDC3DCF0166F462
9F92C157258633E32D992A1205AF9AEF778634D5405E6713FB34132035F2250A
1EA8DFD81842E6B826DA3858F40713382B8D9DBB63992C3564AC9B287F27E958
AFE3E40C8A7FE86C70C4D6DC4777ED7A06EBE7EBBF4E740B4DD926497E183042
ECDC052A1A661D69B3EDAFF12183180F26630E986BCC72AD0C9D98D648C73EE9
818DEDD4FAE02F454A4B581A910AD152DC4AD089B0E66C0906597A348FEE5FD6
B27F088071F6BFF547EF66E1D822E096D368142DDF739A015BD18DFB3515FCEC
DBAEEA45948E9A9A7276C249E31F1DB40DF9EBE155667B75A7657B9A991C2488
3E1225FD310ABA9BFD87333B8F07B1DE06DA3A5692DCD2E05FC522933E29B447
B5B836D171581711DB3D81E0400F776034AA7370C867BDF8F8CC92DB601006F8
ECC930DEECC72781066085C13AF52E34EF008730B16066BB2350231579E8528D
7306C1A058BEAC663B6B304C26CA6345B9A592A2A98E9C4F4F60435396113DBD
07DBFAE1DE05AAD675F6217DF0885094A6C6C0090B17303B76DDAF1E59AE0F6B
79492484714EC904D83DB0C432A4F301087A63A6B47C4C793FF6986414DBE843
D972E1F6DE927F852151C03CB985DCF116DDA6FEC999D6287C9369CF0DC708EF
4579CDA00F8F8AFF48C28B0E6AA1B0314EDCFD19969CD70922B7067B75313348
D0082F3938FD40160B1B7A5521A4A617B1A0FD8DC93436FAC9B7EB312DB0C0D6
9392AB404EF3DE65B39F948968EBDF1EFABE4864060BEC9AF0EA521607C9807A
BD054E5209A3D75DE4BA09B89B1767EEFAB38ADDFA90AB28F0076451F91446DB
57FCBC022A679A05D543ABD7A39B658977C7F01D14D9A1DCD981E9BF02EFD7DC
4BC6BCBA76C84EF371912B4395754B97ABB24DBCB1E52BEBCEBCAA22510C2BB6
674503303EBCC73BB5F44FFAC6E48640A8C3F7D97DC5E94894E1E63A7D80600B
945DF7839669C7D10AEE9EAE2BD1C09EE582144E4AF82559E7BE54629AA70CEC
4B9A451A119943E2ECB4304977D91120C5D6CE35E7D5460EF05B1A5136CF2C1D
DEB46F7382EE444B6DF528FCA00A4CE5BB7C3E53EB9E4F129370F8C89AE05B9B
A0D7E90197A12DC144FF69C587FA522B72B839FF9347B091E3DD790EEE5737E6
7ABCE5E8CDB50465A42A4BA653D5C26C224A560EE958725486FC899E0D53F0E9
70F3EAFC1572D2E56F5B57B557A41EEFA5CE5BD3E469284548B7520A3702111B
4DEAD8BC216D13D3C8BEF01BADF1A49EA6461B95CD353AC2B963677085EA618A
4F1C5798FDBDC1A2621775E9B49A4B245B8BEE2A10223A47C9EDBC3F896535D0
DCF538EE3E40FAC27A27B59664E856EDDE290103A0D490FD7282446E538A3026
182FA01997F71710C6D3AA8517517BD79134CC34EF0D0885ABA3C73F1D78F811
430E0A4B5D6D46583FF880A6B21DE38CFFC2C878B26A2F7C2AD8E8577E02611E
87CB7684B4B2C51F1414CD3DE00E9BAF2C7D01D739E2BDD299569EE578A0F2E6
27F3CC475425783A9A3DB8A48C4794FFCD5DFA64BDF5EE0FD9971FAC65FCDA08
167AD025F24591E5C2F51F98C01BF41ACD72DEDD18885A346AD0BCB540FF5D3D
13C722603FD1A9BABF2518229DD993D11E519F94F7427E6E8B27F236199CB39A
7BA721CE97E1FD9A0EFE937656C78D3EEF3837812DE0E121FD054E895299785F
F6190EF689DDCB6281B4958C9DC2F11FEE063BF60EC48ED7A31FA35DBDD6CCD7
D6C2761EFF3967B5A741B252F764BFBC18C29E0A119454F02D044FB87D284384
D6AD0810B5407E1085B1D5104A3232FD9F495F912CBA1C84227A2D5E3B8545F6
0F59C9888CE2D1B29FDAB50A60DFAC10953DC67579DE7E4B86B1C767FFB9AB89
D96E00A430F5B9B626BF5A357EA9817E095C3EFB159715F280FF2CEF63C506FB
F361BE07C5DCCE8CDBE1C6E174AD0D12926D48FA5F6424D76D2A60F888B1514F
7C668D8E781B16E78E2D24C2DC9AEDFF832696F5CA0D4BD71FC54A1D783BF125
8BA1F253CD947260922F22D2F235B44377FD4427334727DD52CE5731D7C3C6FA
7D36C92E760CF2D9EBBC1B665E261B1D3C7EEDD8E784C9DC6FB7E89C975EFA0A
76A59C0A51F982356BEC40CA8D8F6254229AC5CF92EEA4AC13C5AFCF78E8BDFD
4660EACE5A74D6E6A1BE3160A48A5060F86DFE241F2E031149C60E6511C442D6
DB148B24C99C52741D90264595376DA0377727949A7669A9FAA06E6469ECFB83
ACDC25907DB8544C4E5EA79D4611AAEEA72B791C22A1822E686F390108E566A6
0552DBD6A302E6BDFFA20438F0184647BB9AC3F396053B668EA3FC26B184488B
73E32595B2F9E6578A6CCD747FF301150AC50DCCA3B1678E3821635D89B5913E
91F069D500280528559FAF0DA930D4601BC0E4A1206AD2291E6FA8684619451A
3D0928F822846260BC0DD0858159DDF19EC5D9BD286173EF785037A4B6194CB5
B6BB19B27498D264E5A199EC2ECD29C06D1C6C4895B8B84BF722D8207FD68296
B4ABB049ECEC181FEE5B3FB89A908A72B8B06E2C699D6AB75FFE0D0263598C96
F325D7EE44C8681906BD573C7A479E1F1573776A69E0159CD0A319E3622E718A
C6166E20DE8CECF05D6BC5A7926A98F89AB91B91952828D61D3F815EABFBD4D6
249AF0826722CBB1A0E17586A77E901815394F0360220C86E48E9D5D01A2D4CC
7AC292050E48BE6E8E6E1C6B6C5C5F99D62843999D71C5599F89C29824458186
DF6558A00C156AA1F4679D980EAAC61319B71389F72594A1B77987DA5412B46B
1E9BBD02FB9E0470C33AB0F4AFFD30BA41FE763CE4E65D2D315F81C050B35167
3DB7D00ABF0F2DD8185C51D692405B1E1AD54BA0959261F9098B70D161B2E281
A539F8903F7A4B2DB81C4D85AF0220FE72247F0107DC977FA7570115572D42DD
09BD9D2A93256F7FE7E28D7FF5EF4826DC5B091A32E5345643F0C7CA968C33C4
E6999179768AAB4E42DE1B24F8DAFFE45366520D713D1D90DD8D9C53C9C4BDD0
F3E0EAC6E20FC4198C7AE63EE63D34A6E5E6483031F98EF3E464AC92D6F4F610
C7BE1D5563DD4724E37EA702C2D4ABC744B82587F873E717B05942111313582E
4DDF77A82194D360BA3172E24C56F277600C5640CC60DE9975E494E8EB805ABD
7FD9DBDADEAE99C3934F3A844D66DFAAFF475C490B15E5CB1BD87A6100FB711C
90B4EEFD97AE5D184F743ACE50A98EE53C22DF4FF701CDB977ED5D8F37B922A1
275FC5D1DB8DF20E98BF6863E7EEA30FC85D5ACAC383B2570207BADFA7E81B99
634ECA69FB163C6FBDCCF69F29187B319040064447AC6D1A15CF1D1A3797CFE8
5FB55B56AC01F9CD381E57D7B00FCF5F246C5AFD97D7F7DAEBF80928F0C14F7F
B96BC2C4563C7D80C0F466B67851DDD3608B8A14AE5F65768C9CB901EFE59DF6
8CD921766A4CB153F5B5BEB54B3154F98DC9903276BA3F8AD278952CEC5054FF
6B038CD50943CDD5B32ADA56F50A1E47F15513CF0486957689EF7A13CE20C001
C47DF05CF38DD5475AB590E8F790C1FC9C3575AE5D0103DA509B9E0536B94772
260DC13DFF775089954B6853877991059EA436679FFE6768D720DEE0FD278EF3
0E14F6269057743D238D06E7FD44BAC260C87CF22D052BB172F21C811F79B830
220351055D5106F18596FDC4B7A9919595AD299C5960724F0DB92AD64423C5D6
EADE4419EE27D43ED02C5E421DD8422A24F385078DBC5A392133B4727C102381
8F9B83C0685517DBD041E6BD697847001C3081D2B80C049DCB5901C2A48F2F24
C46A81A9B5737450A51A3829D1F300AA4CB2620D7426002161F983AE95E542EC
B08C9FD8E30152DD5AF9200F8AC8B8FA39413858E8AD7C262389354F9F6F408C
AE1E41803749A8A0F7D3AEA074A5BD8E87F711441471ED97209C2DF9A5189D29
126676AA6A26015B9464875495D5514BCBE05DA2CB81E8ABCE664514E2FB0298
23AD346774609F9E32DE6836D4EAB2EC94DE5934CE2EF615D6FF120F55FBCA06
69FE3E69242F526A5E71FA06AB75C6F7A1F79F73AB5950694EF55BEF2F57D5AC
5B4A0E2E35356F9955D5D7836ACCB4C17278B1BE02907D537F9884A1B726C0E5
BD5187C6DF9E1FD89F2F8CEE0C426554F58EC8CA9C5E89830183F28FC955A599
0FE63F3B80765D6EC881BD94225D9776FD51570F563752FA92F87103C2351E88
5480C7AA0DC61F197A9CB5C80A00332184637C680C79DFA5428CD87225C7FF28
FDCD4FB898A052A0B1A16CB17F4946DC7B0B2BB97622C5C5D8B3E64238578C1D
E93E0B48D8D4004F875E8048DD953F0C11991D1CE1F3CA333D368E05EDB3C55A
C97DD8E414F55535FD214ABDF31FBAD9B7508388DD936A8487E21B0E9DC3106A
B600C9253C7E0F6C1FE9964D8FE0A244545147F2DB16D3390FBD1DEDE8E0D258
8060BD86EB4B4A287094A4527FD8E25E191078E33A53D44F1DC1D6ED2DF70C6F
BAEDDEEEE3A946BF97F48184A0C5121D9B851BFAF13327FEC0B3B6A78C90C52C
41628B8E164E678C956D013FB0402EF2F6C3B06EEAFF00FE2601C0C6D138B23D
EC0D8052661C9E566BC5BBC90E3E7D00AF5B2479AF6E3ECB544654C43CA7BEA5
B305B1BCA2F1305A7375C5140E3851D25DAA0F28C26DF07D1C079E5112477460
ECE5F073B6F1F63A92B60163D42E603DF5ABC291A4DD1F222E2CD4FF98DC7F79
C989CCC086CAA9FEFCAC6B1C21DF7AE2EF505C0F1C9BDDF1747CA2F970929AB0
ADF6155C16A31569DDF8C689DA7A3EC6DA1F5C251BA6AF93A4B40C506C136E5A
5F56AEA9C6C4D28960B4F2B2132974C601B6FA29471DC34814FC81A1E1A5155E
5CE31C40E25CB5402826C52949D11FC987AEE20C6B0A86B82B16A2770D3CD8DD
56B3D826B909EB168ED42B3043182EA2E951687D6CEEDCCCB24B03D138396F36
E9F34756172867CDF00BF7CC5123F30424CCC22A3F2B6C8CF1FF2F358BA797B3
C62E2902C790EA3E440E4B0A82AEC6C6853EDF0D22CDBB0FEE92BA62D5D988B0
989A278064445A533763D8B6BA0A8F3DC22AEEED1EFF331BD25CAFA3002D440A
F04D4201408C0C4DDE1AA36C34D45E2CF4F8EAF073497C25E75040E1F9A5056D
77888FA574CEE0AAB8449EFD258C8DAA3A6A5732A7CB0A03B719B8669D367C6F
F13C336537B67F235795800CA8EF19BCA2C6134BF0DEF1E84FC08DEC39D507B7
E8BD7F2A2FEAAE06E2A1040FAF2DE1FD6AFD5FD97EAAB6149568968C1CEEEEDF
02B02FD1CB0AEF455D03345047948E1D5CD9E1D54086B6910C2BB540956E1FE3
8428AA3F7EF0267DF9DDEECC2591264A4DE99BE97A3EF1D601D1FB6A9C36877D
0B777EEF59B03F19BC6B8FDA9697AF97F44181C189EDDC426F4D950C13B31CB7
B479C38F9E33BBFECE063768C3B08BA647BC6CF4B18AFBCBA9C81F52989CC535
B2DC3A08941AF07EEA9ACC4B1EE0C52348AD9F862F2E908FB07FC877BE70D6A2
9FD768CF32CEC5D1DBEA8FB5746CCE8AE1BFBA746A5B1D4AF52095EBD82229A1
4EAD28B99B7631927A9821DF82B89E2DD0885CA956529EA49D7B91337A8F2EEB
E8205F2653C608EEC3D845B12F3975C5EAFB917A0CA78C4FC2D4E9C449E1475D
BC00969FF873875A234AFB3CE6AC23D8F2029F77AC82CBB8F9C07E06D549A47C
D403AB7AF9961F0943FF5F02016DD6F0563A26851910500878E112CB53F97923
61238817BA3548735C48C859328F262D3B5D3B93ADDCB366B3F06E7E7F6D9B01
FE9D1BCCDFB4A363C64AADBB2CACE246ABBF5F0F768ECCB8870DD9E5D9541C24
BAFC53EFA42A90A1984881D91F6F8977204C96A398C3FED621184123BA8D8A86
B1C88E80A49400DAB9C3292254DDC15156486AF3B57F51AB9160654F45B76A22
87D05C655EF40126F1D3861E1D799628816A876C6FBAAAF8270E04C40F204B0D
7C712C1367086F0E83C9A242C22593968B02F4CF2ED1417AB863C2615F2D26EE
13D7A04A188332952F7C3F8C65BE4CC71CBA58BD7E75CD325ED5AE71C178337A
918D3AB0478D8547E6736510363FC1DD604C0AE60BE7772482920515BA2BDF05
E7298ADF77894331ED25BF6955E13DA0B4DC510DD8EFF137E476FE5A098E607E
25ED29F4BF3409377C9786F51A671DB10D74D95084ACE3907DCC79E6B2C34FA7
B8A330B36B22482CF96FD2696A48C832F41C5C2037228AA98A3DF4D154176673
A003851DE425A8AF6BA7896F88495F421F35EB45FBB2781CB050CEDAE7659CF6
5820F4F1C298D34F3811D5DDA7F33DC6E913E04ED664952F82E40AF2A7BEE252
F72C3DB36D003C3677E6134061E6DAB8EF45B36F469AF412C1A57BC2B045AC90
C9E9554A5886F36597FF31A1957949CF8EC35046F1566F5E4847CBA282A9BDD4
A1980409CA6EE759981E943CD7219957AD25750308A8F0348CD1ED0725AD5169
90B85B5BDFBEC31FC9AABE7ECAA5701B0D2575AF8A8596254E9423C57293E98D
CC4745AC6826FD1CC653E3EE6D197AABF4A2EE9F4E4A3C202A378409F5A1591F
80E1281C37BB786A8032F9A26C558DEA1C921FB40C10108AD5B484A51A508818
4F5E56B96A6754C18AD8D66B2BDFAD334ABAD2C5F76BF39282D0236E0983786D
EAF6699160F8838CFB65F1EDABD0D0D68492768C7FD5865573EBFC4D9FB91DC3
FE6DB335B2874D45D6BDC39E87A3DEE590EFEA745ACE0C43D68962B5343139F7
867EB4E3E29C51B85BD4F5F77B9282769B4DEF9D348B8C0AC447681812E3B731
97EDDE7CAB9B111BBC5D7BD04CF2DFB6861BC85CE9D7C094A5B78268276EDE30
15BEF3276AFE9F894A7862F5C325DCC4E613533B4095750C44CDBFCCCAD7FE46
DFE72B1098F3DB66448653E536A3D89386E1431C515236A6A86EFC9BDF91470F
1F504644EE43EDBB75AD763F055573CFC1203106790E648D9A19213A88589F54
603BE18ADB4389A559822986C68DB89F3C4DA86F1EF4A2A929CF7CE8ABC6811E
ABCD71C983ED1CADF268B85A208F1834F68F9EC9834A8D9C9B376D9B539BEDFB
E4BF99F3725FCD1E55EF5123584D5A3508FE86CC6FD9A1DBD506B46995FF253B
71544CA367127BF697A26E8C3183CB829988749CB28DD533DC0E8D85F9DA7CCF
DC8F05C8DCDFF8D1E91426CDA283CDE8BF6A9710ECF31B8DFB66FA8265CEA371
1FC47CD0A0B1342AB1D8CD714C4A4D49D974B885D95905FB83958C19FE475DCA
7075938672E207A41D2EC20B2622E855369903061AA93740C8CC072B11B50918
9CFFEBF01AF41FA14D10AB8343FA0CACB4C976CEF53089CCF507A063FC53F122
4558F4453E60B2368B7868C178B7AEB69B16AD06EF339B64B8E72EFAB4C6B2B0
0EC32124DBF4F6000B8FE97DB7A9D8C8A11E9D34EDB183E4715B09E6B34A0BA7
578B14A1DDD2B86E4865F1E32B00231A4E707A0327796B3BCA0FFA58169FB2DD
AED575F353BCD6CCBB6E6E5C1EDB206222974F0D7417CDE937FC52E7DB6D0BA6
E71CF9EA41C7E5BB38F4B350CE6F8424DD8F8BC6C6C3ABEE1E14C643529096A2
EFD737A46FDF835B796FF627D3CCD32E4B6170DEC3F342CE36CA69164AC47BAD
55F8F6FC83F4332A5DB7FF1D8E64A010AE2B085B0CF46492663803515854C12D
2930A52073DEF41338C5056BA2BE522FE66353CCF073C03D14382EFCBE7C4750
D7693EA2B1441D8F14DCDA09B8F4BF4A0BD9B5A96CE559A7CD3A13B3C0D1F2D8
AF4926BDCF5DCC8C604F07F199D9027D31D7A36B38DE952F20E91B9F1FFF7410
56B0E064DE4B4E824F8D506A27BEB2795772DE4E899B0F39A7F181D4799F1E52
AECE76F5BBB7863DA56E2B8B23EF9B4C99B0D3145A409467FA4A4B8D89A1D65E
0577F470498FBB7BBCBF3B1FE46D4BF402D864759BE81002EDE3E49ADD3B9250
3255CB46F8BFDF529A8153C8A96379C955E7DAA6B5C02B7FDABFE16EFDE6DC49
2539AAEB170FA7E3B80C2E0F3F132ED94495BC1892BB688C4FF28BEFE9079783
E9BC568943DE1A68599E2F3EF62EA528B388FB2E82BFD57ECD3B26C607EFA14C
F65A22F5837D99A00139F38E92650A286628FE70E07414F411C092F1DDB6F6D4
C699DC5543674EA5327A63F01ED14BB1ED9A0BAF084F9DA4EC40CD9E45022A81
934CE5B9973ADF81D7EC9662B89CDEAD07135CBB70B81D3DD53483BE7CFAA665
08B1E7F291D4876A83184F0F93C9A09C65A698455D1EAD5A4007C021434CC2FD
C35A4FDC88E365F40B9D576708B2668C62A82BEA336E043FF1EB660F261482EA
4A2A2642A6FEF852DB888567C1C1717D06FAE23DC20555C129BB7EB31E01EA99
EE04EBE92CB0E8CFAC3F0679CB4C01EBD6C2F7527C2398DF710A00EB561A2B0A
3F8F9980D95C0EE5B5CCDE74AA4CE471B9061156C5A2177FD17519C05FD39389
0C4F538D53F1A8ED1232C45DE53F6CD25B5C822A24D0F7349A71216EF16A2846
9B6B0C248EEC80946CB3D1673E768B7F6B8C3381BF4903A735B7746BB6812FE5
3F334D7B572C44DC36C236272FD4CDFC8923B80543E5C3D9653BB8F2E403EFEB
2E3BD728621B9FDCFDE691BC8BD48F22EBE619598C6FB61C68169211790027B8
7A0F013DBBD87551CE86D4E2DB7607F065FACA01BF64480CC163593109C18991
5E0CE863C36799BA1D959BF559D2BB7593A7BDAC0A231CE71C48F0B53915E2BA
2EC06F3F0DE8FD6109D35395BA3AF8EBDC1AB68631E2F7D960BF58FF45FEA68F
C835EA29E0AAB6D51F94887BCDB2EB6E4D6B51C65182B961927DE098C08A66D1
E33FF54A29BD660FBE0B92F4066AAB60C5346E04792CBD3602D81D2921BCD635
0BB21F35591FC4FFC7BA8F2B0F3D49E68188932A427A048A89BD79455420B15B
31C0EB8C910767C395ECB870DCD8940EF9411AF90632E54F8CCA66519CBD3A85
07938756909EBFFC853DB1552C248BEC00A1ADAE2A4E6C0ACB92C7859D458DA1
CFE3CAAD9CFB2B42E564BF507B0F84DEF708A7F73C5D4F8BFAA6DFF8B239874F
FE2072A731070FFB5095F90CC6BF7DC06CE5CAA36431889458C7A33BF68EEA18
E6E6182F900F8EEE4A82642D30067D42CE88A5A5C7792D8AEB3ED8F0E828F6F4
B08C859857BCE34B91E51A64CD6B75F494B55540E870497A23620FE7F21F1CA6
98A994BBE45E3645AD3979D2F4AA17C624CAB35B85963C6DED23913FA5E1CE0A
CD8EC2D4647F2207E3F017531D8DAF116EDEC126F05A3C85F4400A796D49A47A
F2111C9A3A631B22692E464DE4CD3E76C93397F7998AFD5A64D6903974A3DF9C
59631C5811D0CC79DCC5C2D73915AB87E8E089DF6C6F262794DA9ECC4A8315DB
FF047FEB743C8E21D8BE0C8BDDD550A7161D67A53165065BAD5B108A1E56DCC2
C90C93B34EE07C1F1B354CC7B6A68856A2E0FEAD3C5E4FF0618901DED541348F
0B921090A5DCCFA45FB1A0D7ADD3D4F7BD5C89F7E958B584298DC6830F31E286
33FEE12DFB9D84EDB11E86C86C3FFB00BC4BA7BB309670686CE403C42DD44F3D
393FC69231741CFF7379A6BC4B1526AEC4C2CCD0388DD3706398FE9EEAB4E3C8
B1B8ADC3533D84AFF286AB0086008147E26E133E012707E1522304F88CF97401
EAC80EA9A72CF467A130F8541E62DE447EBEEFC41A55EF59196C6419B2E87559
08E5D4E9FB6134D6205BE2434118077B908451C4ED8341D28935E38C49DB98F2
22CD610262EF74F4A0A389F9BD1A40751EC80E2749400B4D9A8BEA502B531A95
D074A7642D5FEB9C6D8C91D104F883777AD1B0FFD5C8C14C34C3638F1BA73C21
F308890D5342531102115C86F37C3BF3AA1365F5F77E16E2F42FDC0A048D867C
62E534D15F5484349BBF9117411197AA294D99144EF52364BBEF00969C99F867
783AC9A3A8A50D9E4040DC6ADF8979C2C77291AA4C0E9DBAB8682DC2477EFB73
DB13B45BD482CDDFA1C5EB07BDD82E4D6E2C479BC9C761571C27883C79BE00C4
17971289B409496CF89ABDF642B0AD1370154F565AD758CF98841B58DFB7A173
75AEC4D3C5FEB2CA8C4A9CD9CCE9615BD408A9E655FE17716EA26EEC84058D10
C6698B028783A0AD0E31776EDB251F865BFC89DD2F1892B5851D49C190FF085E
5DB40B25F67CA20CCFDE0EE48913BB0C4C1798670F937364F4CC886DDD5D2EBC
0309C89B72CCBACFD2BDF1BCBD36DEA87C0F3238DABA5B834FBE80618AE6B86D
98C55D1C17C82184FB21027AD29903939510D5D5F36E024ED6D8675DC98DDAEA
8A3BA90616F4A2DB7476E55645FCDBF77E1CF2492B6CE35392172BB466072194
CC5B64C0E2572EBC58E0B20D7C10A20D83A8A2962845CCD73FBBE4048E9EED66
5B02D2FC02738AA643093C76DE42931F1935C4FE87E0A222171BFA88E9A408C8
6486F508AE91D3C9E502A7E3F9427B105E3DC1019CCEFFE2AE0F1842E72658AE
BEEC7362FE884CFA489035E269F66EC74B174F8348FA152715FDEC029E99ACD0
FDD15E01BFF9879441A81C8E69BF82322657A7A3062A66B64E9FA0692F632810
E5D8EBF43FA487F765CFF94D31DA9529A573AB5B8F41E41D948A1658FBB77FFB
68C45E372BDD4284937BF4334E2B60E4F435625AE8F1B65B8287D5145728C123
87E3475FCA56738985E05F8F392F6CEA63D989095A7585D9DE03CCC5709F6D80
D60549655D146D0B5E7C3A826262AACD416DA581B49C709E1E2254228AAB22CE
B4665BA14D95B6DC0FD7D6F67C3DA617C40572A0797DD44B4660160C191D7669
3FBCC3D7EBC18FC3D04A3CDEE07DD0C6C68325550E116C2808D59314FFBC4253
9E63E73B35400F979AE4F316D367489982A60E17081226A79E2F281419399B8B
BA2F807284B877669B7EAA6744A332F3326929CCDEC77EAF297B020E4D081ED6
33B333AD5DE21D586E3271C247322995009392FEAE50A7E45234B5433C9ACA3B
074976196D8CB9259E8AB694B075529C82F243C797B05916A84805E0ED6F236F
B36F78B011FC3F42320D56406F4EA32090CB693A77B7B424FACBD9639BD54F80
079A142A8127E3A8DA89E6CDBCCB8CEC46CFE52BAC7791C904430E0C4338D94E
474DF2815E2466CDD4EE917F49BFAA5A39CC5015296603310C9DD01A732CF5EB
97EDBD9DFD153F3E17345BB37447F72B3166941D22FA8D417B7B720013747343
5E8A5E63BA3CC2B9FE0CE0E1DDFABD2DF80C54F4BB00501C2B1F8FDEE7D10FAE
B8C5516B4205E2413A297B174EC79BEFD83434D7E19D419882D6158529DE9423
40A40AB109E0CD90AF1053D13D4A12E5A301140DF0CEFF71864CE548C93B32DB
B74BF074D3C2790A24CA666DAFEE1E583092F447ED7C95A9D4599D76886A1185
3ABF30CAC4DB347AAB3AF60FCE3B84DBF0B40BD3AFFB8159099F1A6206363FA5
831B802F6D3DCDB2B9B17CF2663005AB32CB4B56E7D3FE7BC74D44070FE0C0AB
1A2C4C700E60D7747E73B796AA7C31C873CC0C8011B78B34D70EF94A46D3E65D
13815994D2A5284C05A479A33D56FC9350A21C9EA0419C3A01038CFA68726F67
38CD61EB8003298A7701DB7CB38F2ED4562AD19A252DFDD428242032C7CA9948
BBEB417F2609A9DF71786BEA1BE5B11B8439EA7E20E28F690052139B4DD0E6A7
6E19F959EE20C356B2EB36FA54C1E10F5371EDBC25F463DD1B9615A5BA7BF78B
0EF2AF473E100967B3BC7F3DA6CD62F2004006168806B5822433B6AB575A9553
91399E06D3FAD451B9C70AA6F0F08C860689AF55B3DB5A5BA61F084DEBA51067
7281F4A7664CE350B2E8BC354C51099FB36DFEC5B3B807CB49BEA697BFB6D521
33C01DB1C8FA03946A34BE0B0F5BFA9963DB57DF3998C7DD0F15E8064A1E8DE4
4B6E4780856CA4BF15B974CC4C85B994D274D06072AF378D4ADB1D55140430B4
CF5F88D4EE7196A3F9CF1E65D83DCA1400FBD40708F6E4BDDDA1D9A92910F136
BC21324ABC9DFE67F27EDB8EF8CD274C4BFE40422F2E0BB9D55887087EB16A7C
4510AE0203CD7089ABB528D895F2B278BF4D58B6FF10B75ABA1EB5C901DEF30B
BDB360442177B1265F74F8BA40B95877FC7749050B2198DDB2BD9331ADFD61B9
2773DBE2B6A735F1D70E78BB3AFED49FA2953DD82E32144FAC0FAB9A899FCA04
B176DC6CBE642F1CF953642FEF8925C512C63985F7B6085CFE91C76B74F26F0C
33AFDEE50CDB491038E4DC4D7331E2FCB7F2FD2288A2E7D6F9963ECAA224C79C
AA19CF631421746D66E67760A2F921F59D19BDDEEF40C7CCE758A9CD255EB912
B08ADD79039198C56CEF7755C15D6D996306D2DD1A859D45F35E20C555F15262
A34F1327EAB549F645388FBEDEDCDA487591409837377DB836CD3774CA4E3DF4
B2F86091E9837DBCBF1EF0DD08E7962D2F67F5AF5AB8EA2ECBDE9EE451A9E6F7
5014B0E1FE061BC210EC629F2F9B289307D7E0792A4CEFE37E82A4BF13B3861B
BF4412E86318D3248E4C81735569F390804B9039E21FD8D8D424EAB01E6C260C
81537A59A85B23EA3E262F564A13C7441651605B2D5381F280DF53507CDCA536
774193AEA82ACD2A9A9DDF9FFDF9D1C5C618FC155F34FDD9BB4E9297268BCC26
A7E5AF81266D1CEB31659D062FDA76E934BC11629DBF2F5BEC97D6D55128C27A
9F6318FE6E33A9C01F7F20EF40E74FCF7E33F43BA2420EA5C1225818895EBD57
8CEBE2925DDAAC89BE224D2EB017F6535C0E67D552DDC02D716A992080DFB993
996691B498AE53960935A39883B02AEC078CCEEB60E0BF5F943879808FE6A7CC
D0D3065BC250F22973BEC2CB22F509FB37814519E7295FD92EF783CB70A1E4B1
1F7250EEA59339D6F9DF61FE9D0529CC929BA528F3B7C3E84088C207F740D2E5
3B54ECB8068080F345DEB165B896B7DAAB84AEBE4A41F4599F4FA0CCC8B4EF73
7C94D84A268FBE788A4214868F32CB9145897DF10004E1688EA966E7EA753F47
446D3A8DD702E0612F340370DCF5AC5EA5F02301D5189E59631C5811D0CC7974
1908CB5E8E36D7FE4E2BA32C682ECF9CF98AE11A8BC2DCFB5253BD324ACE44CA
6976245A1AC93709FA8238095EBFC7CAE1C7EA422C79DF284BE344AF36103A63
A5CD102871423B2AC2D5DD1BAC13981F4A2420BAEAA1352C5A3FB1413877D09E
053A625AC519E32444187F8348CA34FE035E38918C0C068949ACFC71131694C4
053110C50F718A9CFC8B85B5CBCEFC2EFD720E7C90E66BAED373E15D7B7FF1E0
02BB180E99068FED3C00EB8C7C4DFE6A43A2927652F9758D0B2659FEB56122BB
E0260ADD00D1B8B8CEBA4594DF60A6CBAB5DF37F3A5A479FD6B64BF03A46E1CF
ED12E62D9C3B543AFACFCC04BDCEC8D1DC9E59CAAD4E68E1AC9D45697D9C0C89
9BBDEF6F9A6AA2A9272A0162DF69E65809B7A1A5C1D36F9B3B362AEBB5B62251
91D5225DC53E1F419F2ECA8BB1AFFB2B9C410B6CCA5F4E110C8C29153F3BBD14
EB50807711E2BC6831FC25297B180D63FE50A41E672BBA3E59F056B3705BCF23
1608A7228424A16891B61CD026ADF9E032064DAE47146D530A5FB2D8FD027564
C90AEB995D7B56EE4DF3CC260EE18CFEECAA59CCF652F4B3C0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra un)
@start /Fa 255[732{ enclmmathsy ReEncodeFont }1 885.568
/LMMathSymbols8-Regular rf /Fb 204[406 406 406 49[{
 enclmrm ReEncodeFont }3 664.176 /LMRoman6-Regular rf
/Fc 184[869 5[830 15[553 2[307 46[{ enclmec ReEncodeFont }4
1106.96 /LMRoman10-Regular rf /Fd 160[909 45[606 1[606
47[{ enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular
rf /Fe 202[470 470 470 470 470 5[732 43[{ enclmrm ReEncodeFont }6
885.568 /LMRoman8-Regular rf /Ff 152[448 4[403 500 71[540
25[{ enclmmathit ReEncodeFont }4 885.568 /LMMathItalic8-Regular
rf /Fg 143[1107 1[664 3[369 2[664 664 47[0 3[886 48[369
1033{ enclmmathsy ReEncodeFont }9 1328.35 /LMMathSymbols10-Regular
rf /Fh 203[993 52[{}1 1328.35 /wasy10 rf /Fi 135[739
18[603 2[553 683 19[1258 14[1012 1[1012 361 33[738 25[{
 enclmmathit ReEncodeFont }9 1328.35 /LMMathItalic12-Regular
rf /Fj 162[361 1[361 29[1012 1[361 1[650 650 1[650 650
650 650 650 650 650 48[{ enclmrm ReEncodeFont }13 1328.35
/LMRoman12-Regular rf /Fk 165[886 7[959 1033 2[959 10[959
67[{}5 1328.35 /MSBM10 rf /Fl 650 2[723 5[650 17[650
7[975 97[578 1[686 939 686 723 506 513 506 1[723 650
723 1084 361 686 397 361 723 650 397 578 723 578 723
650 6[795 2[1336 1[975 939 723 957 1012 885 1[975 1192
1[1011 668 2[1021 849 885 993 1[921 975 1[614 3[361 361
650 650 650 650 650 650 650 650 650 650 650 361 434 361
2[506 506 6[361 5[759 27[{ enclmec ReEncodeFont }68 1328.35
/LMRoman12-Regular rf /Fm 3[1196 129[956 3[1136 1196
837 849 879 1[1196 1076 1196 1793 598 2[598 1196 1076
658 982 1[956 1196 1046 6[1315 5[1497 1[1605 1[1470 1[1682
2041 1[1685 1[801 1682 1691 1353 1412 1[1554 1530 1625
7[1076 1076 1076 1076 1076 1076 1076 1076 1076 1076 1076
598 717 45[{ enclmec ReEncodeFont }48 1912.83 /LMRoman12-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fm(A)-60
b(G)718 b(1.1)f(-)h(1)f(Rationale)f(Zahlen)h(-)g(MC)h(-)g(BIFIE)p
0 TeXcolorgray -741 4800 a Fl(1.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(sind)g(f\374nf)h(Zahlen.)921 7346
y(Kreuze)f(diejenigen)h(b)36 b(eiden)433 b(Zahlen)h(an,)f(die)h(aus)f
(der)h(Zahlenmenge)f Fk(Q)h Fl(sind!)p 19906 8313 6573
45 v 19906 11297 45 2985 v 20614 10094 a Fj(0)p Fi(;)p
Fj(4)p 24069 11297 V 1 0 0 TeXcolorrgb 24777 10137 a
Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
26434 11297 V 19906 11341 6573 45 v 19906 14613 45 3272
v 20614 12393 a Fg(p)p 21721 12393 1684 54 v 1028 x(\000)p
Fj(8)p 24069 14613 45 3272 v 26434 14613 V 19906 14657
6573 45 v 19906 17909 45 3253 v 20747 15983 a Ff(\031)p
20747 16196 573 45 v 20798 16964 a Fe(5)p 24069 17909
45 3253 v 26434 17909 V 19906 17953 6573 45 v 19906 20680
45 2727 v 20614 19735 a Fj(0)p 24069 20680 V 1 0 0 TeXcolorrgb
24777 19649 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 26434 20680 V 19906 20724 6573 45 v 19906
23666 45 2943 v 20614 22722 a Fi(e)21217 22239 y Fe(2)p
24069 23666 V 26434 23666 V 19906 23711 6573 45 v 47992
4800 a Fd(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fc(A)-31
b(G)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 27739 54804 45 v -2331 33040 a Fm(A)-60
b(G)718 b(1.1)f(-)h(2)f(Rationale)f(Zahlen)h(-)g(MC)h(-)g(BIFIE)p
0 TeXcolorgray -741 36348 a Fl(2.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(sind)g(folgende)h(Zahlen:)g Fg(\000)19879
35825 y Fe(1)p 19879 36038 471 45 v 19879 36806 a(2)20482
36348 y Fl(;)21410 35825 y Ff(\031)p 21410 36038 573
45 v 21461 36806 a Fe(5)22115 36348 y Fl(;)g Fj(3)p Fi(;)p
24142 35378 651 45 v 221 w Fj(5)q Fl(;)25588 35264 y
Fg(p)p 26695 35264 651 54 v 1084 x Fj(3)p Fl(;)g Fg(\000)29173
35264 y(p)p 30280 35264 1301 54 v 1084 x Fj(16)q Fl(.)921
38893 y(Kreuze)f(diejenige\(n\))h(Zahl\(en\))f(an,)h(die)f(rational)i
(ist/sind!)p 19580 39934 7223 45 v 19580 43375 45 3442
v 20289 41972 a Fg(\000)21455 41449 y Fe(1)p 21455 41662
471 45 v 21455 42430 a(2)p 24394 43375 45 3442 v 1 0 0
TeXcolorrgb 25102 41986 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 26759 43375 V 19580 43419
7223 45 v 19580 46671 45 3253 v 20422 44746 a Ff(\031)p
20422 44959 573 45 v 20473 45727 a Fe(5)p 24394 46671
45 3253 v 26759 46671 V 19580 46716 7223 45 v 19580 49922
45 3206 v 20289 48719 a Fj(3)p Fi(;)p 21521 47749 651
45 v 221 w Fj(5)p 24394 49922 45 3206 v 1 0 0 TeXcolorrgb
25102 48651 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 26759 49922 V 19580 49966 7223 45 v 19580
53237 45 3272 v 20289 51017 a Fg(p)p 21396 51017 651
54 v 1084 x Fj(3)p 24394 53237 45 3272 v 26759 53237
V 19580 53282 7223 45 v 19580 56553 45 3272 v 20289 55416
a Fg(\000)21322 54333 y(p)p 22429 54333 1301 54 v 1083
x Fj(16)p 24394 56553 45 3272 v 1 0 0 TeXcolorrgb 25102
55249 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 26759 56553 V 19580 56597 7223 45 v 47992
36348 a Fd(___/1)p 1 0 0 TeXcolorrgb 47990 38340 a Fc(A)-31
b(G)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 60625 54804 45 v 0 TeXcolorgray 24746
81281 a Fl(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(A)-60 b(G)718 b(1.1)f(-)h(3)f(Ganze)h
(Zahlen)e(-)h(MC)h(-)g(BIFIE)p 0 TeXcolorgray -741 4800
a Fl(3.)p 0 TeXcolorgray 651 w(Kreuze)433 b(diejenige\(n\))h
(Zahl\(en\))f(an,)h(die)f(aus)h(der)f(Zahlenmenge)g Fk(Z)g
Fl(ist/sind!)p 18560 5841 9264 45 v 18560 9283 45 3442
v 19402 7357 a Fe(25)p 19402 7570 941 45 v 19637 8338
a(5)p 25414 9283 45 3442 v 1 0 0 TeXcolorrgb 26122 7894
a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
27779 9283 V 18560 9327 9264 45 v 18560 12598 45 3272
v 19269 11461 a Fg(\000)20671 10863 y Fb(3)20339 10378
y Fg(p)p 21446 10378 651 54 v 1083 x Fj(8)p 25414 12598
45 3272 v 1 0 0 TeXcolorrgb 26122 11295 a Fh(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 27779 12598
V 18560 12642 9264 45 v 18560 15848 45 3206 v 19269 14645
a Fj(0)p Fi(;)p 20501 13676 651 45 v 221 w Fj(4)p 25414
15848 45 3206 v 27779 15848 V 18560 15893 9264 45 v 18560
19093 45 3201 v 19269 17890 a(1)p Fi(;)p Fj(4)296 b Fg(\001)f
Fj(10)23190 17408 y Fa(\000)p Fe(3)p 25414 19093 V 27779
19093 V 18560 19138 9264 45 v 18560 22338 45 3201 v 19269
21135 a Fg(\000)p Fj(1)p Fi(;)p Fj(4)h Fg(\001)f Fj(10)24223
20653 y Fe(3)p 25414 22338 V 1 0 0 TeXcolorrgb 26122
21070 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 27779 22338 V 18560 22383 9264 45 v 47992
4800 a Fd(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fc(A)-31
b(G)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 26411 54804 45 v -2331 31712 a Fm(A)-60
b(G)718 b(1.1)f(-)h(4)f(A)-60 b(ussagen)716 b(\374b)60
b(er)716 b(Zahlen)g(-)i(MC)g(-)f(BIFIE)p 0 TeXcolorgray
-741 35020 a Fl(4.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(sind)g(A)-36 b(ussagen)434 b(\374b)36 b(er)432 b(Zahlen.)855
37565 y(W)-108 b(elc)-36 b(he)512 b(der)g(im)g(F)-108
b(olgenden)512 b(angef\374hrten)g(A)-36 b(ussagen)512
b(gelten?)h(Kreuze)f(die)h(b)36 b(eiden)511 b(zu-)921
39557 y(tre\033enden)432 b(A)-36 b(ussagen)433 b(an.)p
9781 40524 26822 45 v 9781 43328 45 2805 v 10489 42384
a(Jede)h(reelle)g(Zahl)g(ist)f(eine)h(irrationale)h(Zahl.)p
34193 43328 V 36559 43328 V 9781 43373 26822 45 v 9781
46436 45 3064 v 10489 45233 a(Jede)f(reelle)g(Zahl)g(ist)f(eine)h(k)-36
b(omplexe)435 b(Zahl.)p 34193 46436 V 1 0 0 TeXcolorrgb
34902 45236 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 36559 46436 V 9781 46480 26822 45 v 9781
49543 45 3064 v 10489 48340 a Fl(Jede)f(rationale)g(Zahl)g(ist)g(eine)f
(ganze)h(Zahl.)p 34193 49543 V 36559 49543 V 9781 49588
26822 45 v 9781 52651 45 3064 v 10489 51448 a(Jede)g(ganze)g(Zahl)f
(ist)h(eine)g(nat\374rlic)-36 b(he)433 b(Zahl.)p 34193
52651 V 36559 52651 V 9781 52695 26822 45 v 9781 55500
45 2805 v 10489 54555 a(Jede)h(nat\374rlic)-36 b(he)433
b(Zahl)g(ist)h(eine)g(reelle)g(Zahl.)p 34193 55500 V
1 0 0 TeXcolorrgb 34902 54429 a Fh(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 36559 55500 V 9781 55544
26822 45 v 47992 35020 a Fd(___/1)p 1 0 0 TeXcolorrgb
47990 37012 a Fc(A)-31 b(G)369 b(1.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 59572 54804 45
v 0 TeXcolorgray 24746 81281 a Fl(2)p 0 TeXcolorgray
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(A)-60 b(G)924 b(1.1)g(-)g(5)f(Menge)g(v)
-60 b(on)923 b(Zahlen)g(-)h(MC)g(-)g(Matura)f(2015/16)h(-)-2331
4622 y(Haupttermin)p 0 TeXcolorgray -741 7929 a Fl(5.)p
0 TeXcolorgray 651 w(Die)434 b(Menge)g Fi(M)508 b Fj(=)368
b Fg(f)p Fi(x)i Fg(2)e Fk(Q)221 b Fg(j)g Fj(2)370 b Fi(<)f(x)g(<)g
Fj(5)p Fg(g)434 b Fl(ist)g(eine)f(T)-108 b(eilmenge)434
b(der)f(rationalen)i(Zahlen.)921 12466 y(Kreuze)e(die)h(b)36
b(eiden)433 b(zutre\033enden)e(A)-36 b(ussagen)434 b(an.)p
1062 13433 44260 45 v 1062 16496 45 3064 v 1770 15293
a(4,99)h(ist)f(die)g(gr\366\377te)g(Zahl,)g(die)f(zur)g(Menge)h
Fi(M)572 b Fl(geh\366rt.)p 42912 16496 V 45277 16496
V 1062 16540 44260 45 v 1062 19603 45 3064 v 1770 18400
a(Es)408 b(gibt)f(unendlic)-36 b(h)406 b(viele)j(Zahlen)e(in)g(der)g
(Menge)h Fi(M)139 b Fl(,)407 b(die)h(kleiner)g(als)g(2,1)g(sind.)p
42912 19603 V 1 0 0 TeXcolorrgb 43621 18404 a Fh(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277
19603 V 1062 19648 44260 45 v 1062 24445 45 4797 v 1770
21508 a Fl(Jede)434 b(reelle)g(Zahl,)g(die)g(gr\366\377er)g(als)g(2)g
(und)e(kleiner)j(als)f(5)g(ist,)g(ist)f(in)h(der)f(Menge)1770
23500 y Fi(M)573 b Fl(en)-36 b(thalten.)p 42912 24445
V 45277 24445 V 1062 24489 44260 45 v 1062 29544 45 5056
v 1770 26349 a(Alle)425 b(Elemen)-36 b(te)423 b(der)g(Menge)h(M)g(k)-36
b(\366nnen)423 b(in)h(der)f(F)-108 b(orm)29886 25826
y Ff(a)p 29886 26039 500 45 v 29935 26807 a(b)30942 26349
y Fl(gesc)-36 b(hrieb)36 b(en)423 b(w)-36 b(erden,)1770
28341 y(w)g(ob)36 b(ei)435 b Fi(a)e Fl(und)f Fi(b)i Fl(ganze)g(Zahlen)f
(sind)g(und)g Fi(b)369 b Fg(6)p Fj(=)g(0)433 b Fl(ist.)p
42912 29544 45 5056 v 1 0 0 TeXcolorrgb 43621 27348 a
Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 29544 V 1062 29588 44260 45 v 1062 32651 45 3064
v 1770 31448 a Fl(Die)297 b(Menge)e Fi(M)435 b Fl(en)-36
b(th\344lt)295 b(k)-36 b(eine)296 b(Zahlen)f(aus)h(der)f(Menge)h(der)f
(k)-36 b(omplexen)296 b(Zahlen.)p 42912 32651 V 45277
32651 V 1062 32695 44260 45 v 47992 7929 a Fd(___/1)p
1 0 0 TeXcolorrgb 47990 9921 a Fc(A)-31 b(G)369 b(1.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
36724 54804 45 v -2331 42025 a Fm(A)-60 b(G)718 b(1.1)f(-)h(6)f
(Zahlenmengen)e(-)j(MC)g(-)f(MK)p 0 TeXcolorgray -741
45332 a Fl(6.)p 0 TeXcolorgray 651 w(W)-108 b(elc)-36
b(he)663 b(der)f(un)-36 b(ten)662 b(aufgelisteten)h(Zahlenmengen)g(en)
-36 b(tspric)g(h)g(t)661 b(jener)i(Zahlenmenge:)921 47324
y Fi(M)508 b Fj(=)369 b Fg(f)p Fi(x)g Fg(2)f Fk(N)8053
47523 y Ff(g)8810 47324 y Fg(j)221 b Fj(2)370 b Fi(<)e(x)i(<)e
Fj(5)p Fg(g)q Fl(?)921 49870 y(Kreuze)433 b(die)h(en)-36
b(tsprec)g(hende\(n\))430 b(Zahlenmenge\(n\))j(an.)p
18794 52570 8796 45 v 18794 55788 45 3219 v 19502 54511
a Fg(f)q Fj(2)p Fi(;)p Fj(3)p Fi(;)p Fj(4)p Fi(;)p Fj(5)p
Fg(g)p 25180 55788 V 27545 55788 V 18794 55833 8796 45
v 18794 59051 45 3219 v 19502 57774 a(f)q Fj(3)p Fi(;)p
Fj(4)p Fg(g)p 25180 59051 V 27545 59051 V 18794 59095
8796 45 v 18794 62313 45 3219 v 19502 61036 a(f)q Fj(4)p
Fg(g)p 25180 62313 V 1 0 0 TeXcolorrgb 4408 w Fh(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 27545
62313 V 18794 62357 8796 45 v 18794 65575 45 3219 v 19502
64298 a Fg(f)q Fj(3)p Fg(g)p 25180 65575 V 27545 65575
V 18794 65620 8796 45 v 18794 68838 45 3219 v 19502 67561
a(f)q Fj(3)p Fi(;)p Fj(4)p Fi(;)p Fj(5)p Fg(g)p 25180
68838 V 27545 68838 V 18794 68882 8796 45 v 47992 45332
a Fd(___/1)p 1 0 0 TeXcolorrgb 47990 47324 a Fc(A)-31
b(G)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 72910 54804 45 v 0 TeXcolorgray 24746
81281 a Fl(3)p 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(A)-60 b(G)718 b(1.1)f(-)h(7)f(Anetas)g
(Behauptungen)c(-)718 b(MC)g(-)f(MK)p 0 TeXcolorgray
-741 4800 a Fl(7.)p 0 TeXcolorgray 651 w(Sherif)669 b(und)g(Aneta)g
(hab)36 b(en)670 b(b)36 b(eim)669 b(\334b)36 b(en)669
b(f\374r)h(die)f(Sc)-36 b(h)g(ularb)36 b(eit)669 b(f\374nf)h
(Behauptungen)921 6792 y(\374b)36 b(er)522 b(die)h(v)-36
b(ersc)g(hiedenen)521 b(Zahlenmengen)h(aufgestellt,)j(leider)e(sind)f
(nic)-36 b(h)g(t)522 b(alle)h(ric)-36 b(h)g(tig.)921
8784 y(Kreuze)433 b(die)h(b)36 b(eiden)433 b(ric)-36
b(h)g(tigen)433 b(A)-36 b(ussagen)434 b(an.)p 2179 11485
42026 45 v 2179 14548 45 3064 v 2888 13345 a(Jede)f(nat\374rlic)-36
b(he)433 b(Zahl)h(kann)f(auc)-36 b(h)433 b(als)i(Bruc)-36
b(hzahl)433 b(dargestellt)h(w)-36 b(erden.)p 41795 14548
V 1 0 0 TeXcolorrgb 42504 13348 a Fh(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 44160 14548 V 2179 14592
42026 45 v 2179 17655 45 3064 v 2888 16452 a Fl(Jede)433
b(Dezimalzahl)i(kann)f(auc)-36 b(h)433 b(als)h(Bruc)-36
b(hzahl)433 b(dargestellt)h(w)-36 b(erden.)p 41795 17655
V 44160 17655 V 2179 17699 42026 45 v 2179 20504 45 2805
v 2888 19559 a(Die)434 b(Zahl)g Fi(\031)481 b Fl(ist)433
b(eine)h(rationale)g(Zahl.)p 41795 20504 V 44160 20504
V 2179 20549 42026 45 v 2179 23612 45 3064 v 2888 22408
a(Jede)f(nic)-36 b(h)g(tnegativ)g(e)434 b(ganze)g(Zahl)f(ist)h(auc)-36
b(h)433 b(eine)h(nat\374rlic)-36 b(he)433 b(Zahl.)p 41795
23612 V 1 0 0 TeXcolorrgb 42504 22412 a Fh(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 44160 23612
V 2179 23656 42026 45 v 2179 26719 45 3064 v 2888 25516
a Fl(Die)h(rationalen)g(Zahlen)f(b)36 b(estehen)433 b(aussc)-36
b(hlie\377lic)g(h)434 b(aus)g(p)36 b(ositiv)-36 b(en)434
b(Zahlen.)p 41795 26719 V 44160 26719 V 2179 26763 42026
45 v 47992 4800 a Fd(___/1)p 1 0 0 TeXcolorrgb 47990
6792 a Fc(A)-31 b(G)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray -2331 30791 54804 45 v -2331
36093 a Fm(A)-60 b(G)718 b(1.1)f(-)h(8)f(Abgesc)-60 b(hlossene)715
b(Zahlenmengen)h(-)h(MC)h(-)g(MK)p 0 TeXcolorgray -741
39400 a Fl(8.)p 0 TeXcolorgray 651 w(Eine)735 b(Zahlenmenge)g(M)g
(hei\377t)g(abgesc)-36 b(hlossen)736 b(b)36 b(ez\374glic)-36
b(h)735 b(der)f(A)-36 b(ddition)735 b(\(Multipli-)921
41392 y(kation\),)648 b(w)-36 b(enn)647 b(die)g(Summe)g(\(das)g(Pro)36
b(dukt\))646 b(zw)-36 b(eier)648 b(Zahlen)f(aus)g(M)g(wieder)g(in)g(M)
921 43384 y(liegt.)389 b(W)-108 b(elc)-36 b(he)387 b(der)f(folgenden)i
(Mengen)e(sind)h(abgesc)-36 b(hlossen)388 b(gegen)-36
b(\374b)36 b(er)386 b(der)h(A)-36 b(ddition?)921 45376
y(Kreuze)433 b(die)h(en)-36 b(tsprec)g(hende\(n\))430
b(Zahlenmenge\(n\))j(an.)p 19994 48076 6396 45 v 19994
50991 45 2915 v 20702 50046 a Fk(Z)21588 49564 y Fe(+)p
23980 50991 V 1 0 0 TeXcolorrgb 24689 49866 a Fh(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 26345
50991 V 19994 51035 6396 45 v 19994 54062 45 3027 v 20702
52895 a Fk(Q)p 23980 54062 V 1 0 0 TeXcolorrgb 24689
52881 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 26345 54062 V 19994 54106 6396 45 v 19994
57282 45 3177 v 20702 55966 a Fk(N)21661 56165 y Ff(g)p
23980 57282 V 1 0 0 TeXcolorrgb 24689 56026 a Fh(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 26345
57282 V 19994 57326 6396 45 v 19994 60241 45 2915 v 20702
59296 a Fk(R)21661 58814 y Fe(+)p 23980 60241 V 1 0 0
TeXcolorrgb 24689 59116 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 26345 60241 V 19994 60285
6396 45 v 19994 63503 45 3219 v 20702 62226 a Fj([)8
b(0;)221 b(1])p 23980 63503 V 26345 63503 V 19994 63548
6396 45 v 47992 39400 a Fd(___/1)p 1 0 0 TeXcolorrgb
47990 41392 a Fc(A)-31 b(G)369 b(1.1)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 67576 54804 45
v 0 TeXcolorgray 24746 81281 a Fl(4)p 0 TeXcolorgray
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fm(A)-60 b(G)479 b(1.1)f(-)g(9)g(Eigensc)-60
b(haften)477 b(v)-60 b(on)478 b(Zahlen)f(-)h(MC)h(-)f(Matura)g(2015/16)
-2617 4622 y(-)718 b(Neb)60 b(en)-60 b(termin)716 b(1)p
0 TeXcolorgray -741 7929 a Fl(9.)p 0 TeXcolorgray 651
w(Nac)-36 b(hstehend)432 b(sind)h(A)-36 b(ussagen)434
b(\374b)36 b(er)433 b(Zahlen)g(und)f(Zahlenmengen)h(angef\374hrt.)921
12466 y(Kreuze)g(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36
b(ussagen)434 b(an.)p 1062 13433 44260 45 v 1062 16496
45 3064 v 1770 15293 a(Die)h(Quadrat)-36 b(wurzel)433
b(jeder)g(nat\374rlic)-36 b(hen)433 b(Zahl)g(ist)h(eine)g(irrationale)g
(Zahl)p 42912 16496 V 45277 16496 V 1062 16540 44260
45 v 1062 21669 45 5129 v 1770 18400 a(Jede)g(nat\374rlic)-36
b(he)433 b(Zahl)h(kann)f(als)h(Bruc)-36 b(h)433 b(in)h(der)f(F)-108
b(orm)30145 17877 y Ff(a)p 30145 18090 500 45 v 30194
18858 a(b)31212 18400 y Fl(mit)433 b Fi(a)369 b Fg(2)g
Fk(Z)433 b Fl(und)1770 20392 y Fi(b)369 b Fg(2)g Fk(Z)p
Fg(nf)p Fj(0)p Fg(g)434 b Fl(dargestellt)g(w)-36 b(erden.)p
42912 21669 45 5129 v 1 0 0 TeXcolorrgb 43621 19437 a
Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
45277 21669 V 1062 21714 44260 45 v 1062 24518 45 2805
v 1770 23573 a Fl(Das)435 b(Pro)36 b(dukt)433 b(zw)-36
b(eier)434 b(rationalen)g(Zahlen)g(kann)f(eine)h(nat\374rlic)-36
b(he)433 b(Zahl)g(sein.)p 42912 24518 V 1 0 0 TeXcolorrgb
43621 23448 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 45277 24518 V 1062 24563 44260 45 v 1062
29699 45 5137 v 1770 26504 a Fl(Jede)390 b(reelle)g(Zahl)g(kann)g(als)g
(Bruc)-36 b(h)389 b(in)h(der)f(F)-108 b(orm)27041 25981
y Ff(a)p 27041 26194 500 45 v 27090 26962 a(b)28063 26504
y Fl(mit)390 b Fi(a)369 b Fg(2)f Fk(Z)390 b Fl(und)e
Fi(b)369 b Fg(2)g Fk(Z)p Fg(nf)p Fj(0)p Fg(g)1770 28496
y Fl(dargestellt)435 b(w)-36 b(erden.)p 42912 29699 45
5137 v 45277 29699 V 1062 29743 44260 45 v 1062 32806
45 3064 v 1770 31603 a(Es)434 b(gibt)g(eine)f(kleinste)h(ganze)g(Zahl.)
p 42912 32806 V 45277 32806 V 1062 32851 44260 45 v 47992
7929 a Fd(___/1)p 1 0 0 TeXcolorrgb 47990 9921 a Fc(A)-31
b(G)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 36879 54804 45 v -2331 42307 a Fm(A)-60
b(G)479 b(1.1)f(-)g(10)g(P)-60 b(ositiv)g(e)478 b(rationale)f(Zahlen)g
(-)i(MC)f(-)g(Matura)g(2013/14)-2331 45329 y(Haupttermin)p
0 TeXcolorgray -1391 48636 a Fl(10.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(ist)h(die)f(Zahlenmenge)g Fk(Q)19059
48154 y Fe(+)19847 48636 y Fl(.)921 51182 y(Kreuze)g(jene)h(b)36
b(eiden)433 b(Zahlen)g(an,)h(die)g(Elemen)-36 b(te)433
b(dieser)g(Zahlenmenge)h(sind!)p 18235 54141 9914 45
v 18235 57412 45 3272 v 18944 55192 a Fg(p)p 20051 55192
651 54 v 1083 x Fj(5)p 25739 57412 45 3272 v 28104 57412
V 18235 57456 9914 45 v 18235 60621 45 3166 v 18944 59418
a(0)p Fi(;)p Fj(9)296 b Fg(\001)f Fj(10)22865 58936 y
Fa(\000)23653 59418 y Fj(3)p 25739 60621 V 1 0 0 TeXcolorrgb
26448 59371 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 28104 60621 V 18235 60665 9914 45 v 18235
63937 45 3272 v 18944 61717 a Fg(p)p 20051 61717 2313
54 v 954 x Fj(0)p Fi(;)p Fj(01)p 25739 63937 45 3272
v 1 0 0 TeXcolorrgb 26448 62633 a Fh(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 28104 63937 V 18235
63981 9914 45 v 18235 67233 45 3253 v 19076 65307 a Ff(\031)p
19076 65520 573 45 v 19127 66288 a Fe(4)p 25739 67233
45 3253 v 28104 67233 V 18235 67277 9914 45 v 18235 70478
45 3201 v 18944 69275 a Fg(\000)p Fj(1)p Fi(;)p Fj(41)h
Fg(\001)f Fj(10)24548 68793 y Fe(3)p 25739 70478 V 28104
70478 V 18235 70522 9914 45 v 47992 48636 a Fd(___/1)p
1 0 0 TeXcolorrgb 47990 50628 a Fc(A)-31 b(G)369 b(1.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
74551 54804 45 v 0 TeXcolorgray 24746 81281 a Fl(5)p
0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fm(A)-60 b(G)804 b(1.1)f(-)g(11)g(A)-60
b(ussagen)802 b(\374b)60 b(er)801 b(Zahlenmengen)g(-)j(MC-)g(Matura)
-2385 4515 y(2013/14)718 b(1.)f(Neb)60 b(en)-60 b(termin)p
0 TeXcolorgray -1391 7823 a Fl(11.)p 0 TeXcolorgray 651
w(Un)-36 b(tenstehend)531 b(sind)j(f\374nf)f(A)-36 b(ussagen)534
b(\374b)36 b(er)533 b(Zahlen)g(aus)h(den)f(Zahlenmengen)g
Fk(N)p Fi(;)221 b Fk(Z)p Fi(;)g Fk(Q)921 9815 y Fl(und)432
b Fk(R)i Fl(angef\374hrt.)921 12360 y(Kreuze)f(die)h(b)36
b(eiden)433 b(A)-36 b(ussagen)433 b(an,)h(die)g(k)-36
b(orrekt)434 b(sind!)p 1062 15319 44260 45 v 1062 20115
45 4797 v 1770 17179 a(Reelle)h(Zahlen)e(mit)h(p)36 b(erio)g(disc)-36
b(her)433 b(o)36 b(der)434 b(endlic)-36 b(her)433 b(Dezimaldarstellung)
h(sind)1770 19170 y(rationale)h(Zahlen.)p 42912 20115
V 1 0 0 TeXcolorrgb 43621 18049 a Fh(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 20115 V 1062 20160
44260 45 v 1062 22964 45 2805 v 1770 22020 a Fl(Die)g(Di\033erenz)e(zw)
-36 b(eier)434 b(nat\374rlic)-36 b(her)433 b(Zahlen)h(ist)f(stets)h
(eine)f(nat\374rlic)-36 b(he)433 b(Zahl.)p 42912 22964
V 45277 22964 V 1062 23009 44260 45 v 1062 27948 45 4940
v 1770 25011 a(Alle)i(W)-108 b(urzelausdr\374c)-36 b(k)g(e)432
b(der)h(F)-108 b(orm)20149 24060 y Fg(p)p 21255 24060
683 54 v 21255 25011 a Fi(a)434 b Fl(f\374r)f Fi(a)369
b Fg(2)g Fk(R)433 b Fl(und)g Fi(a)369 b(>)f Fj(0)434
b Fl(sind)f(stets)1770 27003 y(irrationale)i(Zahlen.)p
42912 27948 45 4940 v 45277 27948 V 1062 27992 44260
45 v 1062 32796 45 4805 v 1770 29860 a(Zwisc)-36 b(hen)434
b(zw)-36 b(ei)434 b(v)-36 b(ersc)g(hiedenen)433 b(rationalen)h(Zahlen)f
Fi(a;)221 b(b)434 b Fl(existiert)g(stets)g(eine)1770
31851 y(w)-36 b(eitere)434 b(rationale)h(Zahl.)p 42912
32796 V 1 0 0 TeXcolorrgb 43621 30726 a Fh(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45277 32796
V 1062 32841 44260 45 v 1062 37637 45 4797 v 1770 34701
a Fl(Der)337 b(Quotien)-36 b(t)335 b(zw)-36 b(eier)337
b(negativ)-36 b(er)337 b(ganzer)f(Zahlen)g(ist)g(stets)g(eine)h(p)36
b(ositiv)-36 b(e)337 b(ganze)1770 36692 y(Zahl.)p 42912
37637 V 45277 37637 V 1062 37682 44260 45 v 47992 7823
a Fd(___/1)p 1 0 0 TeXcolorrgb 47990 9815 a Fc(A)-31
b(G)369 b(1.1)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 41710 54804 45 v -2331 47138 a Fm(A)-60
b(G)591 b(1.1)f(-)h(12)g(Ganze)g(Zahlen)e(-)i(MC)g(-)g(Matura)f
(2016/17)g(-)h(Haupt-)-2331 50160 y(termin)p 0 TeXcolorgray
-1391 53468 a Fl(12.)p 0 TeXcolorgray 651 w(Es)434 b(sei)f
Fi(a)h Fl(eine)f(p)36 b(ositiv)-36 b(e)435 b(ganze)f(Zahl.)855
58005 y(W)-108 b(elc)-36 b(he)401 b(der)g(nac)-36 b(hstehenden)400
b(A)-36 b(usdr\374c)g(k)g(e)400 b(ergeb)36 b(en)401 b(f\374r)h
Fi(a)369 b Fg(2)f Fk(Z)32447 57523 y Fe(+)33635 58005
y Fl(stets)402 b(eine)f(ganze)h(Zahl?)921 60550 y(Kreuze)433
b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(A)-36 b(usdr\374c)g(k)g(e)
433 b(an.)p 20155 61259 6075 45 v 20155 64201 45 2943
v 20863 63256 a Fi(a)21546 62774 y Fa(\000)p Fe(1)p 23820
64201 V 26185 64201 V 20155 64246 6075 45 v 20155 67188
45 2943 v 20863 66243 a Fi(a)21546 65761 y Fe(2)p 23820
67188 V 1 0 0 TeXcolorrgb 24528 66049 a Fh(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 26185 67188
V 20155 67232 6075 45 v 20155 70402 45 3171 v 20863 69458
a Fi(a)21679 68605 y Fb(1)p 21679 68768 406 45 v 21679
69315 a(2)p 23820 70402 45 3171 v 26185 70402 V 20155
70447 6075 45 v 20155 73173 45 2727 v 20863 72228 a Fj(3)296
b Fg(\001)f Fi(a)p 23820 73173 V 1 0 0 TeXcolorrgb 24528
72142 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 26185 73173 V 20155 73217 6075 45 v 20155
76469 45 3253 v 20996 74543 a Ff(a)p 20996 74756 500
45 v 21011 75525 a Fe(2)p 23820 76469 45 3253 v 26185
76469 V 20155 76514 6075 45 v 47992 53468 a Fd(___/1)p
1 0 0 TeXcolorrgb 47990 55460 a Fc(A)-31 b(G)369 b(1.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 24746 81281 a Fl(6)p 0 TeXcolorgray eop
end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 54804 45 v -2331 6921 a Fm(A)-60
b(G)718 b(1.1)f(-)h(13)f(Zahlenmengen)e(-)j(MC)g(-)f(Matura)g(NT)h(1)f
(16/17)p 0 TeXcolorgray -1391 10229 a Fl(13.)p 0 TeXcolorgray
651 w(Un)-36 b(tenstehend)474 b(w)-36 b(erden)476 b(A)-36
b(ussagen)476 b(\374b)36 b(er)475 b(Zahlen)h(aus)h(den)e(Zahlenmengen)h
Fk(N)p Fi(;)221 b Fk(Z)p Fi(;)g Fk(Q)p Fi(;)g Fk(R)921
12221 y Fl(und)432 b Fk(C)i Fl(getro\033en.)921 14766
y(Kreuze)f(die)h(zutre\033ende\(n\))d(A)-36 b(ussage\(n\))433
b(an!)p 8878 15807 28629 45 v 8878 18611 45 2805 v 9586
17667 a(Jede)h(reelle)g(Zahl)f(ist)h(eine)g(rationale)g(Zahl.)p
35097 18611 V 37462 18611 V 8878 18656 28629 45 v 8878
21461 45 2805 v 9586 20516 a(Jede)g(nat\374rlic)-36 b(he)433
b(Zahl)g(ist)h(eine)f(rationale)i(Zahl.)p 35097 21461
V 1 0 0 TeXcolorrgb 35805 20390 a Fh(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 37462 21461 V 8878 21505
28629 45 v 8878 24568 45 3064 v 9586 23365 a Fl(Jede)f(ganze)g(Zahl)f
(ist)h(eine)f(reelle)i(Zahl.)p 35097 24568 V 1 0 0 TeXcolorrgb
35805 23368 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 37462 24568 V 8878 24612 28629 45 v 8878
27417 45 2805 v 9586 26472 a Fl(Jede)f(rationale)g(Zahl)g(ist)f(eine)h
(reelle)g(Zahl.)p 35097 27417 V 1 0 0 TeXcolorrgb 35805
26347 a Fh(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 37462 27417 V 8878 27461 28629 45 v 8878
30524 45 3064 v 9586 29321 a Fl(Jede)g(k)-36 b(omplexe)434
b(Zahl)g(ist)g(eine)f(reelle)h(Zahl.)p 35097 30524 V
37462 30524 V 8878 30569 28629 45 v 47992 10229 a Fd(___/1)p
1 0 0 TeXcolorrgb 47990 12221 a Fc(A)-31 b(G)369 b(1.1)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
34597 54804 45 v 0 TeXcolorgray 24746 81281 a Fl(7)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
