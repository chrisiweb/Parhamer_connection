%!PS-Adobe-2.0
%%Creator: dvips(k) 5.997 Copyright 2017 Radical Eye Software
%%Title: C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 3.4/AG 3.4 Gesamtdokument.dvi
%%CreationDate: Fri Nov 10 07:31:22 2017
%%Pages: 13
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: LMRoman12-Bold LMRoman12-Regular LMMathItalic12-Regular
%%+ LMMathSymbols10-Regular MSBM10 LMRoman8-Regular LMRoman10-Regular
%%+ LMMathExtension10-Regular wasy10 LMMathItalic8-Regular
%%+ LMMathSymbols8-Regular TeX-vect10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine:
%+ "C:\Program Files\MiKTeX 2.9\miktex\bin\x64\dvips.exe" -P pdf
%+ "C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra und Geometrie/AG 3.4/AG 3.4 Gesamtdokument.dvi"
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2017.11.10:0831
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.24, 2016/04/22
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
%
/isbool { type (booleantype) cvn eq } def
%
/Ellipse { 
  dup isbool { /MoveToStart ED }{ /MoveToStart false def }ifelse  % false or true
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  MoveToStart { 0 0 moveto 1 0 rmoveto } if  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 446 2017-04-19 11:40:55Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.07, 2014/08/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
/I2P { AlgParser cvx exec } def  % Infix to Postfix
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 446 2017-04-19 11:40:55Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 40 2014-07-25 06:46:27Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not alowed!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Last Mod        : $Date: 2014/07/30 $
% Version         : 0.63 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASEC {1 exch Div ACOS} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
/ACSC {1 exch Div ASIN} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 37 2014-07-22 13:52:12Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro 0 0
%!ps
% PostScript prologue for pst-coil.tex.
% Version 1.07, 2015/05/13
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { 
  /t ED 
  t sin AspectSin mul t 180 div AspectCos mul add t cos lineto } def
/Coil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED 
  /ArmB ED 
  /ArmA ED
  /h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x0 y0 translate y1 y0 sub x1 x0 sub 2 copy Pyth 
  /TotalLength ED 
  Atan rotate 
  /BeginAngle ArmA AspectCos Div w h mul Div 360 mul def 
  /EndAngle TotalLength ArmB sub AspectCos Div
    w h mul Div 360 mul def 
  1 0 0 0 ArrowA ArmA 0 lineto 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle Inc 
  EndAngle { CoilLoop } for
  EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
  TotalLength 0 ArrowB lineto
  pop pop pop pop } def
% DG/SR modification end
%
/Sin { 
  25 dict begin
  /Func ED
  /PointsPerPeriod ED
  /ArmB ED 
  /ArmA ED
  /Amplitude ED 
  /roundValue ED
  /relativePeriod ED 
  /Periods ED 
  /y1 ED /x1 ED /y0 ED /x0 ED 
  y1 y0 sub x1 x0 sub 2 copy Pyth 
  dup /TotalLength ED
  ArmA sub ArmB sub /SinLength ED 
  Atan /RotAngle ED
  relativePeriod 
    {} 
    { SinLength Periods div 
      roundValue dup 0 eq { pop cvi } { 1 eq { round } if } ifelse
      /Periods ED } ifelse
  /dxStep SinLength 360 div def         % the default step for x pos
  /xStep 360 PointsPerPeriod div def    % the step for the for loop
  /mtrx CM def 
  x0 y0 translate 
  RotAngle rotate 
  1 0 0 0 ArrowA ArmA 0 lineto 
  1 xStep 360 {                         % PointsPerPeriod times
    dup dxStep mul ArmA add exch        % x pos and value for the func
    Periods mul Func Amplitude mul lineto
  } for
  TotalLength ArmB sub 0 lineto CP
  TotalLength 0 ArrowB lineto
  mtrx setmatrix 
  pop pop pop pop 
  end
} def
%
/AltCoil { 
  /Inc ED 
  dup sin /AspectSin ED 
  cos /AspectCos ED /h ED /w ED /EndAngle ED /BeginAngle ED 
  /mtrx CM def 
  w h mul 2 Div w 2 Div scale BeginAngle sin AspectSin mul 
  BeginAngle 180 div AspectCos mul add BeginAngle cos 
  /lineto load stopped { moveto } if 
  BeginAngle Inc EndAngle { CoilLoop } for 
  EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { 15 dict begin 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth 
  /TotalLength ED
  Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add 
  /ArmB ED 
  /x ArmB h 2 div add def 
  mark 0 0 ArmB 0 
  n { x w /w w neg def /x x h add def } repeat
  TotalLength ArmA sub 0 TotalLength 0 
  end } def
%
 /ZigZagCirc { % x0 y0 x1 y1 bow h w ArmA ArmB on stack
  /bow ED 
  /ArmB ED /ArmA ED 
  2 div /w ED 
  w mul /h ED /y1 ED /x1 ED /y0 ED /x0 ED 
  x1 y1 translate %
  y0 y1 sub x0 x1 sub 2 copy Pyth 2 div 
  /HalfLength ED
  Atan /ang ED %angle of A relative to B
  %rotate % so end B is origin and BA is horizontal, A to right
  /theta bow abs HalfLength Atan 2 mul def %halfangular sector for arc
  /theta2 theta 2 mul def % full arc
  %/psi ang 90 sub theta sub def % angle of B from center if bow>0
  /rho HalfLength theta sin div def % radius of circle
  bow 0 gt { /direc 1 def /thetaB ang 90 sub theta sub def } % travel B to A in pos drn
  { /direc -1 def /thetaB ang 90 add theta add def } ifelse % travel B to A in neg drn
  %thetaB=angle from center to B
  rho thetaB 180 add PtoC translate % origin now at center
  /h h rho div RadtoDeg def
  /ArmA ArmA rho div RadtoDeg def /ArmB ArmB rho div RadtoDeg def
  theta2 ArmA sub ArmB sub dup h div cvi /n ED n h mul
  %HalfLength 2 mul ArmA sub ArmB sub dup h div cvi /n ED n h mul
  sub 2 div dup ArmA add 
  /ArmA ED ArmB add /ArmB ED 
  /h h direc mul def % h is now angle increment for half-period
  /rhoo rho w add def /rhoi rho w sub def % outer and inner radii
  /arg thetaB ArmB direc mul add def % argument for 2nd point
%  thetaB = direc = bow = HalfLength = theta = rho = arg = h = n =
  mark rho thetaB  PtoC  rho arg PtoC /arg arg h 2 div add def
  n { w 0 gt { rhoo }{ rhoi } ifelse arg PtoC /w w neg def /arg arg h add def } repeat
  rho thetaB theta2 ArmA sub direc mul add  PtoC rho thetaB theta2 direc mul add PtoC  
  } def 
%
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-eucl.pro 0 0
%!
% PostScript prologue for pst-eucl.tex.
% Version 1.01 2012/09/21
% For distribution, see pstricks.tex.
%
/tx@EcldDict 40 dict def tx@EcldDict begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Pi
/Pi 3.14159265359 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% e
/E 2.718281828459045 def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> true (if |x| < 1E-6)
/ZeroEq { abs 1E-6 lt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> a b c (ax-by+c=0 with a^2+b^2=1)
/EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub
  2 index dup mul 2 index dup mul add sqrt
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch
  4 -1 roll 1 index div exch pop
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% orthogonal projection of M1 onto (OM2)
%% x1 y1 x2 y2 -> x3 y3
/Project {
  2 copy dup mul exch dup mul add 5 1 roll 2 copy 5 -1 roll mul exch
  5 -1 roll mul add 4 -1 roll div dup 4 -1 roll mul exch 3 -1 roll mul
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c (ax2+bx+c=0) -> x1 y1
/SolvTrin {
  /c exch def /b exch def /a exch def
  b dup mul a c mul 4 mul sub dup 0 lt
  { pop 0 0 } %% no solutions
  {sqrt dup b neg add a 2 mul div exch b add neg 2 a mul div }
  ifelse } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> Dist
/ABDist { 3 -1 roll sub dup mul 3 1 roll sub dup mul add sqrt } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 -> x2-x1  y2-y1
/ABVect { 3 -1 roll exch sub 3 1 roll sub exch } bind def
%/ABVect { 3 -1 roll sub 3 1 roll exch sub exch } bind def  %% wrong version
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x1 y1 x2 y2 x3 y3 x4 y4 -> x y
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
%   { pop pop pop 0 0 } %% parallel lines  % --- hv 20110714
   { pop 0 0 } %% parallel lines             --- hv 20110714
   {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
   } ifelse  } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a b c R -> x1 y1 x2 y2
/InterLineCircle {
  /CR exch def /Dc exch def neg /Db exch def /Da exch def
  ABVect /Vy exch def /Vx exch def
  %% Dc==0 then O belong to the line
  %% First project O on the line -> M (-ca;-cb)
  %% l'abscisse de M sur (OM) divisee par R donne le cosinus
  %Dc neg dup Db mul exch Da mul 2 copy 0 0
  %ABDist dup CR gt { pop pop pop 0 0 0 0 }
  %{ ZeroEq { pop pop Db Da } if Atan /alpha exch def
  Dc abs CR gt { 0 0 0 0 } 
  { Db neg Da neg Atan /alpha exch def
  Dc CR div dup dup mul 1 exch sub sqrt exch Atan /beta exch def
  alpha beta add dup cos CR mul exch sin CR mul
  alpha beta sub dup cos CR mul exch sin CR mul
  4 copy ABVect Vy mul 0 le exch Vx mul 0 le and
  { 4 2 roll } if } ifelse
 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% R R' OO' -> x1 y1 x2 y2
/InterCircles {
  /OOP exch def /CRP exch def /CR exch def
  OOP dup mul CRP dup mul sub CR dup mul add OOP div 2 div
  dup dup mul CR dup mul exch sub dup
  0 lt { pop pop 0 0 0 0 } { sqrt 2 copy neg } ifelse
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x y theta -> x' y' (rotation of theta)
/Rotate {
  dup sin /sintheta exch def cos /costheta exch def /y exch def /x exch def
  x costheta mul y sintheta mul sub
  y costheta mul x sintheta mul add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% N -> x y
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> ch(x)
/ch { dup Ex exch neg Ex add 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> sh(x)
/sh { dup Ex exch neg Ex sub 2 div } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x -> e^(x)
/Ex { E exch exp } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% x f g -> x y n
/NewtonSolving {
  /g exch def /f exch def 0
  { %%% STACK: x0 n
    1 add exch %% one more loop
    dup ZeroEq
    { dup 0.0005 add fgeval
      1 index 0.0005 sub fgeval sub .001 div }
    { dup 1.0005 mul fgeval
      1 index 0.9995 mul fgeval sub .001 2 index mul div } ifelse  %%% STACK: n x0 fg'(x0)
    %%% compute x1=x0-fg(x0)/fg'(x0)
    1 index fgeval exch div dup 4 1 roll sub exch %% stack: dx x0 n
    3 -1 roll ZeroEq              %% exit if root found
    1 index 100 eq or { exit } if %% or looping for more than 100 times
  } loop
  dup 100 lt { exch dup /x exch def f } { pop 0 0 } ifelse
  3 -1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/fgeval { /x exch def f g sub } bind def
end
% END ps-euclide.pro

%%EndProcSet
%%BeginProcSet: lm-ec.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmec[
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/cwm
/perthousandzero
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls
] def

%%EndProcSet
%%BeginProcSet: lm-mathit.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathit[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/alpha
/beta
/gamma
/delta
/epsilon1
/zeta
/eta
/theta
/iota
/kappa
/lambda
/mu
/nu
/xi
/pi
/rho
/sigma
/tau
/upsilon
/phi
/chi
/psi
/omega
/epsilon
/theta1
/pi1
/rho1
/sigma1
/phi1
/arrowlefttophalf
/arrowleftbothalf
/arrowrighttophalf
/arrowrightbothalf
/arrowhookleft
/arrowhookright
/triangleright
/triangleleft
/zero.taboldstyle
/one.taboldstyle
/two.taboldstyle
/three.taboldstyle
/four.taboldstyle
/five.taboldstyle
/six.taboldstyle
/seven.taboldstyle
/eight.taboldstyle
/nine.taboldstyle
/period
/comma
/less
/slash
/greater
/star
/partialdiff
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/flat
/natural
/sharp
/slurbelow
/slurabove
/lscript
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/dotlessi
/dotlessj
/weierstrass
/vector
/tie
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-rm.enc 0 0
% This file belongs to the Latin Modern package. The work is released
% under the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmrm[
/Gamma
/Delta
/Theta
/Lambda
/Xi
/Pi
/Sigma
/Upsilon
/Phi
/Psi
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/suppress
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcedilla
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcedilla
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/periodcentered
/quotedbl
/sterling
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/guillemotleft
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/guillemotright
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/Germandbls
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: lm-mathsy.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathsy[
/minus
/periodcentered
/multiply
/asteriskmath
/divide
/diamondmath
/plusminus
/minusplus
/circleplus
/circleminus
/circlemultiply
/circledivide
/circledot
/circlecopyrt
/openbullet
/bullet
/equivasymptotic
/equivalence
/reflexsubset
/reflexsuperset
/lessequal
/greaterequal
/precedesequal
/followsequal
/similar
/approxequal
/propersubset
/propersuperset
/lessmuch
/greatermuch
/precedes
/follows
/arrowleft
/arrowright
/arrowup
/arrowdown
/arrowboth
/arrownortheast
/arrowsoutheast
/similarequal
/arrowdblleft
/arrowdblright
/arrowdblup
/arrowdbldown
/arrowdblboth
/arrownorthwest
/arrowsouthwest
/proportional
/prime
/infinity
/element
/owner
/triangle
/triangleinv
/negationslash
/mapsto
/universal
/existential
/logicalnot
/emptyset
/Rfractur
/Ifractur
/latticetop
/perpendicular
/aleph
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/union
/intersection
/unionmulti
/logicaland
/logicalor
/turnstileleft
/turnstileright
/floorleft
/floorright
/ceilingleft
/ceilingright
/braceleft
/braceright
/angbracketleft
/angbracketright
/bar
/bardbl
/arrowbothv
/arrowdblbothv
/backslash
/wreathproduct
/radical
/coproduct
/nabla
/integral
/unionsq
/intersectionsq
/subsetsqequal
/supersetsqequal
/section
/dagger
/daggerdbl
/paragraph
/club
/diamond
/heart
/spade
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/lessorequalslant
/greaterorequalslant
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: lm-mathex.enc 0 0
% This file belongs to the Latin Modern package. The work is released under
% the GUST Font License. See the MANIFEST-Latin-Modern.txt and
% README-Latin-Modern.txt files for the details. For the most recent version of
% this license see http://www.gust.org.pl/fonts/licenses/GUST-FONT-LICENSE.txt
% or http://tug.org/fonts/licenses/GUST-FONT-LICENSE.txt

/enclmmathex[
/parenleftbig
/parenrightbig
/bracketleftbig
/bracketrightbig
/floorleftbig
/floorrightbig
/ceilingleftbig
/ceilingrightbig
/braceleftbig
/bracerightbig
/angbracketleftbig
/angbracketrightbig
/vextendsingle
/vextenddouble
/slashbig
/backslashbig
/parenleftBig
/parenrightBig
/parenleftbigg
/parenrightbigg
/bracketleftbigg
/bracketrightbigg
/floorleftbigg
/floorrightbigg
/ceilingleftbigg
/ceilingrightbigg
/braceleftbigg
/bracerightbigg
/angbracketleftbigg
/angbracketrightbigg
/slashbigg
/backslashbigg
/parenleftBigg
/parenrightBigg
/bracketleftBigg
/bracketrightBigg
/floorleftBigg
/floorrightBigg
/ceilingleftBigg
/ceilingrightBigg
/braceleftBigg
/bracerightBigg
/angbracketleftBigg
/angbracketrightBigg
/slashBigg
/backslashBigg
/slashBig
/backslashBig
/parenlefttp
/parenrighttp
/bracketlefttp
/bracketrighttp
/bracketleftbt
/bracketrightbt
/bracketleftex
/bracketrightex
/bracelefttp
/bracerighttp
/braceleftbt
/bracerightbt
/braceleftmid
/bracerightmid
/braceex
/arrowvertex
/parenleftbt
/parenrightbt
/parenleftex
/parenrightex
/angbracketleftBig
/angbracketrightBig
/unionsqtext
/unionsqdisplay
/contintegraltext
/contintegraldisplay
/circledottext
/circledotdisplay
/circleplustext
/circleplusdisplay
/circlemultiplytext
/circlemultiplydisplay
/summationtext
/producttext
/integraltext
/uniontext
/intersectiontext
/unionmultitext
/logicalandtext
/logicalortext
/summationdisplay
/productdisplay
/integraldisplay
/uniondisplay
/intersectiondisplay
/unionmultidisplay
/logicalanddisplay
/logicalordisplay
/coproducttext
/coproductdisplay
/hatwide
/hatwider
/hatwidest
/tildewide
/tildewider
/tildewidest
/bracketleftBig
/bracketrightBig
/floorleftBig
/floorrightBig
/ceilingleftBig
/ceilingrightBig
/braceleftBig
/bracerightBig
/radicalbig
/radicalBig
/radicalbigg
/radicalBigg
/radicalbt
/radicalvertex
/radicaltp
/arrowvertexdbl
/arrowtp
/arrowbt
/bracehtipdownleft
/bracehtipdownright
/bracehtipupleft
/bracehtipupright
/arrowdbltp
/arrowdblbt
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
/.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfH{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def} bind
def

 /pgfV{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfA} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto } bind
def} bind def

 /pgfA{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1 add
def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div
2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index 14
index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke 4
-1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1
roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx exch
def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade {pgfR}
def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx pgfstartx
sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb exch def }bind
def

 /pgfR2{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfR{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1 add
def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def /pgfcircy
pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe pgfstartx
8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty 8 index
pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx sub pgfdiff
div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def 2 index 6
index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index 6 index
sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff { 3 index
3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4 -1 roll 4 index
add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy
pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark exch
pop }bind def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse
/.pgfsetfillopacityalpha{/pgffoa exch def /pgffill{gsave pgffoa .setopacityalpha
fill 1 .setopacityalpha newpath fill grestore newpath}bind def /pgfeofill{gsave
pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore
newpath}bind def}bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def
/pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind
def}bind def /pgffoa 1 def /pgfsoa 1 def end

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: TeX-vect10
%!PS-AdobeFont-1.0: TeX-vect10 001.001
% Filtered by type1fix.pl 0.06
%%EndComments
13 dict dup begin
/FontInfo 16 dict dup begin
/Copyright (see\040copyright\040of\040original\040TeX\040font) def
/FamilyName (TeX\040vect10) def
/FullName (TeX\040vect10\040Regular) def
/ItalicAngle 0 def
/Notice (converted\040after\040April\0402001) def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) def
/isFixedPitch false def
/version (001.001) def
end readonly def
/FontName /TeX-vect10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /guillemotright put
dup 35 /numbersign put
readonly def
/FontBBox {-26 -10 1002 512} readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BAE4F093966CD2192CE95EB0F323A6BABFDACCFCF27D91F7869A0E46CA5
9AAF6905783E8AC1F3F9875A76F97187738432F8D14E61574CB292FFB9740871
66839799D8CAF6E0DFE00012EE6D46A2B3655F29705BE37FD5EDA1C765AA2CF5
C5AD37207ED1EE9DB82FF31A33307FFA16911406557336AF92F50B603C7BD336
73EC060F68318378A6F599DDADA5A21504CADBA1E1F4B1A22962BA1BB39ADC7B
E8CC92F196549457877C9636A8A7EFAC1C3745644C0FD151C70B9FAD69B02C1F
FE5ED071CA1CF3D4A70909B6A39FC8C64A36612E534905E6FD8185EB3DA1BD0B
300DA9F893BAFCE80CAD0161511725A9A2FD057A4A448F41A5DCD553D90281E5
3F483D886E51549CE054613F23E810E59147C05A284AEFB9C34FECC6E4E945BF
E710C7935361C9DE43CCD9FEF6980F8B3D407EEF70039776E45328226EE94AFD
A3AB06B09EF15BFEBE7B467FFFC0F805CE87C0B835794172E87C30124C6807E0
5F404DB34A82DE5CF7D90392968E1A5427A0EDA28C50EDF382DF6BAE466B2695
37BD1E24DFF14D4BF1A509906B50E6F7F526C7053D7EB7F107162BA7729A3414
85EFAE0986EC550EFDFB0E4B7A4A5A677874826AFB256FFDDB70B775FAFC5B1B
EA41C4F0C0BD5C6FBB6C32541AEE0A058472C5A806F1FDE139B121513CD600F0
52839A2EC3B497E3E67CBA6D84A1770691C9FEFC37C7388D19DCEABCB40C4447
BD08FBD908C8A610D90066FFD3CE8CE6E9B42B941140FD5DB66E3B9FA9CC19B5
40F70910CE5B2270DBA517A4798E45675E17752E38E37C1F9479B869DE576DF0
CB9E7BBE9DF165BB48908B9741FA734909457C4CFED8B92CBA089DD789A85F13
E70EBEC52AEDEE54AC87AA5169E74B8CA5AC27B33BC9202814A0FD326D021F98
E1A3C38531AF19024166BE5BD08436E7C725DAEF8B0D2D5253D6A9DA8625CA52
D8F0222DF8C52215FC240E04C43C8178011E0C75E13BE96A55B5C80F75A95E8A
7F2DB117FABE7A52CFC4DFE360DBC132171F6E8A173A895E2123260436AF2310
14ED206449EC82DDBE23E07F9090CF5BF25078FFB40727CDFB9E51B6B649DB9D
49115A2BD0C88B9C19FF73D298835F92C703FCE970756C06D05847E6D8EAFE37
57943751EF77503B4FFD3622879AAD644B444E6685A0199DEB1D52A661AC0244
FD9D4DE92E2893038829E2C20146DFD820C965DBD33DFC925CBBFB3B450DFF9A
1BCDE624A41CB2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathItalic12-Regular
%!PS-AdobeFont-1.0: LMMathItalic12-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 833 233 0
%%EndComments
FontDirectory/LMMathItalic12-Regular known{/LMMathItalic12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic12-Regular)readonly def
/FamilyName(LMMathItalic12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMMathItalic12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-31 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD11234369CB38BBC21C40020C4E57C
950DC4A5CD271B5530E91DBA55EA1A3BF584D9405556EF9C802B109FF1EB2B0F
C350D7F091E7B613B08574EDA3BF27099BC2EF0E503A4C4724614A73AA054756
A503BEB31E3FCD96F733D0C5815847DFBB66DE4968A9B389FC00C2146C4FF68E
076BA8B3847A3D8237D36A6BBDF0096290F1BCD02CC66B12E0070215D5D8306F
406DF7590940DE35CA0854D3609249AEA4EE9D3D377A7996C1CC2E940132A90C
F633C774985DCAE8E9353607B9059DD211265A0A346B1A062D80C64B5802A750
D9FEFA3C9920A3DE942C65BD08060AF33C91CFF62930F65F9A42F70B83B0E077
E169BF7F5D84F15D59F8A74BC2EE4A7F3ADE36F38C3A661F4CC9826BF73D7F02
D3CCC267927CAE22B5ED695D212FC3B669F9BE369B7A8D325C3FB9D552F175EC
29972562517E91E7B8D570612CC50B1A5CB6B94D030B0C60465EA21631F7A30B
44A47143D0C2F942B5D76384B8C3F2F197BB3646CBED3DEECB6513D3AD460F49
4BB874969A3663617EB537E75C1C1BF92749F9D147080EFF78ED285C315BAFA7
D78B7B4B8B7CFD1639EA303ACE986EDEEBA9350F92529C47EA7689779BD50CDB
D1B3A68B383B54B51F4FD77D6458F15AFDAB471DEA9909CAB29840091391F2EB
148588D02607411F2E802B9CDDFFEF1C1FFCC9EED0405371651ACF30808E8C57
682B734916EE806703B2ABA2F6910E0C75BCE10A94FDD1ED3E4FDA7857341427
CA0A4F7D30151BEB8E3D351E1E100A8A75959D11122C83A5C0C4C87214413B25
A6BFE44A42D446E9C4AC88F86B07C1097F9C5C5673B88582CEA8CD622F9B0C79
E463DF7F2F4C6640FF3852BEB520F7B23D8A22E7E601EF9CC6D0A2E6E82E6840
65B82C6A3A6692811E2B4F57723AA3A6E27076A2F63D6CE1FBA7ACD844E732FA
02797B386F2EDCE9FF9F84EEAD17B366D678E61C6176FEC09C94B74DFC090CCC
40AE9DA65E5DA02E7A7E8A840B45B752AF11A279BA06F821525DD0F477831176
84C80B29D318260FBC314986223F9EC4DB5B0EF2EF5D424C6DA581B49C709E1E
98149FEAAB15DFE7F94977C9F4AB20F3D8C391A5FDDFDF5B67E9BC3976D5E50B
846FD2CADD6E5C3689987A6BC19336039591AE9BF280352F53526F7E07CD703C
93CDF2B76B90F055096EAE10BF6794F563F2AD650671AB36C99BBD45E7A8CE34
CB792A606A7D9EFA0F25751BDCE7740D2BC14DF0A3538EC25105BD0CA2485783
361EBC52149C5B9660C0FCC847FD80F67BB3A1F3237F7522F4084B7BC486BAD3
557C8A5956F4ED1B59F70E3721742F99F8F271B2B1EC80832C40E532FC4AC9C4
88F12D88391F3E317A31B5CF413C5AE1C0833A46996E3A4F8A4B2DE2AD885DBF
88E6114724E7ED1BB145B0F970DB565707DEA9C5DC1EAC2C92456833AF7B32DC
A305095C729785E52562098F9C1F2E43FDEBB58E4FBA7C92DA29ECC7EA25E35A
5F0F81B80C9DA0EB028B84A130FDF9F479A7F331CD1DCE4AB6E7671FB290BA88
F672B0D8FCF8D9750E681F623D7D287708E5F941A99DFB741FA95CB396CA21E2
C88A9BEE2580D3D192D3C57B888457C900E82C41305189728758241D75D2E398
9C3BD46A0E19F9B46BBAAC0AA138012F457ADC722F82DE123299DAA004ED607F
665061AF5B5E0CB55F6C6934F481E9B229A526092767640820EF69EE992179B7
74C31AB3FBAD1C6412BCB7A92B2BE3AF10DE3603914DD1B5758927CDB632F3FC
73F283BF24E20F87801685F9439324A4E18DADC58D261142B07C876E263EE9B4
92342362FD21CF40D8D26C37681F6ADE20EBA3FA90A30AE893593F0DE044DF67
E8F40227A761FECFF4A396486FC824DCF1E78CBA8606212E474676E1EA576871
C91EF99E1A64D2A3EC70F7E9E2CAFE6E6B8791C08D064096C1D4D817E396C4C2
BA7531C3F1A53833DEEA433980BCAFDBF4B778214D9CC4E0AB3314AFA236CA13
C8DC7C03636886FEF2D118985D5E781B8CEC01676770619E49B8C455E889BBF1
CBF88D00D336290176B3E0B546698B6A12F524DC97030DFD0E38A250AE8B56AA
B796E5C5CF21856CDC4A24F11A73B4172996F81144B1869E7DE5BE5457BED651
77F683B1A698CFBF444CCD1706558BB9A3980B0AED1202631204429FE7C84BFA
04443334F2AD889E4A3E230D0A9A6EAD2210E81DB036202EFB584A475E93B0E4
D44ABF891842DFE64A59F22ECF1E7F2FE531C27ABA8ACD2528353CABB3295864
21D462D8286E2203A690B1900BAEB2AA27813CF391B8279F264177238C558640
A904EBAB4A26E008332E1FB8A6F75E0E192B5AEC490A066D10993325A1865413
A76070C7CBACC6F4ECC52FF2FDD65A416F010A202F0F6174BED2CAA10B83A9FA
ADF759AC722663DEB4895AF065D0E0DE0E37CB92A7CFDB153D8F79F9E63D693D
006CF3E869902A7CE1109EC7BBE8E5B7AA2CF43FA2AB8EE4213CF451F4D8FC47
82D9F7D8B8807B5AD4103C9AFF6CAABDDF787DD65949AE1B082E3F5B20BF645B
D2A7E6AFBE389A6FBCBB36B4B1996CDB1B3C1B48B24D078D6F201C01EC500AD6
EB490419EB1278AC3AB78AFC746DA8AF66580344FDEDCDF9C693C5E7BC811BE2
1F547C9F5CB2A9E59460C435361B9E62A5C74A79FB741F173AD300AC582A8082
D54F2059F019D7BBD6E951C175A7C28DADE68B2000750B9B256E6414FCA0A1E6
244C8E708CB4CE399FD7E29B043E82503D5D18D63330F47FD86717E6F9D82B4F
3FDF0261A45ED8C77C605760E566814F1C8D3DCA9FA9AD3A7CC262C736290176
B3E0B546696240AE76DBD1A4D4C8DAD51358B7982F017FB998464CA054F6D4DC
58E662FEA2AA0A128EE1941A6B08979C8593ED677A45DB1CC013B250CB662CB9
3907D366B32F908E0C1C15022D9EA8E287D3A8C54F694EE05280C033893B3AFD
D255495C58F49C947D087D8D1A53E357CB13FE4D1010E1C972ACF3D81DBDCBCE
7D53A1A069E8B1586E16D94C43CE189954C61CBC679C6E45DC42458569635594
6D3DA661C8D8E9C0A421C18060AF12897E91B6021017BFF56A59ABDE8D479EAC
F039B6A79ACC01DD135CC1ACA59088CC23CB8DD879A90A1183CCBA09ABEA4CE2
BD42797DFB1DC6E9FC96497C1888B16D84D72DC6CE3AD006CAD753C5E11137C6
6F625C31B252B8280F84C372BECE44CDB80AAF90DE11297B1FA978C6E6429697
1B90A973E37B6453C53A59619B32C2FB0F3FD6FD7442E272470DB5BC7D341AA2
1BD1AD02716000281C0F3773C2C7B12868E5F0A1EC5F288983724D67A6A94653
2A29EC39C65115B60A210BF5DC942D6E8A63720FC2E82CA7A9F87667E5FBEF41
B745AFDFCD03FF8D1B69E52D38E61B5165464F6FD4E672244159758064A00B63
D1EFD4BBD3B322A7A52A64C0FCF981728C98855357092E169D448A1AA45B0E7C
93F217F851A9E2E1810D455778CCEA71A764C93F2597201E4902DEADF394F518
AE8AFD30BFBF84A55C45D75C996ED30234280A6859F6758DD973BB7F40ECF326
5C4AB35AAA44C5462EC65AFFD74F3B26582EDD091F910F68778404E0DD16F29A
CB3AA8441A5CC85DD40729811CBE60A4937473906309E34C27F25DF8418E199E
91B23B356FDFCD6960AC599899B335748F02764C07D590031D7173B66D447775
A74EB2E347D1DA4F460189CA64655A2C9775C6A266A4B59C47285F0D7D4B5370
E810A294C5C93129651D4408021C42C9DD9F821853D89FCC6CAE8D2E35C65951
E29A06B5CAF22C9E45B08844696248B9753E2F2A661A21992CDAA035BE98EA84
48A3077EEF0FF4C6584CB3FDA2AB437879F966B799489E3D365C8B3CC66992A3
B6ED1338EB6DF2B71738C108EF471E7022422655025AEBB78474659218F21F5C
9665E9AB67F8AE95573A5277AB87E1A511A61643117930015AD9AEF484909B52
73CF1607FD44302EBF0B07342F6DBBBD07EEAD5599B4390638869A956D54AA7B
4FD8E7A4AD1A055A3B2BFEA984468B8367DED45D5EB8BEFECF1E9EAD77CCE4C8
18821DB5CCB42EB4186C4CA57C4A1574BF4880E8324EEE79125D9965976C0BED
B15E36132F7232BF606DB5B7D79D0CB9FC5A86DF956BE13A62A410C33D3FAD1A
861E8672D7D406DABD29D039810F7E07F14F31BB557E177FE4A965DC484CD92B
A9EDE718BC474E8C84A94B1A58F4C44C2A246D2D3D63BC92A87503C359A80440
B0624E52F21809C1E5B9344E6B4F2D60E7EC32E8511A37A6086176E889FF0FB7
5CE464DAC5EAAEB571E870E9DB71D9843D7023DB3E88C12321FCBB1B6FE8C9BD
49D82BEA8C8C440F96E8259BD8003E0C495A1F3C63DA8FA0E06932F702916481
C757186F57E50A932EEE7BB38F1904EC6C476B89633E4593E3F4FA5855E2F001
9C78C9BD8C1C917193045993832080ED25EFBF992BC37D31A67F31A500AD2B54
78CC37A4AD259001E6D43E3F9044934B71826DD43F7850C451E68E56F367371C
0B6B8D78393AA93939462B9CF3129827283B517EFB8C3B0F36181D7A7492E3DA
290DAF124C4CFF21F4EA6CDA3239DAFE8657241697F03094053222B0C855DC57
03E092FC833DA3D6437D2D88E71D431B7F6666140895CA5383598BA899CB0C94
76EEE5220BC4FDA9AEAAF6BBB68B2FBA12E5B1F0839CC3DBBE7B27C735F569C2
B88D5536B8C337853F4881132FE49CD034327B62B98362563D1C02F04FE40C3A
7EB176749473F70DA340E6F73577C3E83E77A3570F2AD51DBB13B10788942FCB
8B27C8C1E831FC12D83C288666FE90D640190C87D184EA4256FAE9A4B2611BE2
3A17EB293008E8FAA6675EBC1821A6C903B21B9590981F2FCD8BB6EAFF102AB2
23CADAC701C9C86B7306034C566DA34BC903B1657A3FD6DB10CAFCD450316620
758DBA86592612165D27FABE483446D095E28DA378D51637ADC8B31C23F0BD99
82C847D661AB66A4CEA7706708F1BA1A5F2EAC5DC8198B6235510A71D17225F9
BE2C3B2111AC4093578B69B8B8A38DD3D9E4CD0036A4289CB6036227617981AD
CE4F82F8DFA128681A0C790A1925A7CEE9B8E7B5C60C6FD4D7FB118A7E15C8E7
A12DF808337CCF01377AE22453FBB70AB57A17600467AD69787B3599433DB03D
D57AB3862B13E18480D3B615C42BC85508D3FCD73C649BF6CB0869035E048CC2
FE4D143E327932301A7FB290C13A683AC7FA3CD4D0B65B94BE656CEE4E679143
681354357D07EDCEAF31D6091483915421F379651E7180EB3A92FB2855505B06
575FE73580A944C4849C67620CA071D58F42BB9F9C283F925D07D83955E50A89
1E13DAB750B9476BDDE61402D0A57A0E7DC8F1419DE0AA9BF81DABB559717683
FC95D665765204F75DF9A22F4773BE5BA03E49C36F4D681959716FC7DBFB1C97
5E120D2B77B4959C76CDDD0CCFF50FB497B370238619FA379350DEBD2EB879DE
CF8341909CE2724CD634A2379AD61535BBC3845D95D2A04840354B231D1901D6
0B7099844376777D3E3D2A087B9F488F96C9CD22F50519DDAE4FA487AE42C58B
7F97C6745F37A9B31EC7C2C99EDCC35C5DD652D7E61A4A217DFD39A7B0A1B1FD
D8F2FD43C8DE4F3E44B3911A81CBB660702B176281EB74E89E8611316A1BD814
DD8A6C2BE77378EB8727EEEDF160BE98840B9D91F8728E80665485A8F2445860
0790C888253AD71D6903AB968773DCCC8F7BD3EF0C7935F0468A26FD9DBFB379
0EDC6C2D052534A8A1B61B7BF3D613D1677D8D6BCBDED6FF026D6A6E34E51560
DB284E69A69A4A7199307422856DAE66CFD2331CBF43F3D3515030619ABC4E18
04197831C121A72507DE759645D0C459E3B94E981F338E003DFC3A802439CE93
5B8B14D6B821AEEF2064D9EA2AE6BF0E7684323D42E3D16C6FB1AFCB0BCFA31A
C2AA85EFCD4D6AB33D2430EA4DAD6850C6D3F77D09B385AF311A6D809A504059
4909141D2B709F0F5A931C4C5951B199A800BBA9D771E571A77C6B923D5B74CF
93C48F282F53EABD7C1E0879C2E76157CA3E91481887EE40EFB805BD6A352E4F
DCCC31D22786E74C48C463F26C4AE55755019E1E9848F176F121C615B65291F5
B25DA745603FE41BAED110C97AE00A36364D84A3D7ECE44F0F97749B2D2060E1
7761AFED458F63CE8B1535238B00B8544AE34396A2900844C0E99EEA79D098DD
11C8B38FD1EE596E9886595A1540CBEBC4B88157EDF7600EA310061854E7252D
AAAAB1023869363945D5C55DEDA024E40E05D5797813B812EB36712C91B95F10
81C020BED16AECC7994C1CBF52F34314F7A1FD8BA5DD5FF083205A9383E6E92E
578D6D327DC7E912BB61C0C7645E849521DCB4249DD85C846791B0AA43BA9799
EB50F26D894F0ADDDCAEDB2FADB15BE2FAE553DEB00C3A7758FD912B9ED9B83E
FDA1D0C1DDF10C272E0D3F6851E3E57FA1CDF6CCF814E372FEC0FF9797A90E7C
56A075E1CA73C9993AE0E4C8CCB28B531B1E987FFAC89B5A1CC2C9C9F81A9D94
FD53E986BCC86C57ECC88600781D78742ED8B84FADD9F69E249312B59E9BA9EA
64486A5474C53D2908E02FD28DC76F09663241F419A1F8690CC260AAA4D6AD20
74545A86E4C77211EBB035C57D18DB86D1CFBAD0C71CBAFA31514CC3870037E0
C4746DB1ACB8C78E9ECFDDDE7FEF173C4F4A3D25CA7F271C81FA9A3DC8FB47C0
5FAEC5945781A6ED32BD00972191E09C22B02EE9D57A5F2171916965B934A04F
5F8B2B91E11E3292A1170CB474788AA9931A0D1107B8854E428DDE6AB2970C4B
F2B56B116041E6E648F2537FB54AC0ADEEAF51960F5CBEE4EE45AADB936740B5
5C8B069E9BA2F137F83DC53000D56B133E2810BA61631FBDB7EC658C6316FC63
5679F03FA1A025F91D9E0D926E053E0363BBC148161F2162116905363DEAC532
4A5A44C1412EF0E31B3586D15C964401BED4FD8B4C04C965437283F939E9DCE9
4E3C2069B463591A5133CC2E38B2C738E7A5CC3E93417DCC1862351A836F4735
8DE33C087E04D7D00EBADFDE32C24FFD0A7ED3FB73D77AE8B80D52E74870EDBE
A5BD757CB4A47DC32C95D72856D9C4DFC06002D722775F50C0CC1C0B40C0E01A
AF14C546F6D1AE5159AE7CFAE52AD717D40FF4EDF449F083ED3583959027AC69
5597AFC816D30A9F0431E5E4FAFE01933AB97F56C1FB97A3DB5916D14AD0DAE2
67833862CE546E34653096F91079C832755FF23EF7B702724879D236ED154954
3D020F64E945D2D869833844732E9C3F032CB06DA4CD5DA1149257BCB4931D72
BFE2F462B3E0F9239B1D75FDEFAE778733035CD9350CA6C736733F3ED0B9594F
8B7CB9E06BA37E132A5B08A2DDBB00A48F3F2E590F1B297A3925399D53D5A081
53E3A92245B956015300E3541044BB5A01FD8F305C8073E5B5EA5934709F2CA6
7F2CBF3C7BB6056D7EB6D76DEFB30073A220CF184BDD64D0DB3F855DD6A5E785
CE9F16613B87E41F295D0EFFBFDCA5BD28112CDCB2933A3BDFD8CB999504A116
A7E33FCE704EDCDFB8BD942DD56C229CE2C086370262461C0589064A9132122C
F03CAEB1411C6A9446494E85F6D0613879FB121F03EB60DFB9C35828BF67D1BC
A4622DD6EF2E85AE1DD50094D6FF28414A88BF67DBB8F24C3D5B0C78082BF2B8
5E7C1C3E750AF8C99180B694848E881A84A4DE52B5F09CDF71FDDBF0FE04830D
042D3F0035AAB97B8F4741BA3A2211F5E1BFFA82A228DD6DACD38154F6833A8D
786641E64E4F1C08DC0341622F590E804BAABF35A85A4C7B970460F0F9D7CCBB
B2F9A2CD46E27A7CDBB28C6238A60942CAC1FF94127495428BC1B784C92633E6
8A384086DAA95E4D70CA007A9E6823EFE12FB73BB969D3FE9A1BCCDFC130EBB4
CC5305C23C2F0AE83DD7687AF90C506D08621CB7F9B548959D7B017D6CB1FC3D
92F6B4DEF9ADDD1AFCE12615F7A7A315E74A53BCE1879EA35CF860125138D3DE
55F26663FA3D8F542C12A09FDE5E94BC09F015EB8DF52C6535BCEA5C7FD2497B
ACBD94181439CA45C1D6B836252AFB81E48B97C32150D5B2AD1B226623F6C292
3D27BCB019556CC7D14A705063875BB52FDFE807F22E53316B78D69EA6B4F24F
A3818C397AE095801C9E53C2934D2D0E44855165C09BF3E0719018C08F0DA0D8
3043ABD8681A00D49C5FFC57EFD5402D9C419197D8E0AC0E20D925C9E019995C
F515ABB40C480085771836D1D7EC85FEB1EB2AFDD6EB9DF7477A180FF37BD2AD
FBD62DD5CA90958087A93A15C857386AD694FCAF7E694B9E93D6F72F57A744DC
2405938280C4D3C501AFEA82EC88FF1460B53620548000A676D564AF4009A9EE
522EC5A7BA9621BE50889FB9344A43119B34271DC094923FA7DF2860BFAA7874
2314839C6BEC0F67B08347C42D49F1A55C7B74AA69B5487C810DC18822985A97
672F9954AA17122166B50E4B65247E3785CF3FB76867709FB9CF112347FD07B8
139470B72AD78F2194370C9810FD75DD8AFE957C64A48EEA1D616A53068C9556
D1FDD4FB2CAF8B462618FFFB9F9B71CE52D52F5D5427DC1534CDA9CB8B407F42
96419D91D7204434037185115F1764816F12868D18234A4E6B36B898A07B6828
6585FDD41CAA6D74249DE01C68EF7AC6A828A9854FA830FF1B08653698F85CD6
1385F1CB6CEB6EBE050B063F557C92EEE05CECF09910F1578A93F5CDFDCA1B92
12D888C917AD3E283E8EE7258E96E42BFDF42A398F2410B9B0715F778AC69083
F2602B2AF89CAC94371C55A8EF0425FD0C8CEEEB55D4B0883C27AE9B751C573E
52DB590157F5CB5B33C4C78DB583B03F0A202CA9F626877012277F8510F503E3
D576A775EE4EAF7D806980B85DAAD45F66487CF43776E425CFA1C92742D4D28B
9C61252B31D6EE25ECF7E57C395196F23CE864C166405273FD6292BE6CC28978
616D017E852AB0CD893D71104B1E7824AD6C1BBD878960EE3C650C8D866F90EC
08E80CABEDEE24536DAF40948E76DD4F400AAA84AFD3D5F50B7F6A5766A03723
53D8B4EFE3FF2047F2586D793F4F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols8-Regular
%!PS-AdobeFont-1.0: LMMathSymbols8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathSymbols8-Regular known{/LMMathSymbols8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols8-Regular)readonly def
/FamilyName(LMMathSymbols8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathSymbols8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F035757560E05960E2C327020FEAE317
24C484AC0CD3C1AB9CF35516622A022D6CB83DEB8126DF04762C901617B35492
98158049D5C65DE86143B7F36D36233A115C36DF60D3C55816B2B0B341102AF0
90D7D4E00A7611262CCD366F870F0EE8175688261513076B608C7E160A9A79BD
2B66E2E2A89CBF6D1703854915ABEAFA09718FE338924B5AF1FBF1209786AEB0
0026C38A2C7E208E6C306BAAF037DFB0F3297EE1ABBA65247CF72D0F78A9BC24
038966CE124B94487282B69D6BC0B5E17441DA55415B5369E451E2B0D705FCAF
3AAC6DBEBB8AB0313C4C201F851DB96CA9EB49357C3C1AB73F0CA2110C994680
5AC8F0D760C03F71C92CEC2E1A3AB84813D389BEFE7E0C28FC76FCA70704BC4D
159EE8B490B95CB09DD01A4122A686AFB8B9C69381C8C303F9A3B695238C3BB4
CB44B3BBE50E2BAE63796BB51D945469BB75C69F7A758180B77CAAD2CFD5951A
23580A3D45083C8368543DD37AB49705B939804C12D4BDFA730845F7E42A6C9A
B3F0A376F44DC297393B85E8A18C45C99260BD499DE599CC0D76EBE4AA7D70AB
348FA87CA9A1000814C4FA99B4EBC35A0298AA29563B030707F3EAD9FFF7BFB8
3B347C4A00BFB392E79B79F413E67A73FBB006EBA896A65CB21BE940A0940640
34E08FF806A114ADD3FD42BB394F76CC77DD869C46DEEE20839C9A2FF73B840B
0ACF238D333719F5947DD4C39B8E3F070EEDDA1A39D526319828FA9F47F03D8A
245D8E215B37959566D26DD98185223E4FEF01676650EB4E26C0A425E6C23C50
4BA94BC88E08614769C017F6D4F14C52D7189D4AF8CDA367D8B04CA8D3F2307C
0A7A179419A80695912F456637F539123745CA8E696E250E0BA6B7C6277394E5
98A8799C29B6272613C152B0CAB05F3C7795791EC9AF2BDD416861A3D13FA858
BCB6ACF5BDE40E5DFBC1A171A7280E8FF4AC0D4C8A2199E9E2BAB5CB9131A76D
EAC166A7C449A549EA5111F1750CA2C6E1EC6F00CB6C62BA52D17FC66E06ACC9
1E6B858F9393AF9AA5E69F799E01D301B647DA57225C2920E3BCEE9D09CA5C60
F22B07F24A26DD8F4D6F9C78BFAA8D12A21531E713B80CD03A5FF4F3BBA2AD82
3BEF7DA8C97C30F1452006AA3B1A168483F6EDC4089ED02E567923AE6DBBCCA4
8C246A080448200C2A29C34AE6255BC79B73AE14B980A7C357681BB0962894CB
DA32FF2B70B21AF4D158E0F74652684A7150D0967F83E13EBBAB33588541AEEC
0DE8C53851845A44FFB46A93CEE3E8A0263882542F7F103D13C367EA8E1ABFAF
6486A9DBF6668550BE7858F5790BC87C66492C0FD34DB08EDF842E1AF58A09B0
85A9B7FA402029FE2439769D67DEBDC8AD8C861E90E5322951A2904FD702766B
36916DBA8F9C96141BBF4788FA435556B2B4E1B37DE4506ACC4224CFC00A8F83
33941A050B51B9508758F4EB2DC074D799F5116296B8822ADD743A043F9A6426
88D10767A9F99A072BD4C88CB579B34687BA4953B96DBA29F33211B12A0215F7
5F2F873E5074A7D593DAD0EDD97270FB9A87BE870321A49958B10E32850F0148
68E0A1D795937E61D4556BCDFB7F4DA63A884F9B4B07801D30B1357C3432D6D4
7B72B7D6040410C194EE5124ADFD7A40914BF569EA1F9CA8C8897E839D262395
5EDB3E97C591A3A5927DAC229EEE864B8C0F79ADBF88C0E6C41CC70D9010F07C
1CF9C05960E34FABB6C5DA4D789E39F35FE01F0B22BD9C63B3098457716D6B22
5EFCD0A960F3A2319252C7A0F73A4770E056209C14D721A714D713D5F2BFAB32
EBF815DDDE792B2556A87C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathItalic8-Regular
%!PS-AdobeFont-1.0: LMMathItalic8-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 556 156 0
%%EndComments
FontDirectory/LMMathItalic8-Regular known{/LMMathItalic8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathItalic8-Regular)readonly def
/FamilyName(LMMathItalic8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMMathItalic8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150819714667093ABC1E
AE2ADB86A92EDB8860BA65C926367BF8FAB5CDD2870C4AAE2B39538243DD06AB
AC3F1DAB2BBCCD33BAA90FC33130E1723595D32CCD11943BC3E719FF32DB8933
A43C6E33162B65403A3F10A1CFBB9C6EFED4FECDA364F17597D60F298578A3F4
1C207D322FF2A75B07E2715DF2E396BE7AD112356772A65C14D49D03C7D456E5
1A27C2ED815B30E268B02FB1D2E769067ADAF25F28640307E3A89F0B04F44A1E
1392A44B8AAD82CED1539B6A9CEBF441EB81775C7EE4CC12313F31FE710DD429
4B1955DF2BF7A88E1EC21DA22A63BF63E89C913EC01EE10A0601D6FB239DF59D
2CEE7667F4CC4BAF660B24F635F981638F40E8CCF07F21F5B5FE3B5C115D1000
0E4B2ADAF7B1C53935EB7414421DB49A59F82D98D08351CB0BF0C06DE836CFD5
42D68D51AAD4069871F257AB7733F8EABD731FF9B0E3AD64000BCDBBEBE26F88
C96730B45C14458F42927E24318A97B48235E5FE200DB40706E9B41AF7CA33C5
67BF7766BD396006C5364D1E736B256538E5D163CDA75C4F419620D5BE5DDEB1
F7D7A55B5ACEA2B2EB4B78997398C7D38B3D7B5774D980C087236ACC7346F518
7607A19E85C83E2C6ED4F3FA8C15B65FC3D117BC5E3FFE33A5B7A69F7F7159CA
667D96B5D03E4C5E55FCB1F4E2148B4B8DA87567988F07CA181FA6A3C3C30A33
80AC6F4E92903C47BF489A2376AC02B00B8CD01DE080C96A452D52B4B56F9520
B85062F15C4828813D3694BB4BD3512541C82005C9AA5C065476148A4E47DBD4
580CB1ADD206D19E7D653E2690FD48B252BFECDB2C64C96F7477B2E5EA0593A9
84841E96F931F01B2B61C26E8450D5F2B37B51EC364BC2A1233FD108DFFE0F00
AE57465ADB0191B38D14E89413FCCB77A9FCAE09F59A3F5C352570F7390BE91D
178255E10C02CFB7B679DAF86EB351BDEBB8A7D4DBB9C65715A1355FC8D2C355
BB452D44AFDF7E25676F3D6F6BDD983146333DDA29DB81DA54F44DCF5364857E
A20DB59006F78BA077D29ABE7A537D2358B1DC13AE97ED90F7D1AE27A1CB55C2
F534E2B546BA5531AE88840CAA741A57ED1F4587A72E74AFA15F15C69046ADB1
B3B6C392AFD856716F96B850D6FF61144F6A9E51CC1B8A86A35087D4A3A37081
D7529F94493EB4739C267B8C54B3A1FC2146237C1D110D4A10112D496250647F
37A36F59299DD9529CD003AD4E0847689E519FBB2B7796420946754A6F74249E
9F5EB754DFFAAE0F1936A0063645B0F489940C0030CC4694BF66B002DF4A5276
1B6CEFC37BFFDB7D6340DFE55265AD2D48616DFA73BD22222ECD57E442DB41EE
4592719F816E3A27E315FA2DBBAD1016DEE5B7016B5BA9BE25E8F90C80723BC0
3D94376DF869923899FE218AF45CBBF0E38549F95B53F4D5E0EEA2F21919F23B
883C113C2E7A8DF0AB9C9B35E71B0BE1A3A7054146A46DE0F2FBBD5CFED6016A
7F8A61F00CB29BEE53D630388563FEDB8468CAA3E1D293B7697284F9D5F01B37
D2752C9A5F0C21F16EC4A01E067DB113812C14D9DCBEC1A17F2212E2ECCA4F11
7250B3A0724715C8ADEFA8F99D5CE873DD7502F400C55B61C691B78B52C1D4FE
D8479E5EE106F6F34B6B241196FA5646D2E507D0EA5FABB6D1D6D98C03B86F0C
74712B2D95BB6056E615C7474753A387E4FF6B9907F28808DC922FBED2048DA2
E9134E43358A1BE68E4C0DC54C87637B73E85975692F213E2BE3E1793DECCD5D
9140740EDCCE24BD03520B38959380B6F051ABBD09BD9CD5004F460D7305ADAD
EEC573CDD9DBDDD561AD9478A3CBBF9BEDBC24105236974C892564D5763D3D5D
678FA7AC5F2FEBD48F301B04F46631626586FD77921C79F575FE0BE7EDE23CD2
B296D91FAD48CFE9F7057A15179405D42BBE43C3C78AFC951EB4A978F69AE9B1
461204A79DA7A83DAB64C4C4A54DF7FD68DFE38FDD969DA9F70E7A3A9B86752A
F24A30C27A698ECF1F2A27D1350245DBC29265D6E482734D0B9BACA185FC7A19
600F8556FA28EA44079C1444E194F203932638DE190F0106460B4AD4C5D6D521
E9D0A70DB96B4EA9B94032220D46CEDDD65A42D590395286B738DDCC7ACC2C77
AE56CA498120E091F5EF2D18A5E138784D2FDA7B846BDD490DF62755E2E7F9C8
1FE8C4F9F1F2AE3B9560C9DF5FE19125104AD5A57EC21CF733A46B22C39FBE58
6A54E537F1FCB2560AD582DB153772FA61136A0A5EF8DA14A4C003B01CB92257
1B8E5E7DDA3913705D4DE85888119AA4D61D6F8B8CA62805096958867164E637
2D6D30E160630F4E24AABCE1AE7CC40D079DA0F02B88ACA6D430B0B46073D4F6
665C6322ECCE114006FFFDF09FB92E17D06B177CC07FDE85657F2D4D2F5D53AC
A68C542E7D45A579C9B5EAA32C8B4BE682E5162DC70CD52C30C67B52B16D7847
3323BF39F516234A18987DB1AA8FB6ED253D3B7FA10E0766EF487C44AC82226B
078A1C7A6EC31AFC38BD2C9EC30610B20843F0B1AA4BE4B5B380BD963108B932
CAFAE6923E976F786DEDB9CC353A6E550D7779D1096790EB7D8991E2D2BB4E21
AB0F1F05AC15094F74295A600E14395583C6946BEA9366FA00256173E278E9DB
50981213A7D9299D2C3B33DC6BBED4E65399519694F03706496D40D73136E87C
999AEA015E7831E5F160BDDE699BC970F920AFF3610EC5F76919E2A2D3F5ACD1
7568ED4CF408AD2EAB8255BFADFD37C5F34F1F44CE15795AC32581D93F3F4563
0436BC2FF36ACC85FCE2574DEF28713DA320017AB77E3446729589AE82D126DF
66470585675347BBF6A2074CF750913408898597F7435BE9DF1EB385A03695AE
C9E07B35405009B9C02A01E7556831A82E131FEDC09C58253CFB7662D472E564
B8BC72BE04722FA7D4E667D46E490AF4376545E4E28A3538E8F164DEBD60224A
8C78DD3C100C6D041D64C9D936C3EB7ABED512D0190881DDBA03FB0AD24FE56C
42D514C959A06CB6BB15D2EA311917D2C3C1B6D39DA7AFD2032DED73FD98F2A7
17227BA3304959133842BCB18899CB255AC4EC46251483E5E398E579ABA6E746
B04F4A68ACF1E2BFFF80C34E60B8BD45A36256D2C3FA67F4FF27C4318A78303F
0D11C7854CCDB4C3B06A8E33FBAA299214F50A38AD523808886658507D715AEE
5C9ECD037C9C50A02CCBE14C718F674349E014C85E31E8BBC0BB599EAD780C80
12D526C1F6153496DEA24E0B4FD5BDBAB0F07A6D08D6FDB079C623E82DC3C627
DD51F6915C41CA49782E7FE53BED77A9B65C590E9B0973B657F9754A90FF23A6
7E95A935CA38CF309E34E82635C5B350571359CC6B85C193299C6874DDCFDE4A
7206A1A7566B2A6D2323A119685A865B4D51E9544A5AFCD0D608BA2B62644CC9
7507D7E6B5B488B786A3D5D0C5AC21DB720AFE85A10215743DC4D81A61857C2E
DC3E8EECE7F818B0475D122E54B31A974AE7F3279235DB43B2CF25D0F8922FD1
59833D58A15B8A627CEF20A36A720A94866DDBAB05ECB19B7A2EF055190A458B
0A22E9B884B90B3D4F4EC2D00D7FF31C6B092C8538AB7885C7112489EBAA47EC
5E778DF56355685E1627339D8FE078063D07B064D85706AF9B1DC771FE00BFC2
D946B323C30F175D781D78C12E9114AAFA7230CA539601C31B0E7FD3A7A8CA89
AE4DD2C6E1117B0366F659D699C29A6D08FA9068B4BCCDF2D74B94334FAC2559
1A32569986B1194290C46B0DC8DF8BA54CBDE5B86DE38A1870B6BB38C9AF5994
0C1C5CC28BD0C23AFFDC1B24F4C8A52BB6015987FE531CCBEDF454BA1C7F7053
A3F8BFEE0CD475F7169D733FDAD7EA8F0EC62D1859FA598D06637D10D55D8A33
6B327FF5EA710D0FA1E9096E9CB4B05609457984127C87AC4539A50B386905EF
879141FEBD3F7CBFEAB38E703873A392BA327405D0160F452ADC5E025B1F47E5
3E0B12E168736DA700EA349F801355E2019D2BA30550634A100E550978468453
4C99996C13B2AACF3ABB36C259E30A3874EAB4D590ED749F8019BCF0DB04705F
12379EFF71DE8C6F0A8235A57C5C76588900ECB063BF926789E909191D777B10
548FBB0FD7858735BBFB184337DBE087213AB254F740DAAA6F57C294EF7E63E4
B2CDDCC65C0752307CD207EDE8D1D29052183D77E347C19EE260A9B8C0CF0FC8
BD5046157A616A0D575598317009432B88201F377E7CF92000BAEA108C0AD3B5
EFD7CEDF2534BAE1AAB8449EFD258C8D65A04EC28AED978B268A939DDA9F2DD9
D34A779C0400A9B390D7A23329B775964992354A070DE52DCF3F8B37F8D22A05
32BB8A6B78B4E16199E37D76FEE49355F7B12DF7F9AEF7C6465B86CD775520CE
8CE061796B4B9C83952786DBD1D640458C1E46BD598BBC7282E57D26B3533178
D6766E5B62192339FDD94D504616D83205E23A19504AB579D8E404D20A7B539C
A705A5D6D0D95483E00CEDC15B0C4EF952209BE28490981D42A23D02909474B0
D7031FD53B47B8613BCD6B1E6DFC1E924578BF1E2FF6A23EDB14126C287E0C98
F622E73DF9B0BD852E65D5FF40A8BADE67E28E21FB6A8023F43FE0DCECF226BB
1FBF9CD0EB06DA600839FA543996D21D9810CD1AF310C74BADA34F9A113AB1E0
9C17F43D48EE4C83FE3FBBE28EC591F5B803798BCF974C805187F6071BD71588
59EF87D1D8CD7FA5F2449A22CEB4E4E2FE23F07B8BD93C1F0A07239688AE5D81
496FB0D5E5A9AB47B978897EF9C772BFAE5786D817765C470B0F48868E62FEB0
34AF0CD246DF0701477FC61ADF10899E8153EE95EF060F2F7CFE7DF6C5296D23
31AD429C86B3E584CBEDE642BE463FC0381F12D9D439D455AD21C35ED4C8CFE1
CACFE3FEDEAA5F8179E0ACB8679A8E47794B0D62B8C389BB8BEE907B01707A1E
781AC19F265353CDB6A90631D4BB27142148529E867BAA99872A893B21D360A2
5C7BAE71A8B08E6E32324D2D009BBC7987A9222E730B631CD788CFDED5EF5E04
9BE8D6B1784B4EC20A141937EFA09F7720C50A4EAA2F6D504B1624B4F8A8D489
233C5A09D29486EECE85610F00574EF6C57284A9703973A3EC86AEFAC17B96A1
BE58FCDEB5A75147DA6E39A5099AF1EAB36522985A4ED66810EA002C3A861872
6D8DB761D04C491F273FDB41AD1211D4773C71E17672A1F1A69118D005ED1893
D41A28CD69907D722EBD78EFB61F3CB2DFD70B9FE17C846B7F0E84917762F11C
7AE29E0062C599CB02B7385D5060B5E7CFDE0076B367088D99E7F6A68FF20997
6E82B586574622953BC7EB17E48CD72975E17E31622EC76E9E59B5E5D315B038
D7D0C81063C46C995FF656DB6AB76F1AA6AD912137109C4C86D1EBEFE6F16F35
8F078CF5289353A33F71D5649BEE691C26D4BAC25DFD0A1ABBC4C64AAE6C9032
19BB85109C88ABF3CA8576859F72F877F08B8EE9E5D63430C5506B7BE900CD71
AAD746A1053742EC70F4D31A1A704B0E1ED554890C3C02317350DBA9F65F9AD5
E35791459A3C3E204A3D9564CF93FC7547E7F54ACBED887636F68627F1BE5EB1
A7DC0A5780E135D8AED5DCBE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMMathSymbols10-Regular
%!PS-AdobeFont-1.0: LMMathSymbols10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathSymbols10-Regular known{/LMMathSymbols10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathSymbols10-Regular)readonly def
/FamilyName(LMMathSymbols10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle -14.0362 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathSymbols10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA966BE78FD2F618C28B35E2A9ABAF
CFC1090C3FB0905252C41AAED38054D177019225F56A500BE560889E991201E0
4F9B605C0D22769EDC54E591E36E37E5FDE707BD42C0C024454DA2F639F72A9A
562B5C1D32C6F47FC06B117D908616531A8379DCE1701F7F184859612D9F84F9
0EE31AEF799812A99147A8CD30D5F8F8F033D677CF5973762278DEE78C7522D2
2503BDD4843BC7D22B723F8FFB9EAE1A365FD5A465501AFBF49D03BB5CAEB5C2
C00D92D7940CC5995D94BFA90687C972A362AABC211E7ECEE87EC66D7FAAC514
CD571128C64BA31B3D6D1EE29A580950C167D6F68D121D24E942C325DD83E3C9
176ADA5BB429335D8B64EE8DA6DD276C2E0F1AF529E27D9362EE6FBE6F34E3EF
730BE0C9856D232D02FF8BBE7B9C3903336801664B1F064896DCAAA4AA2E9F9B
6ADD0C342EE025775974A2A1698D16193E213A4C9AC3F2D5F4533E74EDD15794
F8F2456FD2DCD50796D5F9A7FD862FD9B5414B6C0E98718AEA2C06739FD91939
D22724207E144B6D7AE3031311717AB00AD53D3C9B7A5D0E6FE1D717422147DD
712D626F624F8BA5B347465B53327A9224FCBE2D659F188723A19E11C4E00D92
70B50D3D5444404A08421C1CD505780CD852A25840CEDBC9E1CCF5DDA749779E
7A1D39927CB9EA17271E1AFB2C1937891E8F4A2D1950D62D2B484F4005885762
96579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FCF88A
A072958C75F616D971E4E8119833F4BEA9D81CC7B26F2DF718D3B6A703BD78F2
CB700660069EDE978BF7DD781EC63F092EB43D2DFCCF8479D6247D7A04ED87A8
95522498398D6921457D06D28F8CDDF821A2952FEFCCD910A8812C5A2E1CDA07
2D9A7DC6F3C396982DE5A1234195AF657F79C43D543DC31BE92BE270A2C52131
8376B9807473096F6791C855155887063B1B27DEE8771DE0FBF0A94DB173C46A
C53D51F08C783B2AE5017EF863393113850793875697709861E50EA63860BCBD
4746CCFF44F0A170A875B6245B17861E28EC28D50FB9B75978D4D7919969931A
416110D7D81BE6B6F0862FE61618E8B5575F5FB13461FB79B473A8EF5C815A19
621A9BC5B1C703AB24CC6AA36A96D66D67F077FD6D0977E8069DD79D487A67EA
1D9A22A508EEA8494F7BD45B8D65D86C58DB747A2455B41E7CB3D8C64769914F
77F5C7C882B7BF79F5205F9E9A1EC74128D2448189FA0AF72A54105E7A572DF2
54355335500897F2123353CD23FAC7E2B86EEE2936DCFD6F0539158D3B883FC9
107AD8C633ECBC2EC7B55F467F12BB61BB5E69BA4A04B118AF10776110E31887
3BED624E3B07B6F315F241825ABD849980EB243937D3DBD4B158DEC281D83070
0BDE3C3A46F0BBACD422F8C2D24A8FCD9B5351F64D0D5C17307DB0D983B2478B
82FBBF99BDCEB4B92BD72F54E3F35A448F9B520EA55BF8D0E39D1EC954B803C1
9DD4F5B58C4D2012E04E630F515E958B699A14BC349FF6B535D1F2F28A9FDBF6
1B31883D9235708F3988B2668540D20345FA57D34BFB75310C38B48C2012E0EA
444924FBC760A5E32C9378F20C4F652DF6A4537FC25299BE55008332B6ABA853
046FF3647FED0AFF1F33FB13863341D127CEA81A0F8D82CA44B3B19D36FF290B
4BD1B807749BBF6077B8F99CCE03F54E22E2B141D5417FC4E56B370A532044B4
4E8770C72E6CDA1458BC8D2C258ABBDAB9638306F1E4C6D8B2386E52CCE80CD2
A5F47EAB3653BB035A95679F52ADC07C1FCD50B0605AB38637ED07E3102DEE7F
67FCEDC487CC1BA684FAD744DFE06470630DD70BA62817A18843C3821806D490
FAEA107416545AC5106B50E0674260A62A03E86241BE8CC3D19649FFDA8629B7
93323C6667FC8050FA03B81AC1440BE054B510F4E5D0A3B407234F77CE6C6B2A
C123574B351F4DB7DE9FA7465FB6DA43DE5F70207821859BB191D5E6E8006BD4
4687F4217FBC59705F61EDFF43BB0B85726BF1049ED7BCF5503D59D5E268A7B1
8CDA44073AB4F0167597A4E9FD85E15661C360F953E9B6EAF3B1FEE3BB3931AD
18591FBDECBE3A4E005D065CF75A24C723ED3BE4A0AF0BA9180AC6A12D1DCA88
65922BAD30FBEC8DECB2ADAD0ABC1DCFBED577BEC9CAF10E4726150E60CCDDED
0AACC9CBD04E3E151DB13B0529F03725A1F2B4A1215FD3B0F0BB10CCE7C74A00
39C511865639317E23BF8A8D4B2DBA49EF3C1289054BF6E9131ECD191F15FB7E
1ABA93DC4A08BC43C79B43D8F2693E7FFFF8FFC688EE4FBBF12A7B4CA9F92E79
07BD0B292D1CB0AB487A21B4F2FBDF5BE2434118077B59E35152488B83E98287
E9687A85D31616619625016A082F96898C6C69E2FF23414B67146C9AADDE7B21
CF75BC4B566003B04D0603504CCC2185F2F28106A6F6446A794AEBB0EAF5DB7F
01035642F55BBDD7D39DE740D32130F78D12CAABEBFC3C78FF56D5489E58A32E
D524F24344738012C6443A1DE62056CC59D300BD3E3160CC0223ED838A08E87D
0FE5E68F47405128F79C14BC638A35A14EE211EE5F27629AD6F4E4F73201BEE2
F2F21E5C4AD2BDD8F0D85C6620225CF5A057DE907BA39B496D9EFAF28ACDD4E4
8E27E9316F744D7C606AD07B7258D2BB63E98465816DBD5999CA9BD02BB6F11E
2FE0CB1B0FA23390B65FCEC3629A510035CEB608C35A0F01559FEB1534BA0DCB
67E36138FF7758D4D35FE5530DF3D6C2D4EF637B861E6D73D714B43682544EA9
999A0DE422E88161ACE683EADA0A9B1A566411548E532B7BF982C6700D8EACCC
3973D6A11811DDD09CF57315D804C5E74B82568F24A6314E5F6534CC42A53D21
F411A3076F22569A9BD942A1C003255322D57166317FA3E957545F83425DBE07
8E4805361931F1867849A73B97D87CB2A29327BC07D91B43AAAA412840C45989
52858E2790EF7914F255139DD5581B1D992A1D8ED0E05E44E7A1A15E8644C291
6D8CB19558DA7FD745287205EC2E2AE3F8387A8DCCD83B03C3E1F59DCB7D39B4
EBDD987523E8C07AC3800732D75AE6BA4B1618C8FF7ADB3935BDE6E3DAC8DF4D
81BC6A9192844AD3EBDADF81888779F8F04CC1E7ACF5E2B77474CBBC4032D868
46C0B335B98343DAD51797E3EF388476B9AC28A2C21C3F10943A91BC4C38BF08
0C990942A29A17B77EBDA3767F1561D605AD0E5EFBC0C1D84E10C987B179330F
830A8D747E3583BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: wasy10
%!PS-AdobeFont-1.0: wasy10 001.000
%%CreationDate: Sun Mar 22 11:13:35 1998
%%VMusage: 120000 150000
11 dict begin
/FontInfo 14 dict dup begin
/version (001.002) readonly def
/Copyright (Metafont original (c) 1992 Ronald Waldi, Metafont curve conversion by Metafog (c) 1995 Richard Kinch.) readonly def
/Notice (Copyright 1998 Taco Hoekwater) readonly def
/FullName (wasy10) readonly def
/FamilyName (wasy10) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Normal) readonly def
end readonly def
/FontName /wasy10 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /Box put
dup 52 /XBox put
readonly def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox {-23 -1667 1720 881} readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BCF7C3C3333173232E3FDBFF43949
1DB866C39088C203DC22FDC758584860EC7BB67FDA28CC6208249060E18FAB32
204779B5C03C0493BBBBC95CF02692CC4DEAA8D2EA90B5C2E64374E92BCB8501
429B8FAE4A76C0C6B76D6FF7CF9A7D5EDFBCA0E959541C59BD05B7DE43D25D53
FC3DDA6EF0C2743978A6D03E19CCED4A11F2EA4BCC3110BE8B8D9E2772361969
C19258EFAFDC276CB1ADE9208A941A36D18F9FB1C33DEF76AA315DDB02CB1AAE
36F1D7B67C605A37687A9C3F7067F07673039D1E3E1F5D9B09E6A389A55EBF12
06E72531469F768EDBC4DCCA572BD608C4BA8F7EC3E5BC61C6D949C94A843E69
0622F0AAEBF5CB25A2395DFF6342106C198751CF0B33691FC18800254AC54C04
02494A0E3670008E8BA57A3CD823BF47494F2EF9244421A8A0AED84D153D7201
BB12EE9478DF00CA573F64C2474817FF401EE94BACCA8AFC16E776665C3E1E31
89AEEC906A2B9F8974BEA7160C33F0AE7FB04B2666A5B16659D6DF66A688D80A
B531D9F866F21F15D55C6FE75A8787091359698E434EF9C129EED0427EB96787
B3F25C530E3664725C63D4C5DFF9D05CD13619FC41A001275A78C58F85FC7C4A
911CC31CB426231473202A698E5715B032D2206BB361EFCBFE3E32BC0C8D9BC1
353AAEC62EE632FC8FFFDCF6E7D928F562F689406CA00C11C7EAA723B62FFD2F
5F6343AF494085662CE2CE880B04F5589396EAAA8823DBCDE56D868B9E66BB8F
10EA91AF37D76A1BF27E69C2A2ED1D8B25434C0F205313ECB8A6E039093FFB32
983346BEC569B175529DAAD1FFEC1A9302918FC947C390A86C061AE0F6522D79
2D4FE06AE4FABA59F225D7ECE2EECD4BA1359DB18F8957F551C5D6F037F18545
CC6D03EB2DCCCFA294492ED72A737588457E5B18FA4CA0F6D6D8963CA35DFEDF
31A684FC0388D416D7BF6CD9837AD8692F284F24B80CF9F24DB10DAD0C4198BC
2D2A52D9F75CF6C52C7AE0D8D4598DB750E9CC97D0FD31EE8C598A2FF3745694
29DA808141AF4D8F8AA36D7DDCC3457D5E082B2BDF7EE060296721D44B092E70
3607B2335488925E41B22D659C8F0FFEE19A7C19547A147DB851262E47E9C4FB
0A8364BCBC1C77E29A1183EF185EF35B9A5B13170730ED52D5C52CCB460E7D37
F4F37F772794BEA0DA201C99C52F8AC2E4CE7FF33F6ACB796E55BA2372E3B035
52C4F57AB5C0BF828DC7E5A8F8F00ACE0120B99667816FAF5D736BCEBF7D45A5
79C9B5EAA32C9B672D764D2F51B2393ADC71A36AC0D5CA76F3F571D50CB4C1D7
CA77149B8F0C98198919DC43890B0BBF10075D53739F7E84CEE95B40C3DB68D5
6E9847E37B7920412068C3DE2065A77281345980956AFAD312499818890B454F
5DD8C92695818BA4DAFEBCDD4D268763515CE077A64C5F3AB384A6DFD7DD9641
FCDA0A3344B3A14F82D478B4BE7BFC2822A4D67AD3FD07B11589B93842066528
1E51D954D7E6019F6921DB9B00ED303B4B8F557EAC7A0B0340A268B0DDB25B3E
BE0982129B0D3416CA5D07ADC689CAA181270B8141F9D0F60C60F156CB305E5B
E71D9A5D5FB3216BFB66284FCABF6D74564D1288EA99D3FCF6F29C3AA690A596
02C0AD2BB29A2D457C66031E5571A1454758212EB4D053F4C28FF629FA94DBF2
9677AC4B92C4DF5C7FFDE31A8F2D6F9477896C11CBA890DD464C9231B1C350E8
E8CEE17F2E0F5D10416F7D7FBC6085E9BE09E692951EA7B93A9F49CD458476E0
A380E1D122F275093ECFD398FCA6D714187CC12A2B16318F9E1D2B0E9EC134A2
C4D2674AA68D2E7EDBCCA383
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LMMathExtension10-Regular
%!PS-AdobeFont-1.0: LMMathExtension10-Regular 1.200
%%CreationDate: 16th September 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 694 194 0
%%EndComments
FontDirectory/LMMathExtension10-Regular known{/LMMathExtension10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.003)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMMathExtension10-Regular)readonly def
/FamilyName(LMMathExtension10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMMathExtension10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF105BFA1C4BAA967B9A7DF802734736F3D61073FD
8ED62BDFAF207E10687AEF931F44AD55F9C3DB174637A34D867219978D9D1BF9
C733804DA26B4CDAF23436F0F8EA2308CBE3665ADFAA59A240036663D9ED945E
8C22B3621360BE02DBDDCC3BFE082CF6230F8C83FA4B6357682B7A7DF35F166A
FD3F889D853655FEE984B52090BB8D6B7EF8DBF3B1D022B6586235B32899053B
0718E16BEE7E146A4753D6E3FD6C4B6BD9AAFC2AED5748E193D28CF6A8391414
41971E41C481638DBFBFDE2638B65D10FE5FCC35EBC520E3520F0A0EC8FDA853
597F3C2E2F60B8DFD431DB5B1796737BE979C821EEB58BCC28A92DD60EEF767E
E861765D087BCADB269D7374E766D4C2328E711F23B767CA5D47241039F33EE8
0DC9D02C1D4D91AA0E59962090F584084D29E26056AD0E2B1FC4C1257DF003B0
748DEEE2A30AE53AEA24FDC43AF62A66BADE0B3557F9F4CAFD659CF933472AB0
8922041D5D0DFC41603EE166FDAC7C89DA8D63EC1CD0E2E23E45C5C81A5663E5
C6952D28B285A1C349378D5D07B5BFD7D742DCE097383EF86C667BB651988158
47B4EEBB5E1C035CE74DBB3D3FC9D00DD3D28DC0853DDADFB3C7E642482047AA
87EF5639DA5CABBEEECB36123995B88946D1D7AF48D7C86E718E1153F8A4093F
79457700C6E57A6BB805A2386ADAD90E2DEF9354C8785D11DA504D44CB3B6118
C74E1B7A174BA2664E6F25EC8AB818169B1A250D9725677C72896D4CD4A15BC1
EBA98BA918D1ADFF45ABE8C162D93331FF301D17DC8998230B8C7918089C70D1
65F57CA3361018FF92DEFC60063E1A6926B7780A75CF71E1DBEECE8BB1295F24
4E7AB8080FD30DBECAF8DEBDC436B4AF98A2328B7EB946668117CC386E257083
7C0EDE2A2FF6EE7DEE7168B436A033249C8326F5ECEE6C952EFC6D271378AFA7
90A3AC4D2C99F23AD08C9753D7532D4B1BA3170AF923DDD58EBC8E8ACF16C2C3
5D2C311ADA85F37120427290A22C1457445383BC4172260A0C808DE8FDDCF84E
47010EA39835A00C6F15140839E1786A2C226EE6A4C6526AE5DA54FD4DE5000F
E419755D882D794E35D87F43426B64371277BBF8B4DC168A19486FB44100333B
7BBE1FA99D924A09B20E7CF54F6C86A39390575D5ED4A59BF74D1818954CE619
87035623AB8DDEC101D55543FB93BA5928A9EF4789F1350905881AD6417E2155
13F8A8224D0C05AC2BE886D9D90227506923ADC66BF831DB6A50FC87F73C7A65
06BC917B848F8153A380EFEA1E6CB3991EDF9B3C4852FAFF5B09E51EA5C8E01C
893816BC320B11F05B7FC797E85957CEB27382EDC9D924ADC1B1AC7AAE6732DA
C6E6E6F989D279899F03703CC82AEDDEF7FBA2546ACAFD43498D6FF77B12E7A9
F7DE287FA97D0495E28CB8E2FE2A4CC0B9DE5158AD0B9BFC4919F2483E9868E0
D59E613B99092C8C0BF69D200E2BB4A8AA530ADF5EEB2DA9FB58AB98309650EC
212BB664805A6ABBD010D85C3565B2ED2E163B076525960A6D8546E89E3B5856
FF297CE67D686213B04A0E31B1DCB5C970986D4097FC848B3A4007E65E69E6DA
EF6A16AD557C736F1E2E0DC5335569CAC10B058728B0D75946DBABC1D8B09675
854C98672D73879B235A6F76305CD31DDAB165FF1D41C0E1A0A3F7CE986FFE28
31BBA86EEFB16ED59CAEC1DDD24F62FEDCE93A177D6F9AD8E5BA9740E60015AC
7C655BB24BEC5911A33F53FE62A246DB5E2536D7BA4D702C318670FB537C03AA
960488C73ED313ABC09B86C90CA8376CCE595AD777DB7A55FDE4D28F85F94E84
412CCEF928FCC906B9185A8392BA92B22F4A76331C59F4D7DA841E6C27CA91DD
6FD0764AD36D3F6A88DC38877E791887C2E7B2A874F504CD213F5557626E7E16
3806DD64E96C830300FD9493EB2DBD186DD0E011FC26223D2E9DCE839A878F52
22C0416075E1290D0B03AD56D843DAE00B8D7DB9F457B4C1AD44E7CB75527D05
B2A0BB66387EA2E147C0EEF146597D2A5DB96AEA59F9942049CA3C8B2634AABB
5CF3EB7B50FB16F54DB9EF2C770FED7450599832D59411A4E65106189AF558A2
1CCE63AC34EE20910E1C3DF2B664D0D9F2218773838E5EA15FE0C7C6E87CB5CA
21085C77292F3F50AB47A348F0E54FED532DD3BD043A9BE99CA2EF17F93D196E
A02845846FCEAC86E741340C841085F9CBBC828DDADE0B12716EE9F2419BBB23
65466B7A5178F7F4A3A4A644A74B1EFFDF53519224EF7B17F0FC88B539534110
A6882C6762051B049B41CFE03EBF5BF50F1B9852C94BE9D26A68D67E67BDBA5C
D5BC39E942E75340680EA276E7B51762F4C88236F5F85D3BDB13047098F272A9
013D99533EB783E122D2622C3A6DEE1F9A041F60A317FCE23C86F34965951328
244582148AA6DD25FDC8995744AF78FA9D6F874F15168C19D404BBC9DE3C7193
F5F8A4BD0C74CDD8AA3D5DDCA74981703431C1CA005028AB3B35312752D523E1
12301361A6387F6943272E7A801DFC303D7AFF925114E00592F12DB1E850A82C
3C4A43E60485B22DDB826BEB2B7412F43F6225EF2B366859C9151D15E190B9C6
4B18F53212E3266940A0A6DF8E5AD70E34F9736A05CE71A6487013F4E9CD3AA9
5C6AA980B831B425BF48770CFDE87AFBDA486C8F6FAC61D249D9B34A43E62FED
5E06ECB38D26DCEBD8A755B5AE24D3C1C9F913148823E77478A94D491C0318A4
3EBAB94F4CF8CDDC5FB91B2210D7D260214E37E0795471F4EDDC9F55507A4D2A
BDF320D72AF580EE4534A8827D998B78F1AAFE82679D42727298397A22233B80
1DB2A9046665B5C4DBC46408692A7D00452C5815D7E6F42D58A1380273AD0DE0
13B77327DEFF821BE64C179C977270311F2CBC417B32E0991B39A103C6616335
32F44F0EA38BEAC603984AD6D265E5D1EF42E09432390D533452E32B7ADEB517
3EC0B32FE6690371D0FAAED2A57F50611A83952C4B340853FE115AD79FD38B49
79FFA163C0804DD8B564536D13C2332093F98A3B764ADA83A226F65A82AA7196
0B54E573D609C1CAEF0662683862154C7AF89A362AE21D90B7C0056E89473886
FE9C67155BF8925773E3030E941B8B902C9F29FF1EFD743AB755D40D9B82C38E
038AC9E401A58171CC0548CC249E64923A7135CA52B886A2F997DE9F5317C63C
C34A5EE04018DC8F5BAADE28181CAD9A3244CEE218E29A41C84BA05CA502BDAD
E7BD202FF91487142FC7E88622F27820380AFA620E9B8A2FF8C39702D899F479
B58FB5693D021C97F119A97FA1C403D08A738A294FC99C33FF997ECD93EF6D13
BF047ED1A669720F8D3359B3B86F3DE1D771A3A79A7E5E1A3EF6E13FF8928C4A
A20FC1BAC0F5597C58DBD28833565155B22B02E754919ED8384E6B8A06C7A7C9
AB04182810A42886959C470A6F6CDC8E947932D9870B15297CF0AE0A931CC244
7BB4D16FFCFCAE0384D3384DC5B01B55820523979FAE9E4251C82C42F7953B6D
37639E5CE084C60C846B7A84C7A7F40277E3BA84035BD3F405099F110AE8D9BD
194A078A03876588D352DB4BF9C825250A60B78A94E366F5004D6DCADFCE98CB
500B8EBC10D8F21AB5DDF2041BCC68D4873DCE328C50845C62FDC651ECF41AB0
8041C37AFA35FABD692E0DDB4773ACAC1E2A9C299609C04EB20A65C9B627C5C1
2949CBFAAAB5D9F084793DA0D0140394CD551EF5D4F60778D3269306E5FEFFB1
FA0A487C809856B813CCD35C497C7448E77ED63C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman10-Regular
%!PS-AdobeFont-1.0: LMRoman10-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman10-Regular known{/LMRoman10-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman10-Regular)readonly def
/FamilyName(LMRoman10)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -146 def
/UnderlineThickness 40 def
end readonly def
/FontName /LMRoman10-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-430 -290 1417 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E4018CA53FFC8B28E49B3AF8134528F971DEDA
55E9075B8973BD0B1C001D7F241CAA67472027935C0A16779AC34D17950388CF
0E0191A473BE7581A249D043279E83EA19B511D1D8FA3933F37C594054DB8297
45ECDBC2E8976B243A996D477A529B8667BB3FB7783D0B773B952A4520909BA1
EB4AB2FA4D38CD9B2CF575F8E0FDB2E85A6D59CB0AFEE208F8B5D960088A941E
6E9BEBBF2E02CBA386FDEE2F4A0A453A960D80C90142B34FE01BF72F67105E03
114D181D6A3990035A36F1ACEF46E884A818302042894B42069DD5885B97B047
D34FBF7245DEF708B5E500E71FACA6F55938C1C9E03601F110B9B96EB91E0E1C
58D594B02A771F8480466FDC743843460B3AFF1867367D645017E2A7C96B0FBB
A9189D995DAB0521ADF024FABC33682BDB8605155E5D1813E23B4A9890D852DB
2AC72D7543ED8D34C8E29A88758EF0B5364C156A3D213BCD9060892C3754E0C8
E5ECD8CD5A580EA0561ACA1E90AC5D7729DFA7B1CFCCC98DB829C1B2EA250F4E
B54CDFB18B56D98AFCD392F4DA49FE9F9CFC94137C35FA857342908ECF4D0019
6506644F2611FF4E67B09224177126E4E059D7C2A941A01BD875FEAD28864048
1DDE56A671FBC3511A79E5EF3F153E265FD840474B66B830CA5A09455CA1AFBE
B124FF3365AD824CDBE10A17B08E3A47282CE6140B0966D4EB82CB5B034DC6DC
5D6CBE6E1C99160BB1F4A87545E4D6D3EC7E30BF52F8F79A877416F69BBB5EA4
07530D50EAFE96BF6AC0F277A8A357761836E499F221A6DDE9AC0A03ADD0EF91
31B26E4332321F4FD59C51B515530BEA1AB37479F31B9E6E94E5470A0BF30403
FDB51DBE8C7D053D1B5FF78EA8CA01F3CE6E1E8E573F5EE8C282321B49B73D9D
3E9CC4C3005DEB4CA3A2828B2D8BCDAC49F4AEFA7101055E20CD98B420454D0A
2C7C4B3933BC81AC0FF01C1D51D262D6B85AD7B970750CD0D6F2500EDBAB25C3
46F96A6028A1106D2DA63EA507C071D06D71D60CEEC9FC68AAC0ADD1DD74B262
0156612EB4B21A3F4ABD34403540C124221FB9DA5EC6C7229DA9A1D033AB828E
9D80023B2C8E68FAF7A38C925E0587A1CCE432EBBBA598B201F5AD036BE7C8AD
B8C411BC79646781C4519B89DA648B919EB362176B83298EE2D8B405DC66D81A
9AC387913FCA9209F9142F9CEB88DC7864ACE2139716A8B8BCE22870B2A8AE03
61A40FACAAD0F82B44B4D6E4ECBEF48C6E2F39CBB2B53B18DF7F144E9FD272CE
6A23BADEFC0FC80B646A2FC08C8AA1C44A2A00554667CFAFF8A417D246F28CEE
905824D8C0FB19279F86AE6C8C6B3B5D4AB4CFAC640686BC6FEEB9C1DE214972
4C015A2D62C7ACB01966717F9C4AAE6203DBC7E60275D3E38C7F66058EB798DF
3A42628DF4378C539BAE628054B5C31D23B50C2B33943C5AB05E8304A43319C5
8B569F751361768EF816F30DA12ABDF5C63C5B1602823BBFC0C03B7A421A836A
CD4083FDE377A8E800BF093CC74B3F067CC1DF9F37F37B225D1A63E440A719CD
8CC6D148F1442F1386DBC7309C37D13848552D03C07E06969315884369E30CFB
BD715C131435EE885780EC50DFD4D90B568153D7F09788C8877FF9D119C062EC
9DB71DDBB40357DF31989908E4FB3FDA3303E6BC7EBC8C3F90ECE5DAE3E02206
E93022A0609D842ACA6AA03E96F8C117951E672EC54FCF9A8273B7989D201B16
1E870432822FD897B71CEC0427D5FA06B29F527B6A236CE267095F2193898745
610FFAD3AC143DC9CA8CB1C3931E36AA844248234F51BCA6F444C2905A4E241A
269ED51FF329D5C0C86D9C66ED01B85534A1E39BD5C20DE216B33240C40D188F
4E304C4610FA7CCCF0512FDD24CB36B40AACA15B0FA0098083597E359F090380
51C4BC551BACA6F728980ECFB1E999F4E0E329B15FE526F0C6285E5D05CFB53B
F7212E2933DD050FB0820AFA1B2ABFB2AED5544B06AD48DAD5E377C2F375CAD1
3A904419D9E7F6D38731EF1E8CB0917657EB749149E1D61A1EF50C19E72FC8AE
9D835BE39DF765ADAAA523C72A653D19D310CC10E9080C619F102E6C0EE4F80F
05C1AA36C2027A88763A7F0AF2DD0CCE40F2CEFD4D785A43264BAD874D4FB758
1C7082EA167108BEF6F7E34D958D6105130AE25923E7EB77C0FDF5286780C376
3D9D24E27F7FECB251C07A0CBF632410D7D948427FF6782B8850466A1FE66362
4FC26E88758AC01C1C98B568253442AD48691C2A47DF05F6A7466E87D3020FB2
D824E71394F6605CBE638D9A6B5A0DF28C4D81535BA76F76B16C6815E977CA50
513DA81445E93555250A43815E80B39AC00F7086BCB4B36C35CF2E4A42B114C0
7AC99ED39EF436CBA30F8EB1A6E543782DABE3FF805D54945D6DC2C09A0F32C2
954C689BB04A12A787B88A966DBE3F4C2EC9888B56E96241D345CBE471FFB513
9002DD5225DAD211F5C72F3127A60A33D311387E6DBB2951640D74E59891DDBB
4526022E00B54489023B0FBCB6540E7EB3B2ED0460F81AB38B9240BAE8424443
749F272CA43BE6C9B5CD3E674BCF858A46BB2D1898684401E25CC37C0FF9DB9C
5064E2E468F5906C1338EBF0AB1F2B5C97A5E4D6127212AB225F2857D0014DE7
F40568FC538A0EA2E76E1F62790DA67887A81FED8BABAFE9416AA5E06C7C4C60
0BF38B70C87E5ACE2C713203A64DACD5FD072694C71A3AF841F9E3D07C7B3788
5856BBA23EFEA2AB1902F879F1361AF8C0421A296FEED926836406E96C49A48D
AE1DA613DD54D9C840D4896A183FF4E395EB7A69DCE16AF779DB5DE506A534F2
9DCF33411B194DEE2EC1B99F36FA1A11D14A28C0E938F608AF10E3B31B98C36E
5AAA15FF94A95B38469000FBF31BAE9CE8703754A099D21B3329E0471463D457
0D4E89F4CD31A93C312EA4674730466C3EBE9F8964D358AA76DE110300CC7B89
8FBD8BAA1FEEEF4E78760F8A25C60981E6372E49D71614BB4E6EC7B1ED60BBA0
8F874D9E1B1661393BD85DEB50C29E3DBFD4613BD0DB2A70E57CB73CEEE6A51B
72B52020AB471FA444491570EBF12F70F2863F9CBC2CE3E571F5D8ED5009FB80
9985FBD9A3E99D1D6124A3B4DE50749E55267744E046627E381FF09727EFEBB5
2E59282E0199771B95DB671D4B2AD846EBC0109861075A936D6F2508D429C625
85777EB9E6E9DFCA889F03CBE5A9FB59C55523ACF1E394505886FBE4D6F739C6
6BA65248D16465F0743C602C6E12438E7E9CF6405EEAE7CDC599E8BF2CE72DE9
FEDF547B68A41FC346A14D58EABC55ED2D98DA057A876FB35F46EFA6A949A75C
F1DAD4E176B50DB98341C8D442F31C7CA70CA4411B4511BE399A1EFFE6AA02EB
E529146BB9E0D14D16625D3C830ACB43B26371195013F74FC07E862198AB570F
44DAA7CD767C726E7BF288414284CCC3E6FB3DBC5D11E9807F8B247CB591852F
EC9392079A91D02F4954FF97236F55AF6FBCD9AF0E167742D0BD0E131BE7AA98
E955D662DC9AD78F82C29C3DDC08B6A551B0CE96E180903891204F4EBE911581
EA3BE89E4CDAA342B9E52F30E55B902ACC35DE87E70DE8EDFE7D803CB0770A2B
0B8180E5389A54B85BC69FF37B8CE078CBFF5CC6F11D65E7B61ECADC94491C5F
F034CEA604CDF5412886758D49CE07427C96AEECF83C52A4555178C7AB4DC1FB
491ACDD3A0CE09DF3D2AA01AFC9DDFC002A9863D9382764DC241811B3912F36A
B2CB1440EAF4C36D14A899C877A1F71CF5F205C8FF35460B37921BABF917E5CB
A23CCBA7C46C157E3088F4D1C99603A5AE29019C97D03FA54726D906264C82E8
AED7E4AC8F66E56EDDE14DB1462E4F9859384B15882C6B0E2219186DD528D0DF
17F15FF78FCEB2CA616D526C530E1BF18C3FC7EFAC5BC5F623465E81758FA863
78485C3F65040DD351580824450D62A12078BC053A65AE1FFA91D645A9E26C29
A8311282A2DFA57985CEEF4463E64E0B7DD8D11FB10DC168A704C2C70DAEC483
F6942ACFB86DB9C4EF5E16FD6E2A4523B99D267AA808751385186A779C73E575
948744853BCF5547A7870E7F6196444513F4AA8D5FECEAC8EE88C8830B526ED9
264D4F56562FF445F348D19317A058A4FCC154CEEC13E60A53EE79C07932518C
BCF295C49DD58CF10B322634A4B9ACF5325B842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF57627DD17FCDC5BFFCC5CE9C78BFA2B830328F9A6D45FEEC239A
D76BEED158DB3BE2DC4BA1DC216B2D085F251E56B085F80C7C11DD39ACDF31FF
8D01256B7CED1EDFEEE0376E57B6E45D2F375499F8118EAF5C7F6607DAFC48AC
6FD2258F0314DA293F61D30028BB0FB43F50BFFB3005B677A74AC48E341259FC
DD1E8D932840FCA3727301C942C987A026992772DC2A0B06D5E4AB1186D81001
AE4288BC2EADC60BB6225D9CB6CA887922B117EB0E7F81000CCC4A20522124F8
B7DEACA9E6FB322B9B66DE572DA955FF06BBF51728AE6724360C97CE27BF0DDC
551716E8E06DDDE418B6E3E407307088DF1BF21C09F61DFBD19C30D92CBBEDE0
59D026A5A2D9B65246D93E36A7276E70D11DE1DFC7E967F6DECA7277FCA73E84
1737D9AE81C25EFAB95DC9FD91A124F9F5AE28E844C6C3EAF7DAB0FEED7AF2A9
13FB2CE66241C5102CAEC3992BEEF1999CE2A5574EAC934945ADEA6DB4E4DCB6
4BB074C6094FFB7D2AE0633C33C8E4823681C0A61ED898C571006202CEAFB5C3
E352E7F66C743DEB4EC14A3AE0EF469A2CDB23445830D0F304FD7A9EB6B8AEE7
919322D2FDF6C7D7906EDC7EBCD9E9B6AAF63DB3AFB9D9B87CC743CD66342BC3
BABA111186A0F38F642261843011FB3389DD944969E83C1B8315BF63C3BA9B84
9EDD5F620C7E451943A4E3868D2F9A6B78E6AC615258E663C9D255FBECA07BE6
FB4B14EBF66B06D640012D108ECD3329117185F2DCCD3CFCECB7224FC5E7E437
7C6E1F717DD65F6A274994CC40546439FA5A60BC3719653E525E49FF6F778D8B
ACE4664D86C8FDAD35CA3EA60BE1E28418837CFC7209F4A7357804EDDB05D506
686757C79C2ADE54B913F1ED476E3D86BEEA512B1FC55E137D23FE61B7D69D1E
E48363146DB3EB9914CE42558ABC90B623AFF1FA2CB3EE64202B74F76E195C0E
3F2B12B433D7DA1F634865DA6E5ED7511E1D930D074D76A35F19891E3842733F
8AC91FDEBDF9F8A426019EAF34A2B13634F55E964F8B7C21D937310590871C58
2F30C6DF5FA2097A078ADFACAE547DA592695486DEDA95AD49D2958D1F43A3CC
E7B7B9DB269FBAD050E6082D8DB99454AEF0AD0088753DEB92924B8AACE496E7
45ACE597058C23D84C0FB8BAE6E8B396D944701FDF7FD723D145E93B12A799B9
D0210E411564EF88E75FB2380977263E4EB261F6718EBF15ABA15B45CE0008CB
D8D2B7A1FADD93BD3CC207D8623EB59F6B3FDF302406C8F16686E31B66D8C1D7
E8DAA6804AAE5DE138E8A311A4A1330604D0E557EE03662BD31AF90587A45AE7
42E8CF9E4697F94F59B8AD259D2DDF433930B270C63EEEBF992ADB20C9F233D8
85BD42C04DC9300D4CFA004F89A55999A93B5A3EC2D3098ED38FC4CBC6BE50F1
4FFF4452CB1B96ED0E58AC65EE13077831824210531E56CCF19CDD93E462A12F
35E45673FB121E1AD75F20A8F4E8B29789DD95CA5047CDB13FCDE826D3AAE15B
CC039B1C6A9C21674AD3ADB75770688524E0B4D3151C5E51D640C741C6A05E85
EC79363ACC8A5F234575C256306A3E2B5F6A6ED4C48F6D4440488AE7C9B57B85
DE61CE78FD299609DE1D6795CBFB4CE95D68E3C7CB1D4A8DA1D0AEE7CAD1983D
695AD1DE3E935E231AB657C704B4FAADE3CCBBDC7C31C1FE52D8A57D79602D65
BBA312E072096DC25768434E7B56ABD8AE83CD6836A2A624A32128393B9D463D
FF8B865FBC10316F6EC4806316954E90817A74BFFE390FE7B5348DB0B4782BA6
D48AEE80D379CFEE11E4F1CD9A521023438259A1AFAA427959EE4927606F08F4
255EF756643EB591366950DCA06596B169C9665511507959228D5480C7AA0DC6
1F197A9CB5C80A00332184637C6FD2198C1D859D45F35E20C5554B0D72C262A2
3CCB48B112D5ADD2E056258AA295803C60070F8E89217F14F953CC4015C38151
4C1E1BDF36283AAFF8AD785A49E091119556FED39BC1843053FB2909D78D0CC5
BD0202C8FB9DFE45DC35209300AE63A15A7D983219EB991B300213F2BFD5B477
A7342D64AC059315DDAD1A2FA1F4E8CC6969A0E25CD23969EF9E387BB3BE62A3
51C14DAC4BEA7FB4C8F38C6C51F6431DE0F8FEB6C3091AFBCAEEC0FB3F3992A7
7ACADC778ED2784B3423154B7FC03D43F47C6F505869EC5039310EF1F4ACEA1A
40014BA27BD58490D243E14831C19698C0C0C9683827A13C1735D2C649C0D4A6
BE354B0E303F96F1A7DA6410CC5D3F84EC5C9F615650160747A724AF9C66AE82
CB864AB947E3582308319FF3BA95FAA268D83B462FC0BD10BBBB8DB7B12BB101
1EEA4891546F4AC7FCA094F32499C0F8AA33D2C7D00283804FD75276BF2C4F9B
E9BD77A75D5A1E7BEC988F06F62D50278904F0928D97C2A77894DADB216105AC
441F7544C3EEC8F09A260BFCE7C040D10575084BC081821FB759B9016DBA3AB3
9FC05FA6C191F7A83C324AF0629A269BCC414DDA1570B980F3596906BE0D23A7
1396BA0A0F3335B74FE5BC3367497C95A462341C8707177AF767B83F28AF4C0C
F952EA0D9C4176D5ACFBC48D8A48074357B1B8E5B17C698F2052A9C6410435FF
3D114F67EACD436BEEC8ED343F64C6CAC65D8218E75ECDA7292A0F2FBB4A6FDD
7D52F256FFCDF706B456B6886F5FF5F416C079AD248559BBDD2767549450C680
3B603B312979604965F7E8298F454E098DC4EE83D9EE5A229DA5B97FF0861841
31743AFD0DC1CF828D0993C56493FBD38744296B82E3908A1A0CE811E0CA2E52
A0EBB9F4998D40FD7B001C660CCA6AEA8C43CE8FFC9D1AEB97BAF55DA23B2FB4
A868BA0A41CE90D7BB6633CB481DC110FC14AAB8E9264F5EE49798BC49D9D9D4
9B9CB9429CA197321B545625093FAB4BE53BC96D108520D9CE9193DA216221F8
42FD0F3CB18D4D9C66FE5891B484C4F3ECCE8A8CDF069387E4FF4967E9F11717
A630BB0422421290360984C499D5C2F4750008B8107BD17C259B723F956B5B14
7E7C0D6AACEB4C9F0ADEEF68329D5CAE9EFC75DC15A9494E876104FF7675D11D
E1DFC7E967F6DECA7277FCA73E841737D9ADD1D1BAB1961E212D20880069F0F3
B5536CDE53D4A4D5012B54B227A0C18DA8A43ADB7593E98E5E0C75197138FE3F
BB31F876BEE000302935A55EBFE1CE914272A8F50A983AADC0604FD17B2A2F43
06AC9C0E2C687D1D9ACDBB674244037384B36372980DE4F1819DC2B4F825D7F6
AF5769BA3C34DE43B531F84B485EF8F360082659FFD797F6E37B87EAE0447EDA
DEB00764A38DAB429277B77869A70AD62AEA3CFD663916700C95E0023599AD8B
F5E4383BF2D5B1F79DBE83B6B7836E42C2E1AE0093867B0F2F8C4E44A16A51FB
C10F2F4BD0EB7475E396C85116A9D3FDF82014EB00C07DCD76514565D3E6DCBA
5BBF1E7E65EE55B3A8CC8D2229A01DD3EE09EEFA659502F90DEA0CEE99851BA7
2A097446FE8D54CEE9CBC3B88AF70F6D0234ACB6350CB1C56BB44AA5D7005841
0088780E87F8A0D2F6D2FA07D508BF3F6314B934962984C7FE400CC9AB1E5F79
2699F15AE7E181FE3ABC4B4C70E21F3AD9AC49685171C47A257EBC1FA6B40E10
B77C81889061E668B9444D08F3EC366CF071C473CEAF7FA64B863164AA97F309
B76EBD1D860A54D8E656ECEA88768396EFEC282AB93B7CCADBEE9CAC7E77D79B
A760EF4C53A3C983853C30DFA6B0093FC96F298AD1B5807C33A89AB14673D370
619267FFE6A05DCE65C7B986CF466B6A832F1921A6949469ACC2B5EAB9F109C3
6C9122359A60190E6C42C713A9BC911105DDAB231758BD41BEE389B057A1F7D2
5215EB9D0F26C738D1E8782D670AFDCFCBEF6BD68AA64D6CE1D7C82A1E46EF79
FDC5CF1DF72D2275F3857BFBB4FF234B2192EEE72D2CD5E415EA5C1C28F4B537
D15C66B6CA739B8D92F22E3DDFDA20460C55C375A40A34BF6BDB012F333DA135
67389FF89C666BAF1696FEE4BDC1B32589E1427C1749969DAF3B72CFD1F579F4
A62E705B6DD2AEF3D166BA507A1EDB131616EFCF91246FC75DE3D8A915DBC82A
1E46EF79FDC5CF1DF72D2275F3857BFBB4FF2296C19E66F93DBC8E9CA5E86793
FA37889936F823DA9CBA746BDC1BA4A84F7B70846E33CE5F285F32FC4E53A284
1E737ABB84A750A16A4999D5A59AEB5FAE6FA51F6C8CCF447A19D91B8CC30481
B5C49B6ACB4DC451F9C524349EAD4DF1F0DBB3869B74C2373223236E809ABE92
C2630C9A877AE16BC30D56A0B208DA546903B801BE445518F14E701BE121A6E3
C832FDC31C1546BF0855A6767030D9B6B47266B4A1084BE171D03696A026FA7A
544E4D106B9A315700669D9D8A3D985F44DE6070E8E4AF6424F3048173F52CB3
EECA756C4D24FC6054D922F59B105DBB74686310F635AE6153D9E18A0514882D
4CCFE9D44B8952190FB9EC8360698A45EC064FF735101C9B16BC27110FDAE792
2D97BF0BCEDAEBBDA6BE7764CAC582CDFB785921653201A8230C66DEBA105E89
909D76D034C9A5C6A216EE8C2D9C96FF0A04F2EBCCA2467174529C592950326D
E46CC1E57DD4B2A8821A8506BEF79EC524565788A28F5870230E9DA69ABC8078
8F2F72CEE5F5594F71A24092D1CA9BE1635F769E2AC1459B0B3AC1DC117B6296
C31A438AD167AD6C39AA2FE5CCA6028CB3A7EA6A0BB569A91BCF947E682976A4
A993A413FC97F6F1331B12604C28FE4D8F7FF429F96D0DCE41EEC1EA29EA44F3
F8493AB33413FB84F35B3C0016089A6C4D67EA0050A0381699FE2E38BEFB071B
9FFE3D7574FBB32CA8ABAF8CDE383085DFFD5EBEEF83D696C0FA27B86904477A
22C09610E936D310AF8455122F4C6B61307071FBEB6E8DA8C43C5E1C317DD3AF
44E46800FED97CA40252808F6AED21A9D6F3EF87869378858BA7E6E918D5E464
49525A4A5A2932DB6208081585CD9A312B09793B1C1FA05637430A13E5AE3E1A
3D5B471CAD468007C4A6BFEF07D313E1ED2F47BDF624179D8827CA4664F96F70
03D7D0BD14633673BF1A66D0126713294E13C1A4571B8A9E6D98EE5C2084E767
98939F0AEF7E64F621BE09010CB6F43790AC69F122BD9618E23C7FD95CDB02DC
661ACA0D9FA5DA0CEB0D82EC823434BFCFE218A4B5FF0264F1EC9818FC80F9E3
E06FA21B47A2C431ED3DEFC7267AD9DE87E23C2411D06FCABEAAA6D87458CCF2
5F198AA55DBC4F8AFB25E33D6830FF6333593140C974A8B13E94CF0E77EFE6EF
C2F0C2FE513C93C7EB2528CC8B0472B5A579EC88E8BBC1480D4976695D2851AD
FE75F0E8AAEAF174FD8B2D5264FDA6E40432CB09DCCF5C286D5EB04E5A7D952E
716DDE9DD17F51C40339BBD717BA9555F70DBFCE390F10FFC62821D7082423D4
6EB801F8502449684418493C3E014D603933A576C6B0758D49F3155D448D505F
73A5206D1647639FBCAEA8108A2649D23FC552CAD67A60480964C6CB0783A8AF
EBB8E005813FC0D89420F1930E18323460DB56C9DF95B90D45EA22620C2FA7D7
521D7D4B3FC1FDA5061C6F4B994301864942F3C18428C06EF16DAA37D7CAE4F8
5E3CC5AEF1EAA75C658E90F0246C18C21CF073CC1D7732019B86C11D799B79F3
3BB09CB6771F637D534DE9FE49A53A3812D7DBF47D9E8A2D353B48627891CB99
B8C759187CF9112E3619F9ACCAD376725BFF2760B9ED7576B9D9EADFA0D51077
ACDE9DA732031E629834097D62B5D90F48DA5BDB8D01BD0DF36D531892BB3AAC
16F85A63CA278DCC38682E1BC6D134930242730DFD14B49376780164C5A1F030
379CC9E763CF518CF9E2DD410B31012ADDA5B9ABA7F5EB2EAC54DB67BF9CD44C
49474B134D42210504E4254BC7510C4BDFDF53EB3D5F54D0C6A53862B4ED64CD
18471A49B62240FEF22F4D82468E075498FE2FD44122E511E5FB2FDC8CBDF6A6
9012CF9846CE3A9A6DE5C947140AC48B22EFAE3EF8FE12D52CB3A260C7E0FC2D
A6ED47D61F83DBF89585DAB88E81AE9FD0426205126E4CDCC23EB4C431FC6C1D
BBF79938BA64859723C4637574DAA16916B8CC6DC32495D5247D877E4B863070
61E7A19A3AF4137889983657F78257CE77F03D0E9DA4E29707C31DCF1707AA65
83AFB9A309EB1599591812BBB5C8F3CE43DCDA76D261E3F7734DE2DB7D9BFF35
01E5A6D23CF1541ABF3B301F226510EBF89944E4E9C5376A9F2841845CB62FDF
58F84CEF83450F3CF96A040F4C2047DEB00A172677774217ABBFEDC33DF60D1B
D15D023EC0FCBE6548410923051F875718FAC168E4E2720E8D959D339DA26151
5C42555EF75A03385FDF6C7DFA8FD7D02B80E1A845766CDB597CACBFE0700303
409164B5CD1CB0F12CC3632AFDA9076C2B4D0CA7D89ED2FD03763D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E388DBC639CAD5B2E83C049DA71FA49785EC
5565D2B3A261A66C9F2C8501A2E9324D5E6F0F1294E1C0AC67EBF4A840618B23
172EE2D3E6538CD9B1E12B834A6D01EB50C781646E30ABD086CF9C09A6B0FEE7
416646141CCA188014A29CCA5AFD1215D847550DC0F06DD1F83FA50D4F154867
B579F69E34040E2AFF508CE7AF4B0D544E70294FCD49BCCFB65347FD1767DFDB
6F85337F7B399827B860FB08BF9D15DA7739FAB5D8E03BD8F283FB6832C3E10D
341F8D147A88D61C5990E609001B853B273DB140A7DC69895E465C1ABABD4CDC
88310748221F5BDFDC2306912DAE1934E475C3AEB56C96D1978FC7659ABBE845
A08BC6EC9EDABFDB1CAFF5FB8203CE3B25721168DC1E382A5267627FEF41D963
44A05EEE4C43E2AE24657176B6C8D3A0EB5A8C229616709EDD4096C1D4D817E3
96C6A55FFA4D67E59B58C6D9BAD063D247787282EC4820B3C3A8D7EAC66D120A
3911D284DCAE2018F883AA804CCEC457CC6213EEDC75C8890DBECB670000924D
3BAE8E7A8066D804B89BD943B49ABF548E5D92C1D6151D1ED96241CF76510076
26E9D2EFFD007A8E985FEC263E6C90BAE36C27D704E88F1F7BE09A971CABE15B
724B62BB0C1A5263449707BC0ABED19F4F1ABEA27322584D473A1A888AA4DAE7
7864042EF587A6D6C04DCE664BF83492D166B205011A3E283257FA60C5AFAD3B
71CF6D6772E5E77FC5742D4D77F4B9576213835AE7E32A2B401C36C3D58214F6
DEAB86E06EACF7F5DA3BC32030E4E23C5E0E7E82C4D1F9BD7278685C4CC54FE1
C1C4332F05F5AF14E70FADCA465393A7DEB7DA08B3012A99FB2FC7F6FF7AE570
BDBA718AC1E0ACEF9AEAE22E5FA653C2698E05E0E072A7DBA0702C0CBE5EDF6B
D0A5B47D7929F5C9317680A392DE0CD7AAC72A99F351D824F86D33CC89BD70DD
41F435624F598030F2E7121F6A610D640FC7E512A28BF6C12496361A53953D75
312631D6F07794B1D853251462B4D522B6EF8FE6D2DC18EB4C02C6BFCEC3E71E
20E6D98720013BBF6307EAD2720BD9674E2AED09E56CC6D3BF927657BE2D0749
3302A5492BEA01CB223FEA3B6CA4D0A35D6F2C5D17804371F9AEBC100D7A6D14
14C37CBD273EF593B596973EB054344F62115963E3F61A1A2774E6837D2DB796
482A00E2BEFBD6E3758A5A1CE621ACE547811799B1D7893DF52D57BD6C1A6B74
4024CFC65AAF320264BA65EA8FE3B2E77F515CF05968797241B5BA06E190C023
55C664139419373923D5BE1FDD292F80E973E271248B2E3AF05887FD5142811C
2572A1D4B9F9539CC6D9F441AEB22F4E871755911D8FAEA73E35EB7835FA1C6D
A4635171C47A257EBC1FA6B40E10B77C81889061E6696F50954EB8B347918C49
20C7142A2AC68231DD2AF574910705DEF2893D8D4BD1C3ACFA2BC75EB9471489
0422528F5121B7A7D7A973F2EF67F2795E6DD8CF55B98238D6654F8B47476E40
98ED693455F82F098F49FF48762D1C9622E0B64CD190A4AF3020654123563C5D
6ED62F1387AA1BC5F00137C6AF5840026DA68D8DF87CD5567644A09B52124E10
51A715399BBD1A6D3704BCBBE1FFF89BCF8129B98D35736FD2CCBB0E36AEB664
3C283A61B6E8613BC8134939CD28AF21976B42B06A63719C44432BDB419B04C9
19DA628C6A5B0F4F626E8935AE2943365C505CF5C7955AF2EFFD964AB8EECB15
C33CFF111F801E31FA0889D1561CB28638D1D24AA9F358AAFF93B9564AB4CED5
632C12606449ACD326A76B011D9FDD66C24C5342A5575E940A10EF9A7C4E0857
59F390036755C4BFE971F6DFB9FFAC965ED71736140A0D41AD571329C7FE5460
ADECF79C3543E3592283C6770B4087ED9EB76ABFB56774C4A21133E594461685
A92D372D4ED3F9DB786D7E7245B9B5DE70958048F037C56C14FDBCE691048469
BC488E501EB5DBB042B02CFE90432FA7D98B533F89DB0F21A61657E268166431
92F6AB4C4265A5C2599F55E134AC2DF346CD7C05F0C4B63DC1C10E03B9D34C67
27AACF1040ADBF7713E3898334BD99CFBE66C4FDBDD9B9180626E338FA32B67C
16195DE9D59A0F447B8DB69CE8FD6E2ECA90C6B424F1D39D11670BA89B298DE4
0E91D1CBAEDF3D811318D493DC71793E84BBF3E2BEE2EB813B03690C774E6DCC
F2D7221490784231EA6CF28982A4470A7156F1C7312FFAE07D32B62AEA32B58B
8D127C00F3B953C795C84E1A158E799D50610BA45F2003568AF44E2EE4DE711B
A128C91C36EEE43CB41592BD13837B9EC9735996A1376BC209B8D579F6A057A2
7AEF243C4B389CCF9385CE645C882CDB6A03A7921BB9F85B93AC64F9C82C455C
AC60CC9896FD453CF3AF2307B191F79C5C6F070D7E814EFF05F881CD7EF43871
21F72EEB3A9ABF13F7A9C46AABD4D0D976EBE8AE53D3AFDDBB926B54EF0C41B9
8D10342A2BA4F9908402DEF9AACE7BD76B3D4A244E3AC7442DB6A705BCD7E2F9
DD7C73DE15B222ABDF7DC3B76EEF17AE4CBDF387FB03FAA5AD122CB4A90F479A
EB32B0CA993ECF07D050F04D4CA153663EFF8A63016F79C7D0E464A57671FED1
E50936B0CE6E364B62411E6DF77D4A4DDF74455394437C3A7B477AC27F75850C
FED5BDB2F07349EFC5134BBD646BED8080D44243E74485FB82236249FF6726F2
D6775F15948A9D4DC82D6F60D7DC6F714656E89DC882B95552C5215183E5FB51
605BAA7948D6E5102CCC8E7AEE127E914C372C6E2DD84989E78792EC3F50C186
322A81E6A8368780A2E815A7EC49B29EA2F4594EFA2C1C079B0C777ACD0210BD
A4F06EF57BFEFA0FBA572A16A81DD123F8434BE971D9EC8149468CC0F2C45ACC
D61E6DEA7CCE2D711A218FC3953EA7B36F464567F208953F9AEEC1EA50C522B5
A42C4A99B079ED011928C2C8CFA17D95D50A7C1599E62D4FCAB001D5F9DA84FA
530D65FD2738BD6BC724446933E8927F3AACE64BE6623CC4CDCA1DC0B686ACA4
41E316ED0CB3CCB6ECBBD05FB823FD79EEBAD2F9F0891F553381C5E352B4D7C4
C1678904B22D75C8E8D4ADF7A319E9EAC6238093C798878E5D5087FC5390338E
CC499C043E346A4DBA66B7EDE932FFD9780C75301CDA60558F65241DEE49409C
10DB07153317E1A13947E293CC426E38653A16E2A7EDF6D500E9237793DBAF2C
6AB5E2DB571739092A476FF45FA1A1CF898E3FF479C1EF67CE435AD93677B705
BC81144F2E45854E93CA8D00E814009234E2A36EFBD854F868BC9301D33BA670
0EEC06C030DC43B2245F9D24D31A31F06EBC65712C870E62BFDB244441198618
3617BF19EFB5DAF155F0957D038B6FC5BF776DB24668F0F4594572EAE33CFF78
6BFADE79FFCBAA6606E892B2E41A173AA590B6C92E254AE642A2EEF5D51BE02A
C50855B9158840F97FA94CC03CF388C8AF7468EB28FD5E0CBDF9E23D1FF320EB
F19E60F85CB9568AA9C68C085E87B32EDCAFFCED2FA9A1619C3D1065724C6F56
79589C83053D4C8C9B53912E217B51E90F13A589F452936A798BADF461C448C5
480CA1D7A929044CC07FCD6CF9DD7FCE413A0B2CF777529685854F63EC8FB112
3A12157DE158671515E8FA0324852EF95789F16A8421B4FA121305A1AE54DD69
30796B192862AD337BAD6CC06279077389A26E7EF7030CB43C182223AFAAEE62
0EB7E7F02C11C1B52C95B6B66A2DF1FBE1991088128B8B12C2B28A050B50BD46
CC83DDD732C8EA609E2857FE8377112784FC50B3E2940B0D30B506FB4732B2E8
8F32140F3893EFF849FE4E17A69F02E7B4C69CA806A1A347B174992DB8D542BE
C631C8069D0DF3B6F3A5A80891684979154D98437D6BBE4C8EEC74B6D9BB7D6B
C5924BF9AB0BC0438C5F9AB06D6FA688C48C7DCAB3F09B9350C42F6BF7A4521B
21554098DCD8F7DA254922301AC847E5CE09E60F0839874318C8389E298F5546
71CFE508839634A81ECF5A229D2B16EF77A39178507E41DE72C0B30162242B3E
F7756A035C0529533E59108C550FB89650C5B0600791191AE0D2C2D576DBD6A7
3FB4C0722AACB08ABBB932D5E6A03F957B7C64E89BB59C4ADF019950C6276EA6
1AA9465BBB3A56AAC8D14E62B83EF68CDE87804FE10153467FC0AFC951B645E3
0ECCABC655E635DB463BE72AF1223D0690DDB88C7DA9D59148324E7CA0701024
42574818D8E2E330E2FE5102B7F4DF3E4FF521CA5741D8C57CCF85B7887E6A7F
6B6E4F61160966AF27B74B21C9F3D6882E3E909D80E0762C58ECC4E243CCE91A
946487E546C6E433A5C5B9FB7D5B97F2B4B202F94545C8C3A9D70992C1F31DC6
753222850ECF459A7BEA8D8482342AEEC5762713C43E7E94884C06329D340EEC
ED08ED58B05FA74B94FD084CB58F31EBFD5EBC6440498768C234573DAA11A489
B87A3C6A208E9CB0B30F7AC129D5E7217B10FF89AD4A78408DF8ECB0A02D9EED
19239FB927915A02D3D85B0C237669DC17FE1A48D20EA8C5D2A68A4127CA7332
E5039A2A7E32F2389255B0491050D86369ED418F2926916FB309B314347EE3FB
1EA13799ACEB62CB55BE2301E115BF38D18AE8461F466E207613B6C091C7A10F
D77A10F08ADDB19E494C72ED471DF04820F4F3A6713E67E7C08467C617E31DFA
524A30DB697FB4139002DD5225DAD211F5C72F3127A60A33D311387E6018F5BF
F946CE8D7834A3410F5E6EC14CC8E47337898E5E8367724E6A7662499EA3FCC2
78B616531C0CB5BAD1940ECE80B6479023DA0394E3CCA13502D03B122C2218B8
7DC1A0A15DCD491B2BA40939A647E01CA6143950A0D13DCCE128401BAB4E3322
2A22ABB177C6607F014F0310C1E7BD29FDC20E11094E2852779FC5C0D5DB9D39
648317DD0820EFEB02CDE5BF84E5F1E8C8572A5A86DD74D4FB3A9FE077F2E6D4
384BE6BC394E71C5DB81E42B90ADB935FE3468186ECD90E2F15FDBB395191E6C
465F4AA552F9CB59DC4B0FEE8C937A0920796C09CB74B3EA1DA5B74EB358437D
0CEBB9E03109C593BAC09CA9962533B3AB0EE6EF76418EDA7CC6B8795043E5FB
6F899C3CD8486A6DA3E670E6D13BC51C01FAFED3D47621376F2A271728AB7439
3AB3183B6CFFE1D0E2948B24D2A7E6A98712527A7F3FDF0C07D30FB6436D5875
3F6AE969F727C534CE5C9001F9E7A0149021BE5A65DB754E14D890F42F4D23B8
5DB5F2BD66726A544C10942C271713B28F9F33282D2063886DA7006EB5C0F757
82A3C48BD6B7D4DA8C112653B00D7E484A88A248FD17FF0E7A075A554F98C451
C7059F491D1C8BE038ADD1FA4019E1C78B8C7656766444617C98548A8EC0CC14
829F7C67999234D302FD1E40C28703DFB713F881EA0F4B81A8F1FDE4B3C92CED
078A98A433D6F3C4B442E014E3E5A5E82E52DB5332A895046FF12D01742E9AAF
ACF2CFCAF0517858C28A24FAED300D643F1880D27C0F7D73029F171028FDDF8B
55080BBC908D26B5CD10691FB92BC2FA54A04EB649B111671B43973E31253DAD
08488B1C71AA6F08A5FE3F6222ABC942F7B152702F7E48B93155A7DE83B3A6DC
7FAF8C2561841226C56160914266B1D28D74185B0E0FAC89BEC8ADC3FC027EC4
7FB0EDE4D2906CF1B55597831D98B643B81D2FCEBC963155762A1019FE6A9467
DB7E5464F6CEA824787BF86ED78492C31CE4E8AD0913637E245B375AAA5B76D5
95F18A4289312E74FA9C289A53647EB6D776E3BBBC735D9E7226D2B353CC752E
FEC2E91DF8E2DC63650E22804A5B31B13418130BA661F22AFB71F8026DC8F788
188647382BE1B7891A84B9697E22FC61EE575564D48A537CB190E26707CDE0E1
B29B2BB9C4F4716519A4A62A05A7B901F7AB8E77C6FB72D7CB3D6953F1416C40
FE153C7E73D86FD65663DA0E08018ACF34CF9BA5D7A937AEBEEC84B992D45A26
80BAC63497C593C90728B12A42833DA3C710044C03A37A680D1F806296BBF942
428E9FADC28CB5AF48F8947D9BFAF2F57F0F6C4AD7C698D46568068F98C3564F
42D2F7F26014DE37C4DCCB6B3082CD71C69A1E1A3AB1C1298DF12BB54B3EAC9C
3325FDF74E1B6222A84D10CF5EE66EC13A71302C6786D05D419441162EEAD0BC
CA6315D5D70AC07AC571FE97F03509863B9CF7A0E4A8D5214D07B149EABF51C8
5F0C8A7B7BA0AC8B5A90540E5FD5922F512C0A83999C07CEB7A37F71BB8C4C08
F359CB4473250995CB6F5DA6838536F3FE0B38EC7BB696C8285F78C66D154289
455C5FF2D23C1A59A2944DC972F44474CB35738074BCB9FEE4077CC0C49D7185
B623A143311EC892D1BB9554D34547816955434DFF68BFBC34A074CB3BC8C175
4662B5D3FC0462AC4967765A50D653FC3FA379FB4FA0AD9F83269A99D550366F
C8714B92BD48CCF7CFA30A7E92FA628D056602E7EADE6F2B3E168EE1B0AEBB2A
BAC2B90A514D97941B12553B13AE64F9F960EE62E049E6D9BC9858A3ED3CAA1D
77CFB4A424858251438F05B3EA1F686B35F0072DCABF52B26423E8BA630090AF
D344BB225F08F47868D6C4D857CF0A3C6CF4B205301FE5A2F54624315981DB9E
59213A134B651EB7A024989A6D910914C0224A700E1245ADAD0C701A6F5E771B
E54B09E2D6EBFD77645845B7C08389FFD5AA6D6AED2DC26C28A403BBCA3435C3
FB7971E9A56226D46A1174136F0A04A5CEB915B8E21F640745A0AB62F15FA8D6
5B74900DE1EA95B981FBBCE8D846DAE64D91AA7BFBD49CADFF1DC7AD838B897A
D728B35D869CF7874A1F48CA79E025C3D54743A3B0CFA14625FBF274F3794F04
4EDB9552BE2C55747D7AF3101C5F1A2A1BF6C0E2572AA0624592BEBF74CDD683
40D52E137B1DB6FF17B6629B871F0D3AF01E55645C56BFB97243ADC4813F842D
E44CD9352178217879909DFE3C012CF2809984881E57668BFAA1644FA922FC56
B0B93D32362BA966DDE41AE6A21FD20EB82747C47F18DC85145900305F388143
6FF377B1500EE02F9B9B8774237EF1899A326BEAF8EDE7CF319D42D7B7B61296
2A9DC4B8DD8DD87504652967C679E5629FE5449DD1BA7DE9ABEA28C4E2496F87
61C0638E0F7508D281F5762ADE506C2DA47286A8A2312B11DE4B488136EDBEC1
4C5256B9940F0800E6DD26001BE1FD4BF642AF9525279536814044F4AE7DAABC
43A230FDAC3D9FF0B8CCCB4C1E7696D16531A5EED36C30AA15C66D5398C145AE
DCE5826302220B185F12F8DC154E4B79B163C08F53AE78243C52D4E02E82A4A4
310980801A463964F3A0BBB90D85756EBB96B5021481EA4E845488B79682BD09
F8D07481630EC3129072AEA5778A135D164A571B22D1D619980E73841F84F59E
0500496E84FD5E9A7E4A28D9EFBDD34A443F263B41A3B2076595CE2A7DAAA94A
4B95D7E9C281194A84A9ECEFEA5023317F88FB64830A2CDD5277003D6F1D46A6
DDD51B3C62188C66D7D12CE54F29D09DBF020D89506CD1270C0B3EA235BDEFE3
E24373517FF148B2CDA2B90CB5884440F464CD57295728A8AFB1A5C97B6B8F47
63D21E005D89FAEBBD7D8B06F3FCA5D7107E8B918D946E250F561E5E394ACA6E
AD2890CD407F38C53B3E51C9FD432F22202E89A91B046BA4CDDA6E23B0AFB2F7
9CA39D61350D26435EB900ECE26C5AFC283144EA933E003739EA80DD65A63FD2
020938E02C1C72FD8A4A14DB003C5D21197F835B183FDC1269D70A0B14D4F9BE
76C4CAED815AF7DEF664098CF1A167444F32FDE1796595709294CCAA488C37CA
EF08DFEF5DFA13FE0CCA32024C378A87CFE7506B67F7A6FBF8635703C7EFF67B
9F15A7315285D2565D7434FF3C75A20CB3C1B57AF37CA806711890C1AC5997F2
1A14E7523CEDB295474F36E7AB3493706076D62F4C407BE252B5F31039CFF52F
2855C8AF27ACFD99EAD434BCC277A4805E6F068CF203053B151CD82DDFA79D31
F0B4A0485F51334BDF5CD5E855A60000B2D49835C34DE75CAF4932693BCE009A
5801BF822C193040C8E053C3F1EE0BB0AAAB446819939C850C76B37EEC59A516
F15F22949AC658037300F1E113F3BD1B4F3ED7F9F55C21A04F1A6DF8168FA228
6D8C7EB944B03F3907EC73E5B4F9B71156B357F62608909B7E4BA8223442AD48
691C2A47DF05F6A7466E87D3020FB2D9D297F492DC248B55340E2A24629A4571
D7AC9D41CB1CD871395666525A66CED4C7C65E4402789D5449C1EAE25572A971
B89B24C4EA34ED7970566C889F7580291E4ECD8437710CB5ABCBF542F0502075
D90D8D5C92B3A5DB6B82BE461BA06DAA237F43C9519956A524A451083DFC810D
15C13657013193C8D83A659B914A4D5509B9DAD79DADB3E321F7ACF4A5C3757F
7F2F7FB43CE1F03A69148A9AF4418922E61AD0A92C1D2165ABB9F9059EEB9CD9
CC802AEDFADED447518971D17B6C14D5B2A021154D274B753AA96964C14FAF79
7738C1773B9AD2B42BC431C60418D244656DBCACF4FD754ADCB4B3957E1B8A79
5D720A30B7DE482DFA2B2F4EA38E7D327F0F4C117F34AB17610F5D7F76C203B9
C613AC9569CE318E21C11AE858AB0BD573C2E4B6873BC24F7DA45361E9DA0209
FB87B737182BEEB4E4D214B234397772C3DC75D6F4C27F992B1370CADC87C117
FB3C208612F02ABF65DA95B47B8C56930CA76C2B5CEB502575C9764019856433
A5BC9EC9E87FCD37FF357A0F402E4860AA1EF85DA46E6CF1472B62E5B02DCFB7
DC61766C8C32C4C9BE1C2A32798652FE0695FE3D11AA43A7F64CE81A00BB186B
6DB03261532247A8570D8234C82272497284B49FD0B1A273C1EDA6B778AF995C
C50BFE91EA5DFFBCE16BE8F29E054D8AE6823CCE5FCFD2D5B4CF559A079F2FF1
C3615FD8AF94F0747C51AF46854168068B6E7C7CF2E2432A65BA21DBEB0A83FC
660BED9D09AA6A1B7C9AF629B6230BFD81E2AC57A8E54B8671CB0B0C965A76F9
F9E81159520DC4D615A1D77D7254A4D89B675FB0ED7404CD97B5E622D15E9B1E
55400C52776627A77AF980D0DF01AE676F92338B1967197A2AD38DC5B066261B
176F897A2F87CE68E047CB9A5CCF18243A2CCB727487BCFA01B7C01E84C2A482
8F6B01E8D11FC62D903F4011323E059BCD0C4A359A016E04B4623EDD9332FD97
D03F0162CC8BDB0FF0ED90DF66D6F8D2701298CC9FDA7928F99CA135B6980954
BB1659C255392A89742025378CF853F6A8188534F53F3EAC05B84458A1D04167
8A1BC1282DC784E4B54411375A132738D0B295BE2561978B194DAE5297D0F8F7
A4F2544DA06353DDFA9C87125E5C9B69FE0A592390320498C8E8B1362BA3A2DD
F29C622FA55D54800823824AF12B184AED3709422940A8C36962BC1D166C1751
2383CF77436D9CB09895FB773DB25F1A4FBD03CEB58C7EDF144B6CC8D988E06E
1ED02B277AB08FCEBEA6003301365B5BAEA01B3042CB34B1025509BC87450B4F
D9E8A02BF29FC213DF9079FD3A534F666DD35FB36CA0D8264EAA3C15EAAB315D
335B1A481FE3DB344A5F50DA95EF3F0F95AC877A8237F7EBF5AF326230B80CED
913EB6E69DEF0F5D209914290A07373ACE6F9ED34CF5FD1C81292D7ECE889A68
D4F70165A8DB7B3E80326FBBCA7D915592A91900467DDEB103FF247068EF9B9B
43A951DC93BDAEF84469CF817A5078A751676B5DDCEEF6B61E61A0008201F65E
A71DE662017A25446984321EA37892C5232D48677DD6C49EBAB74CD0B46A97C5
88C298F92C73A3CA86D60E5028919298D7E8EC3D47A1B7110B8BE409368684A1
394EC61E87B7D7B3EEDA7B21AB66C93DF06A84B1D55E3D07F4775A6D19B68D96
5BD8D79124D5AFA9BD1B7B08EFD3E3C46E47A7C65EB3AF97E72594C518A00340
38946FBA9CDED35127DA26CFC3AEF7F5FCC28AD59580920609114222F4596B94
1EEE41F2B753588999185585F81C9AFD4A2130E42AF31A2AF987B5EF7FB5D8C7
5ADA3F1A5C5343D35B8E99B6A625861D2DB4119661265B9B784016D46227A57D
F0B4CC9D118666C78DD383D722EC2C9127C2D93F194A67FD599CA9D3364FBE91
3083D58F6096E79084A19407BCDF24BA4B41EED384FC907E25108902BAE0AB57
64195295C87793D5F78FF22EDE240535D6E3DDD018B21204776A715DE0C28F61
B1C5B1B6CDE7CEF52C314A7E84B46119AD70E23350C13A50F6D110323B8E210A
27E66F10354BDAECB0ADC7DC3FA7B24303B3C291BE8F6A362EB4A074C78B92C8
5737D05561DBF873C4459720799C193B119C7021CD1AAC40EB75EC3EFF41C982
859C7A67B4C4F01AC08C0D8B57ABEF9F102344C8FC53A43E6059A1E86D66ABDA
ADAA0A9F430A245B814972CC222CC7DC2B5AAB5D013CE6B3FDB9B1BEDA13E340
864F2D181B83DCAEF214F5FB004EAD6D12DB441DAB9EA47FFE2D1A17D780BD33
8B7A205499FCE67E946C3E8F46B9C2DF790F79269566BF9C9A6E54E34CA934AE
C76C7E9268E3BDDC3449B8D34C34ADB130C39288D0BC08539BFEA00B80A262A1
D45C835CB096F1F48793476870168A1F78B39184438CE528180EB98040FC5000
35A2259A0B74B311F18C11CC63026D8847FEBBEC727A943D300CBCD9C7E58365
8A38EAC821DFF17755D1AE1471C5FA50EF20ECB3E3080FC6D8B395542D5E464E
A9367F94C4673958D4D4F1CB3CD460663C7A32F0B7150B2D762199015DD9826A
BC4F664CAF453362E3AE4A4C2C82D8B64D30871C8FB1A8BC8472425FB57E99FE
D2A17DC4EBBF8B39591D8BA269B8CCF7AB7434D749D3FB672AB67CE0430D0F70
AF97198AE56AF6D3448C1A65D4FCFFF2CF378DD727BE5CA54B9CCF4BB6319647
736EF99D7610E03E2A71698F9D8B968FCFE0E4306944EEA7E4F8A562D88900AE
157CF0DAEA24C80980C894D77ED6947610216EBE1E9B0B09749ADB136A36AB0C
01E965F2ADFE1F47E8AFB7E2430FF5C29D2907B15C7908A0FADCFF523F04DB3A
E66697F55CC3BD66B839B561E313967A0B57292667588D0A60A045AE5775EFA6
2DD4B195236CB74BCF236F2124EB6D5FBAD96B899AB56A45D7FE5C6BC5A0678F
B65430FAD099A573D384496D5CDDC760DE72B50F3E8A04A6D73FD8F2419CA77C
36783111029518A84A313834E9E3C9722947CE71592964575B68C93285487121
FB3EBFE72A4B9268E1F3D065E8B9466DDEE6F4059B764CABE282BCF201A00C06
829558B3DF292029B22F885988C306058ED73421F9D738DBD7BE121A6CF0FABF
10FFEA6E48908043700037651B1F31AE36797B6593B8270723603F097803324E
2127A46E9DBFB0BF673AAE3772C82AC0ED80420E4BCD787F6C1979B4FACEEA8B
ADD035545E909493D4E492FC69C0A7367B644BB9E199A76734AEC487BBB103A8
547A0090F0342D4C17DA3B58792D4F9ACD92ED5A79AE617B77D886B36E1D5C29
B76606EF122451DD2380303854FC141326A5EA6C41BAB631091594C80B02ECAD
EDC487C429496930A27424568C73060D2FEC1F218A069053CA2B0A1FBF490CC3
92ECF079ED74DE89177FB525B2DFDE08713B8F3A5B734EFC711EC7925B7D350B
4BE346E565F3EC43199BC6DD7DBAC8CB205DE87280206EBD32BB042F46824DA2
5037501AF149B5DC15AEC0C2F352F81DBD13A927892557DE516712C5F614AAEE
0D8590A3A26854ED51C4A9A1C13D90C11437639C870058C8994A6AE1156CC432
59B56418DCCF98CB824BE6E3FEDA248248457A91624203BC9931F0478FD152C0
CFD0662D318787C108CF6922C96AD6DDC40EDE2FEE2D7CC70DFD584CA4BD4F83
F5B0E3183922C4A5F9149F5E9D9D7D029291BDD8CB3C4D070B704B0B0A7F2628
9F5DB72C872D87E0D06284B88FCBEB0923BBDE8B7D314BBF92D3F1CABDC48E91
56123182A8C9355ACC1558756ACB344238EDD985C41FA9CB3C0EF588E0240739
1438DEEB728CC5B35F801620FA2EB8E25C29B3639349BA52601C71E2428CAFD2
D2017A07E7DB640FE0D1828662A878270D2FBEE37AA230330D81EFC166DFD537
0D4757D87CABD63E5D229BA73D9CB7FF02A992E25155F17B2AB218A0D298CD90
EBD495E25C073D0D16E9D6F3B4ABB65565788B7370527464C55762EC46306800
B751F78F905C62D65309B17846DFEF28DE55C50162FB62DD3F3FF78C17CB2028
49141A1F5FC0C086DF025BD411AD2969A2AD90E09371C7A23DDFBEBE5DEFEE4B
4788D76468D1FB253E24FF4AA72AD9117A726322FD0A2F50DA609298469401FC
F086AC64AB0039C2838DE14670B74414E898515E2D8DB7DA53533E244DE3DB1C
186C1DEE5D7706A844F53C24F832DA90B09507D70105B72416469B6D02D95275
BCB2DC287840236DF4AC604119029F54CA530B75302E7A8703A70517C9FE24A6
930AC314870AC4DF7B45C7EE6253DD07517660B50E0F93B42842784C1788D894
FF898EC6FDCA86CBC4FF03E5A602F79AFDD125427E1431192D23878E807AE0D5
23F99254773C65920E5FEE7BEBDA867E2657828356256B69B89D275EFFE5BE1F
DDA9B8D23F7C9C77D990FECD8CFA96EB61F444122615EE02D84E95D6D79E0FDB
6BA53C1C524097F7E1070006A1EBAC155774678B4FC74C5658727C392573F542
97D947D18E7180ACDE65F8F45846939F96E456F14CF952281F4446D6E615EAB5
8E98ECDD495C31A9A03517B4161F2D4EA63E93D092044D9F6ED6837EFAF25A8B
BD0D017E225B586F3A72BC1E72A5F984E7235607EC39E49ECCEA3DB4D404C73D
283DDD92B0432BECAE3F51B3DCC1AF6A3B178E6B50D46337619F86AF1FB6373D
0CEE6B46717E12EBD4CF36A6E4AB567E41FEAFAA5F39269A9DBE9A174DD09236
BDDF5936B95A2DB43452C78FB25F02D3C222096B595CA2A18E0FD974135F38D5
40014D38ED97AC4A7121B94F320D56406F4EA3202920FE665809102BA7175D39
FD9D65C06F84A291CBEAB880B16D7DE7352BF4E87E579370EEB3875928C3250C
E7AA4AA4A2C04E1AFDFBC88D87B3B8DF640A796F4BE9068BE20BDE45E6C67C0F
A2D90CA5E3B3211E20F739789086EA4BE455FC5FFFA2FBA7DED992FCACF11FF1
A9C5C71DFEF4DDC4709FF159CF32F14383339606F4670595CDF4378BA86D70CF
9AF2C76C51962459E5DEFA0B5F0BD018CE255720FD7AE5A7BE158B27B151E8D4
F7D855C4EAE8DEC82AA77763238D84DD9BC70E96B31C3CE4C4F64DF379F6E9B6
BE0BBBB538CB6ED8D9799646156E1491E5521FC8B9CD9158D7537C5E79B4A1C1
47BB46821BA629F53BC22D8EC10EC4D12BB92794DD9D32CF139FDAEBF847CED7
829DDF6E7879DE5C6ACE79E7AA6D35E67B782D81D57BF7FD8227DE28C80E8CB3
67331B05EFAD2795D667D3E495794B2EE282A9197BAAB8C78E9ECFDDDE7F4212
8EAE3004F468947085E2A5F729B45BE307232F92731C10C3330672C958477AEE
6A433BA72FDD1F106A1DCA830D55B2C51F74EF7445134C3B55C72742DBAD656C
F6320CE66934AB31C2919F0D0FC251D0FC54A5030FAB4B341BEDC1EADCE7ADE7
C1F41BCBE74EEC946B4412B0398A980FF85A6100CA4BB99304CB5163EF7FF065
FE895D0F59D9E57DC8F688D7296DE0B77700680D76C4999A7EB3FB9C5287C376
4AE70D99C77FE5AF2F8A4F93075F35E31F0F60669F73F908B90F8F138B43CFEB
4C301E5596CCFA7519DBB19F45950C23FCDC136E434D7FC5E7710559B91756AD
1171ED3AF82CA5FB5B497F4632B1E1826CFE046796B89912BCD58A9B0B3FE187
21C03286E3A95529C1052361DE380EBE01A49F0F2932CC6014BC40095A70E353
5A76A7B6CB6B76D0CDAC6B7AC4296BCDC0A475363BAE2998C2FD754EBFAF5B3E
7506A8D328199ECE23C1F65FEB3C45554F69541532A86738FC4C2E7A3A4438D1
D16BC51653FAA26C9B2B726E1487A6B1B4871A83DD3058E645DA10A42813B79B
22B51F0060951E935E026C25847C739B6EEAD71A13809C7A580610905847A649
E4477773B87686F7F28D912D8216A45C23F6D07CD4466A31B0CFF132F8AE3AC0
49C29DE00C87705C1928CBC84B7F92DCD8A43E34700BDFC72E4BF7B7687F1681
D103D7DFC415017C2E5851A4A0F1D53B694DA32E330AC8C76E85D58B5CD147BE
F3093EB3BB05D4EC307CDE098225A478F5F2F4C32717B3C82D55168DFC95D11A
95F2A231EFA975860530147A410D7B83F8392BD64E6E57D1ABD36E6CDD85BCD3
52025B9E738B75BF20C63B321F0584F9623A71F05B694C7382FE2E102C920C27
726380FBD329D29ADDF290883487CA33B8D530CDC57983FAFC88F684E6A2C237
143FF92C26427B4DB27572914CA4189749A74DBB0EA1CFAFCDD853C69844E3BD
6829B0EF25EDA2814492016AE68E31049841CA58F23680C0DA9FF7E6BF4298E5
48FE405D01D18D888334B7ACA789EAE744D803921A773BE8A081FB687F9AFB48
0EAC9889FBF269C4301C5AD39C601FB86D4090A34AEE2D6E38C9EE3260EAFD1C
1B7E9CAE9EE810B4C79521C2EFD2FE0CA35B333D281640515BF9C595EFEC75E2
CC6CA8BF306700778714A8D7AA7699529CECBBAEF482925F21CFE17E2DA671A7
FA88213B596074FE4D777E00D3FCA47E507EE6EF317C394275A8D4EA9E4728E8
FE7F4A407ACC5DE6C22DF58627399F63ECFF4FE661FD5B5512FFAE7EEFF90937
C6FB7A0C27C56B44B37C97E610E12796E8F6D2EB9CAEB51D021C4A341B3FDDF6
431296AF6850EB727B03BFCFC98DC527B4A2A27FC4CF05A5F07B5FE8D64BED64
FFDDC683B50F16A3AACED2042AFB7CBEA60BF41F60C1D342C94322EE4191CAB8
60ECCFB206BEB3A729B2195F29379C4B88C50DF01F591763F16FE1D7E6288F15
FE4F89517D4C07531E5FAE089A21C1D49A89D60D9B3F637DECE05A34BCFB971F
B63CCEE8039BB28DDC4825F58B6C3937F7A3D8165EDF4C74CBB662283EA7360D
271933E0BC9E2F4B935260E4E435945E72250237370C1A56F5A6771D14EDB321
6934A39C1D621945DFB146E906A76B29E132634A1E34B04D9557145C824496B3
6F49C893D942C145C2204CFCD6A5C69FEFC25B60E414AA9692A1C0668E6ECA00
5FA97465C599A9AF76FE1B774F3075C1F2DA4318DB4204677B4C30652DA10155
F9C2F253517BC04AB08EB03EF22105AE17B1F03D21129B58E7B3DA406DA85CA0
B7C26E68F9E48691ED23DB0D3ABF6A63C5ABBE84D7A5B8293A52908D4E421628
3297E4F7ED3803862F2CCD410465A031E1FA28D2A327DFF5132BC78E868E7D56
04DED821AE4C939B5267804B04098368C2745896921AE83116CA0E4E86E81047
1D7AA69FE085E6122F7F09E24144CE3A48B8022207EC5890EA64DE50F3831226
C56160914266B1D28D74185B0E0FAC89BECB37AF65D3FAF1703E3AA0E1EA27C9
AE258A3823E734ACAF662DE1E3AC0A662937874153DA92EAF57D6D9CAAC34A87
71169DD47A3437A02EF556D9F32B061E78C54C77BD39D677D7394877C88A417A
449A88485A0EF2349E6FAC3489138F9F262633B88CBA65ABDBDDD8DB22470CC0
E2E372773C1DD91907A984DE4C96138BE3BDA2BE40226EE6A1313E4A271AD388
529BC0F787B9E558AAC41DEBDEE9209A6609219685284FE6A4E39C4EE44BE4AB
58EF659F52E43847502BF4A104BCB4900272A815DCAF1C14F14A491AA6F1F852
3E200FA546107734B276D7DF579F28F5E07B8873D2E9C085BBB0276E7DD887B4
A4D21B7C82DCC82A1E46EF79FDC5CF1DF72D2275F3857BFBB4FA31834B165777
B02C5938A3F19631D6133A8A826BEFAE085553E2B8064E1DB19FF9809B3218CF
B4EC471D3DFB297FFBD51E0BFF44D56F0B5A0AB3CD1F01A0271DA668D66621C4
B1ADE33FD14670C66F070D8CF7E7607B46F38BCB998C1290727A9E2960C608C0
E9A1EE967B95EFBBB397E437573DE53EE72183F0F38AA08EB6937BE5560F6F1C
B54C7DCB8D72862D87AE87F9249B2FCF932EDFDEBD48E885B786A3D5D0C5AC21
6EA68F8F7D3A5BD929E9EE2149244EB8BE2259642C943BB5E456F818BD729B7B
2B6952384BB5EDE175FC7E481EF74C90360755DFBF7B32A29E2B7D777E8A10DB
921C86FBEEB0F238F7A3840B89AFB570377A356DEC6AF110FA0FC9274961C703
3B7332ACBEED0525C116ACE245596D4CC442AB836DAC4801FE82699FB8123DED
9709A875B020943BFAFAC56DCBE56651BCA5AE6FD2F0CFD1F8470F0DE9599E8F
9F8AE666A442B4464ACF6BB7EB6DC648DD591585A08F81174FF29E14C05C74F9
92A78703081772B16091B3FB2C085EC0D9FF03737388C01B84BAC1F8C5D2AA3A
3E6BCD63BDD0FCE283E1D37D9BD147A2D7C0D6183278FE8A4C3B716BF5A2F3B7
9124A9E47F4F5A8A15D697DF7E5483790A58D2A5D6505B19161F50094F3D0BE9
B8A33A421FAAD88E64EEE2EB78B30DFD071C1E0DB93C1EE96A8C4EA4856F76FB
E12DFB9D84EDB11E86C86C3FFB00BC4BA7BB30998298B2C8A40E6CB11C31D9C2
9C7AA3B71450BDEAC4A783F4BC84226287AFA57C086503BAC3DBAB76EC3D8BFB
C51F5400776E2A65C4A068C3B5092F3E1234B3D8EF25A2001E5A65818FB42A05
FB7803D0BB26FEDC511F8B134C21E05D3E6A05FB23C6ADF60A26190EBAE17A94
457B7BCCD13B6BF610E54C5F0F31AA17890D1807CB287B949FDD9F9AAC581DC1
F040BAF224FB5C0FA52C0B89FD77F3F6898CF7F02CB77DE7D4173F08F020FE6D
BE4B43BB5C510AE616D7CC864B7F781EBBD8C93AC879D09B847DDFBDFF33E798
9A96D0B2D0906FA92C220CE37E3D56260AF729D2CAFAA9F401092E1814D53EB5
7B30F6D4898C39EE09015324C4F33870BE5C171E4DAAE3B96B8C7AE89E572A08
9224A889DE722C4AF76AC92D89477673C124B6D45B10C476E24A4FB28E8DAB6E
2F8437B384E23D0A5D62A8E9366E0BEFB97591F9BA5D835B77624B250F765F3C
63186F455A258D68ABB0C055E40001A7DF2E63CC96464095D3732590B5E767CC
184E9759AEBEA33FBFE4572D964B332A89C5DA71AFBF455E5A68FDD4DF74A8FE
D3D115F1257B776B472E4C5FCDCD11B56ED314ADCB5D7E8F3DD1D270D5456DD5
2043ADC089C9F1CC96E65C4F17EFB7026226603DA37D8D9291E25AF279829F8D
47BB587AFEB10088304351392814CC0E6159622499F26C026DE65D98CAB97B70
9C0C4FED927C9D39B41E36C19D316FB4460F4558E7E1A27289F3779AAC3CB405
FA2DE148B243DCE43FCF82F96356AA2482B256CE398B900C57BBD6B7DBAB9F81
24003F416EFE26383D7594E6DD3AD9BC73D8EE5BA382CEC5F7D1E8666903C3F5
1F1F8ED8819E41741EBD5CFF2A4FA545841C43721896ED0E58AC65EE13077831
824210531E56CCF19570B1ADF6155C16A31569DDF8C689DA7A3EC6DA1F5C2B35
1301E72A0F5EF959C8999D23D4B53CC87F94ABAD024DBE8EE7AEFA3FF5A0B870
62F186CF0DFC9FD8DDBE094A976BE214AC88BF14CB44C210BF44141C72291EBB
1CC96938DA50EB448DF2CABA8C237022C0FFBFCCF21DF410FA8010692458D103
4D72FC882D95B42EF3C49DF429C30A2EDCB1CDD560A14E93017099D24663633B
06BBEAABD167E0DF4748B39BBE76D32933BFB3185C3972FFB8769C9369C8BEA6
BA277694B4AA7C84BFEBC5B85EC109A3BEA5CCFFD4B7A508F64FF002C8332CB1
E5505E764AA8E4C13999210CD4D7694F73F26D672A7BE2050030447CC48B7A3D
9546AE17060A9DA3A3FC071E413DDEC85DAFFC3F40210AD2AA6E54311C5D8B76
218DE43DA423382E85666F2A639E1FD66B020C2CBC5CF51F32E0F85CF620034E
AF0AC1C993B6CEB761AC8A4993D34A1E76726A9D37D79FA4C4E5A2A2C775BC50
01E4DA81747FD266C62821CB12C6F5DEEE483B14BA4369E95F8C273681D55458
11A756CC045D2E919084C7D490D88689FC1180B0DCAF649C19685AB5068BB784
2242BD3CEA3A0C38E38CC1501EFBEF39C25DECEB2C64030E48733BCEBEF94523
1AA16B96D2F6B56E6DF1561215B3FB914BF35145019FECBE6C9B3D43E4A5B6C8
C04E68D1FCCB63B647AC812ABB0F63884F32AC80132F35E589E937A89EE454B8
D2B65AF0CA8BE85D5EACBBB63DA26FC004B9BE2BE91ABB9CEA6942FD83DEE159
6B3FEDB923877D924397A292214FA67D38FAF8CB61DD5E0BF5CF85F27C9D0DE1
DE2507FE745F38A70B901CD5D2C491E4C0B2B2393FC95D0E3EE7A86655F86011
EC2576E8F3983B031C03D07369C30E6C18B4359C6BF4D29601B6D8E695F77B14
0C4E15699A1292D14740CD3F68A5D3F54C40EFF7946E824B54A809B644789140
75B7A31ED9ADFF916AE66E3B407459781BE4FD04E6D4336E986B79CD3ABDE16A
8320A334468784610ABA92AC6F13A00EA11A8C0EF4D7D01B0BA55C94D0208D7F
D258E989F60F4D4C808346B7C97C61A698B287F86613A92793FC1A7725242C41
9FEF2FF68DB3E248876611F2E7DF4A6293F14BEE87E872D0FE141F868D012985
8C7F06A4DFE7A8A9B5A5EE2D55F96F84FDCEAA8C996D6BB68DC9868B2E896351
ADC9384FF442F40AF64CB7D7D337E77F3380B0CD01C873A9C9FAF393D437CFAB
459BC324E5F70FEC991891751D1EE98662800813C22FFE7D1D767DC70243B119
D07F9814342A45E7A65B27F9CED68BCE525CF09725C440857371A118B7C91DA0
653BF11A675EC7F81F331C135B248C0CA36A918AB8D917203B53CDF0965152FD
731944A1F8B2118915B74F47C61A626EAE9A384FA152A2EDE934C089D598E0CC
EE754AFEBAADC5050D185D39DC1635EDE3E098E3C600F1ED1FEC7155275A4A4C
4DEA5DAE00E1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman8-Regular
%!PS-AdobeFont-1.0: LMRoman8-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman8-Regular known{/LMRoman8-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman8-Regular)readonly def
/FamilyName(LMRoman8)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -117 def
/UnderlineThickness 36 def
end readonly def
/FontName /LMRoman8-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-456 -292 1497 1125}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ACF9EC5ACD0C55CBD5CA59BC7431
9A1B8A5D9D205BB7ADCE0B00796F130DE39286DF8195F0A302FD739C6A4DD495
117FF510D4D3A52986DABC0E5BDECD47E4592F241F4D1FEEEBD83FC02C54FFFB
57A301E60E5B25B0B2AB8D5F495CA059A6EC13FFE483B13F35B195D8A38806BA
04CC02C8067342BE4320A42D695854DB324847D78DEAE9C337F868E0DC1F281D
4CB637D6B16D59E5547364BC3C51D5BFA8AC7ACC376094D0067D963160AF7B34
5AFE3F8FA89E641F726FEF6C405DE255D7E6B93A68C93D1E807BDA02B030861A
BF781F4E12B373F2A268C710DC569C739BC2AC583053CB26E8482F794F9B631D
1A77D18D93FF3D3DF7C0DC6EA6922A939FE7AA43B8308936140D026DA9096E79
999C36B0DE7FFABA73582235CE49A74BB3BA9EA02BB652695A949F8E0587D5BD
38E51EDF4C987FE5AE9A6A5FCCE134D7F625BA663A61AEC4938CA78C49623FE0
EED33DA2D08CC78F86A807E791BC9CFCEB5C8DF4108A2F31940E5B6FA9B3D7F9
4DFBA2E7E60C1B615D0C774F1733C71B0CC90EA69D7D4B91920A764020A7907A
A29C1610A05FF2B714570697940A93D2B341E79C50F7D2C9A3C1BDA721B86619
A33A0F1EF6E18C3561948D168918EA5FF9DBAE24E6C0BF1ED456910E73F4C10B
29F2734F35E04F1F550C07F011E8E23D2AF6F0D7B52C2E5F201D6A990FC67A77
3FF5E12466692FD1B465A90F11032519ABC7C0308E276F190F7EDC493BA1FD3C
CBBEC050F7BBAB6E81B7FB2054E8DC92F54695C1588ACAE725782088E328C705
BE178689547E89215817838DBFB8DD9B92CCD508A09171BC12C8ACA32FECEB20
7CAA1C2C81ED075E3EA7E712D95FC612CF97F3402658E90924C75CA278243C52
D4E02E8224F197E555143D563819EB1ADD2248C18E02E18FE3DCF624E37ED993
3C7DAB05959E694040B7EF5F92D80AEAC2CF58EC01BD61D7CB962C4EA678C5C0
62593DE423E11AF90918CFC6E1E8F9DA428296FF0C92CA794AFBE2067C46264E
EEB0AB0FBF2EDA1A8420EF654A1D4E0A295D1DFECBE39D9FF712C85C748311C9
CB8695716F72FD4F80E77DFD7E01E9FB8CB1F2B5971940EE4E7B14727B086F27
E43E6E3EA6EF0DE68E17C9C0F050085274ADB56BAAF193211E48D1B82FE44A59
2A9F5FB13EACEB54AA027C1B87380F9EEF9D500DC327702B132335FF288ADF62
578F30CDCCCF826E4C4CB57B5D5B537BD2FF89086BD0C4CAE557ED66306DF3F5
BA9D1007C869E8594D4138161162682A719FFCB1A982A5CE8765E2681E64B8D8
4A7CD7504E58CB81D0EF03A3EEA97D43741F54987AD65FA54A1BD682F7EFED16
D35D034F1AA5CD4EB628353F1FFEBD0CEB905F10C183245F1B733C17D3B854D5
3BA686CF4088BC6C0FADF9A6C05BE3499567E930F710682B8954108AB7B126D8
255F1A0F1BD08158F94077D191F62DD73838E0CDBC99204AA6AD1309BC5668A2
A524C6D1C68B4E416B248A6FE29A67DCF4E1CBFCE603260A277AEB7F75627333
3E84F341637A1BDB292EADD055C97A12CF0B915E39263AA9F03B21C1F45C87C2
CCB12B59066B6DA2CA24E020A0FDDCC0498D74594AE3ACB0EB4CE7727EA32222
07E864C7F39773638E3BD2FDDA11C79177AD0A23CFB7F631E00CC979AD410F81
3119C0543E091E4820C12FE47E3154789E02FE363C319139350F014FE8A785A3
F66FFAB8D8C9E7E26E49BE5FE558491D1A57B150A5B386F7ECCC0EE8E31695A3
36BCC7BB9F7FB26DA3444238CC33E2791CABC1DCD0BFC3372E1DE72D93AFD1C8
E2635A5E428AB33E24E81346D13A9377EBEFC6206D372675CF43235722B50C78
8C4A02867C68BD8E5FE9A45653BBAF2A5DCA560DB5BEE7054FB8B0A13AB598BB
C481A3240450D1453A1CC1054A06B962B7E28A73BE0B2713DFD32DEABA293EEE
AAA8C0409564BB1ECD1249588C18D01D8AD4E0F0032FD811ADF35B869BB210E4
4A57178893AF229268DC5375F01AB676E600823FEC28C30D2208A868EC0D01B1
4845736F9DEE02D06634547729442ECDC50C90989CC881C3D8E85B76FBB10040
F0DADEE5ACBDBB43307A30FDEEE5F77E621B130E4B824CE23100BC08DC65BDA3
46307E3BD497D7F1E2F51B557FEB6AA32E84F5E55E5C12A81B73F370431F3842
A1B0CAFD4ECE7F0DC8E2A6D644CA8735A4E96445BA9CEBB627718F858DC051E4
3963ACD7E7868CAA4488EE815D40E28CA54C83221810546F0009F98531353C9A
8EBFE7DB9C9A120C2A4E2FED0E63F90B8DF65026707BD39B489E54425A5ED877
73C6B3A8ABC8ABB13ECC3B249F1878A8F76D59596C63BCB936321589906AB242
14F3C046A1F210FE287A8192CBA7D2A89BBE7A7B2DB6B1E19224F04262D6403E
3B41787E1449587E28093E66A9837BB94195E3A4A5C17DE6823755F59BB9E3A0
52F69C7808FB657D9270933D8B167D2575CF146336BB1C76735BE5CAAAEDBE98
C69F89E7E71474CFC7515F73F86727442EC24D46F92C99498946CAB6DED8F5DF
0540063DEC2EF3F83AAAA3F4F68A8E892C3D0529A466C6A310A6101223949B01
79CF7DE6B550657C91BF3116EE7F85B0178B3227810D99B48361133B54A6DFDC
872745DD45766283944D7293D6FB1B42BCDDF2F241AB267897BFABA39D0F2725
E0DBA7C8CE305DE7C1B59DC2184872FB99578B809358856E4E99B28E138E2DB5
85CDCCFBF2B46F01012CC94E2FB30C1E4411918E892630F2AD07EFF1919E9BA9
0194E24A69649F0DFD0046D2EED7AF90313E70594EB5C354023BFA07912408F1
72E39AFA29111A71BCFDDA20BCD6006B0309EF09261B7AE1C67BDE0D385104C7
C0730BEF94DF3D9BB2161C7346FAB11805152716480C0984BA13A8433ADBD629
229C446AF84A690F56A09A84EBB1CED5515C36F2798A89689BED966ADC9AC306
D01B6E24DBB2CFFBEF205FC921305B45B1B8FFDE2A09CF6301F485C8B7DC2E56
82DCE3042DC9767C407C0DB4D0FD1A4881A34FA0EEE7810D69F2428045CD609E
23CE37791362950FB435D1899A47E6E69EDB17BC08CA1B092D4F20BE1AA6BC4A
9DEAAB1B74EEB7B908245CDDB7A093C1AA307DECFFE53A1FE54984DB1360E320
862F2CA6E0258507C6D3DC1DB94102FB88F631211557D3A4F79A8E5FDE69B1F8
4E9FB2EDBFB4B8853524F58D4E1EB98EEBEF1B6C2D330B1CFC47ADE896255DE1
FFA8CC1A09D26342E89B9A39149E124C564C5251F613393060892D5A51B78BEB
3E44B78C50316C61B6FE484CE582EB7FBDC53D9427FE267051934E366F7C7B2C
ABD2C65921B5520C6F70C1B6E7AF8E11BA4798C1DD2EB7D4F962028061B71099
8E5EAE433D8A82CFB15547B339AF376E9341FEB9433AF21E8D84C50F75043419
1ECF16684180B65D9CD4C8CDC57A0BBC0598B3AB03652A6AA459894E119B5356
CED765F73F6935478D5133B9E761430A39CAB0DC109B02A80626A9ACD7856ECE
4D6569F5D1D918A30005C31F177816336B74AF8B9931BEC0CAC75380C714BFB1
BC100B05D19D7BCFB18CDAFB0310935E6C7EAC6B9A8134C4E8F4969C9268F7A2
C306146CEC5039310EF1F4ACEA1A40014BA27BD58490D24B7885E4084932266C
621A42B8A3139CE953DFA9687BC439A31644BF123DA78DD615C4287ED7DD43B6
79CAF0EB2F9F428C431683A41C2C61A429E3DC0D87D76AB6294CF8CC9918A6A4
6873A1769ACCF25B59CB4365AC451FE1D956E1254970C706438805E25284C7CA
AE679F2B7C58BE9909CBFCD273EF5617183CFA64757627D2D567877FDDED97FD
7C9E73DE4D6D4ED370EFAAB4E52F30E55B902ACC35DE87E70DE8EDFE7D803CB9
B4F8D58998C2ED6B93CF62F8E991B754899CE46B900DC93C5A58EADB30BCFFA3
A71EF23D13FDAFE72642854A3340E64896CC6DEA0F7E3AF4C39EE4E68AA31889
A372F02266FE65ABCDAA308258FCDDD13DCBB18E462B56F956B94CE97E870122
A0A46CCFD6B4158BE06C768C73F0377CE3F21E030748189C553B9F62C83765B0
149330C96EC3496F9F2F9B289307D7E0C33BCB7023200FC3221F12B5FDE01011
87BBF9960E56CAA899438C90156BBF2B14596F131B71830D84172E7CD7C05B25
85A53C7CB0DA5729FD6CA218A1CB03FCB945FC24376A45F2DE0C21378769921A
72E46589CC08EA87EECFDF36B819B07306C448777163A723A9E71F504DA5D447
AFE8CFDBD88089FA4802F449B477BE528C3667F06EC5479B0824B87C47EEAF1A
0A23941B8257A2A5EC3F63FD62DD09890F4DF33AA1E70376A9CE8E4B6C4211CB
FCF9709AA29144F3A40001AB98BE816619AC543753969AC5B540ED39E51F5869
98342686761A7C070EA75140331D7A0DD5731F0E395A6CB0412028C2FABE2E9D
C3B57F412A5CC05FA7599948E6B8B50BCF16EF9825F6B20090E4D6280C528375
4EBCB42B38B7ED6634AFE0B2C249699E212509817638845B5604BB526053ACC5
C0FF6206B2953C9350E57657B374600DA75B6B271326A2E7B313EB4598DD7FEA
4A5D95437CBA46D85A5EAD76FEA956126B3EEC337FF78D906699CB9CD7B4012C
474EB33D12DFABB3BF569214525DB9B2D4B34136FDF936F96FFC813FE16DA5F7
9B0F2B3110B1F8C90170E014FE8F31A5FD35CB74EF0FA13C6DA74D7264618562
DABD7DB8E7F480D0521581902848649AD3EBE39E618667C59EA499B7081A0844
B6DC10555D27819E6CAA1CE453A7A68EF1A3EB2178BBF9B9BEA9DEC679DC10D9
E3553DE260FFD590BEDC71CA9AD4AC12B09E86D933AF49B4CB901556E63BD639
1B3C3C3C80C46745E1CA7983B9E80168018E04A84AB47C854C73FC58A393974C
1AFF488EBB29B293905951355C4D4A4F65BF1A72956515750DED0B87A8D3282C
72C634347874775B6F29EB873134F6BCC2EBBD3703E9619F762D64128A18C957
22E6C0DA907A17868AACF3229C176FC26BFBE255AD62737D234986AFF04FF03C
1DB4D1F2D9F60CF2E4DC5DAF88EF3517A2D91CCCBBB8753F92B3E0CDA5D26523
B84CEE3A0429655F8F25C89E65074A52CC6047885F4105DD62F1FB8CC7A4CFE3
22EBEEE15E3395B062B933EB55FA589373CE26568F78981B480F688646A5C8C5
63B8FAAF19A1F6166685C3FDC27532C931AC8B86E81FB0223686074ED596FA6A
922B662575F23B53B7C6B245AFE90258E743F284E22E30D2B418CAE285AA38F9
FB436D39371781DF4FAAD1CFF3BFEAA81F5D11DD76BADDD8122A4AA44B9F863A
DF8127F1FC35DB9CD34EBC684818AB259FFC3C7CE34C9DAEE69D70D010C70540
3B359BDAA5B9ADD10F6F7F2C19136157C6D83B33313266F1BA8B9E065A0C831A
47D767D4558876E85ABB0B8396FEE0C3327CFFEE23D0D7C24466E5410DD289DF
78C335D2BE90B5C581D536596D97F1F463EDD0A9C0118790E5780C0AC27A05B6
4DB13A023A3E5225E0377ED38749AE1F7714AE5E1D649A3AFCBBF060F416C0B7
47EC5BA54AA743154084CCBBC2A47037DDA09D9601412F731039746C1224A29D
191D9E221C06A7EF3CAD09AD5ADE65A51B6A915CA708D66C3EA93A0BE63CDF0C
D9A4546C9325291D11D02F4C2284918795A5B6E6CAA4CDA0371D452F65EC9097
657F51E83FCC22A30D649B80CEFD9F6FDD51AD33D3DB732FF26650A90912822F
9E77D8AC13393AA1B04DEDDF6C37B2D1DE50258300B9BB455AA872810C7948B1
EC866883E78F23DC9DFF60701F4F7C66B61198F8066DD493031D1A5EF91231B4
470B5A034CBA00791EE592FB4DAB538C280A8047F6290E265C8A88331305E67B
EEEA9A03950593605886E125446E5CCB325BF943C3D7F32D49651F5744A27DCE
6004208003A95DA1371E2EE456CC692DF7B71EAEFA2ED09E82012484AF7649C3
FA87A3AE44D93FB7A0D1A7A08A419AFFF7DF7065992B084D567645EE4D2FC29A
888E5E51A42920248E4BF77A7876799B1FD856AAB0EA73DCCBF7FB5979EF5F01
2CAF413DABCB3290E29A0CEE18F02BF93ACF5E651F75F1C47F2699BD0DA86F7C
5E18E1895ACE4B125EF346F608ECCD4DCDCD47DD7717EBC78AE3DDEAB5333174
18A8E967F635ADA03D2EFF80D463A521EB069C2B6271FD736442AF38A52EB58A
59D7A62D97171B45D2A6AFFB7E617C9265B466295CF70CB228FB295850D653FC
3FA379FB4FA0AD9F83269A99D550366B880AF05F913C074EEAEBE390144ECA2E
ABD1ED2BB6C54FAA70C9BA6C6794E3AC06D503EE876C915252EA75E6FA113380
E4E2A0CEA310D96BDFD883642BDB55525358ADA70C5ED0923B060EA6EEA5B735
D0D62E41842C07B79C0E8DC56C55084EE590D2BD58FD9784BCDCC3D498B69CD1
D7C24466E5410DD289DF78C335D2BE90B5C581D53AAA27CB98A914D22E25B41F
E35179D5E020790534D6BA1670B6783FA8DBA0D35DABEB8E162D2EA2ABCB6CC8
DF8E44430383881E5ED0F7F184DBAA9A394D0E08138E5B80D224D4E8FD6F8BD3
255103D823B86B712CD58FC2FF2C9B963C235A59BC191B84B9B6A2D87B85F21F
39F33AD118513BBA722CA46E21F697AFBFEE1989A09F9F9F7F29C1E0C0F28E3C
C64BB4933D3AECC99FEC69C3B047482C0D6F22E851DFDF1315C0679C0906D77A
B2144E810FFE3A942963C9B2584CE14922AAA9E3456AD60EAA44317BAA8D81C7
33BA78C0DEB8D1A2C9BF7CFAF3F6C87EFC09B43D790D3E80AE0EA0AEE1984C59
0DB7EE142C2444A3F4DFAB0C651407A58102F825D9534F2C1768DE55DD354014
B4AD13F8F95AB9B462F7A5950046C9C4A8CFF3CC3738D894770AD27F2BAA1A8A
C49D55D311D7B27E77C664BA4DA424125D1735CDCF888572C3D4E2F0230BB1FD
DAD562E249FC2F1392F7F378BB1754A2E80DE0D9FB55FAFEE3CCC1C812E9FAC3
31FD70975E3A0C72D37207D8A6034994F5A338B85C4ADD0A28C7A8FB765C4A04
DDCD6E0E7854CB47132679FBABF1DF31D16F8FA295CB56D75A836ED366963BD5
7A5FDDECE89ACF7D2EAABC3C655C247E6AA58C7B3A65D90C4598DE6DF2AA81DF
1E7AD672C058BC13013E94942CDCF8E20DEC5CD4696759CC337B6514AEED350F
45EB766C4ADF2EBF18F155CF537A97C212FB23022E75D57D24147D284196D0A5
17320294E3C7A3A1A1BE80ED8FF0A9C509420006D2229CC525B2E21332AF97ED
907BC5FAFBAAE31FCE73C77BFD275F6CD038A6DB9EC1FB4AA5AF31A16FC07D58
F6AD35B345BFA1CF7B0E9545795A6E62188B643BE9FFFFF69BF0E7C694E07807
E04F51013AA2E2215C03ADCA175FED41854EBA64EA1BFCA7B9ADFF7F4ACC6DBE
671126FE078F52AB62DB59A9B9AD1018F245F33A42CF224F327CCEB361EF2E2B
DD7DB751EC8C146E17EAAFC942F80C2313118CD80744B1160919C81067D75442
072E34982759C289C8F929334930B4AAC76A132C32DCBECD227134E7F747AEFB
6809685156270A536E5DC0236DA24612993121152E7E72353B4E4A19BC80F638
158DDC1B6DDD5CFAA56386D2232E51B3AA708541C4671738A1E0CC16CC401640
5B0F10C340F24A30B1C3E6AD87C7D4424486F4D2504B044E802A8B30DF26FC38
1D8D871D0D96566F0E4910D17124056A1F0AD7E9C1807ADA0EE65BF63372B918
2E8CE99142953DBEE0C0104B1292A1F83517BC28709D3864CA389D6CD1041740
7AC6A0DDA1E77D37AC83F0991A4EB1258E47A4E04D0DC15BA4F0C1D12F27F5DE
5E37A07F94A89276B909954466C7032C6FD3DE6ADE20EBA3FA90A309230B93A5
B74FF64283F15EAA51DF4C74CBB662283EA2C98CCAA3F64D2E64AB21C48203C6
08CCC92CFF820CBFE005BB5D4B098F3CC567E9DA9952F5F95048B505DD5C1BAD
049517C3A95D471EAE9D83E664D7CEF78D51D427D2A9126B689964B87ECC23E8
3F19351612FB0B1E70D91934375C410CFB8AC6C99D8665CD7E1CF880F99229AF
C16232CEBA6D7B35526797A8C94EA0723B3062409182103B078B6D4120137695
A8BE5DEC8383E556D1067F2D10E43F158978ABC35805453F84CC5EEC991A5CDC
8C33DBF86934B5368C099B59A7114410C608C749D1B7D493E67EBD9DF99EED9A
ABA70EBC005B7E807A854FD70F27639BAF68211DD20AF3D34A3498F21B00999A
CC476DBE2C5E7F404E59340CA51DBFEADFF2D6856FA15A36EEA17FDFF093D02F
B419CDEAA8924DD923B74F252664C67CEF45743658D8D43AF001ACCC0284EE83
D6B900DDC00EEB5E881FFE9B414C45B06FBC491330279C671334298D0621D516
6AC107F3AA081661CB91E004CEE7220A24C71BBAC196A23123BB399318B4D2A8
36F88D24D6FE3898D6D1C76D8F8E2C75D7460CE135C4E1D0349033D576ACDFF8
68AD600D610E32BDC63998EFFBD8BB34D2423CC6282C145F3F0029A07BA8C929
7BF8B0B016EDCAF80B9043EB61A3BA3E78F64ECDDADF68975D97F94EA8A698A5
CA287EBBD5193878AF0D3EE755BD5958FD3632E670306CAC950F8A1F66D4720D
DBEDC0E0857B057D019BB4C3C1C751481ED7C692CF08BD1EA6C5B30BE280953F
B8FFF50082E28A8D951207D7C494A7B2784E050A11FE8B1CC619F387E700EED9
D0956AE651C28A61DEDA9859E01101F5604685676CFFF64C9F2630CABF2F83D1
37D226BD5EF6EE8EE1EDC4194F1012D8BB958B6940681AEA50C7C8964FB0F377
23C0C4BFA4DFE3FD4AE99F5A8595EA873728E2C8B6D05AA6861E3ABED84D6761
ACEDE777F2D3BBF85031E42B976BF76149CEE298FA46B57981087E31FA46D2C1
91A16ED86E07D8E45FB322FD0B3D25692D2A0E7C4DB93BAC55016AE065951347
39401B0D8ACDA770B340277CE3950462318057F893A50B1BE89222348D7F09A7
FB9144E9162A946DFAAD95EE0B346EBBB899F1F37A0F89D4DAC9B7B0F3348A1A
FAAE48BE88E0E16B8E376035D6D75C10FB83D7B0EB9DCE189314BFC6A128924F
34C083E289918FCC37040DD4771C1218921FD978D54413617494E68E34391E25
42903355658BD278E67696161CDE14626D101B4E117C63F2E7A60627DC40CB9A
B1634701AD9AEAF5D11607A783874D716DC73DB1CBA45D33E0076E992C7DACD8
026D7F4C5AC1E5D796C0E5A79C61B5BF586A0FFF6BD2983A840B68D656FC1584
2D694DFBC7D7800CBAA90F3BF0022E66A54BE1059BD5D224B674AB4D2AD930F7
F724A305C4DB7BBE9E3E9D166FE9AF6147A8BC97C6834B365C39F4F5C39DC16D
F38ED4E2751BA59C0E99173A4757421323238CD6EC545ACBB56D8F72415A1AB9
F0BDF5BF10AADB64E9DC21E5EFD3BEC41F18FB8C6D2B457E60950E1CEE746B8B
D1C38DCFEC33DD7CE3D15A7413BA7221C2A0183B7AF9C14AFB2666D0C76B2A40
4F1C741D14A7855891FE38AF4673CC7172645BFA492CDE638EBD00417A24C048
9BE85952A6776CA88C806DDA31F029D26AE7BBE53504F2B08A80874CF0D88928
1F4761B0DA0610459A383275F46B0E17949612B89374A91445818CCF84403DB8
37A6E6EB5B52549B010FB206FC42AD1B3BA2F939E3855A521224E6698290BC0D
0742A314497D1EE7B94205C9F5DD453B1D3838591BD4A0179BDDE6524E42EED7
7F004F7DC1CCC96ADE0D02904BF3E689B2B265E479FD23BC99D34FCB2E6586DE
317EE3BC34234AEDFE8C8810BCB5B93E04FAA62C2147ADCC67517C05D3140EA6
39BB37343980D51CDD3524F0B146BB99BAB1D6B99E13FC74FF67A48296D205C9
2BB06A4B0C18B1C5DFDCAE53E87AA0B079C664ACB65D4AE6108365BD70298F04
7D7DEB8854FDFCAFFAC77871BD7221E8402A173E563B312F24B88D66A61A47B1
A58998B2A1A17B6AA78EC05276600855DF7CF3CBDDFFFF470794606584B538A3
2295BC5FEF5DD3550010E0F50AFA773ED03BE4C5E64936A40A414248F478860C
841769777C502E4DD4354539587BE5AE2347C835DC00E5A73E95668DD0484B42
1E5FCFC898D707553AA90560AA32BFC1FB1353D8E28E0FFEE0C28522DAAFFFC8
4B3AF701CF1AB4DDF43928DA047C26DAA8165842A4DDD43FC3AB8DADBB4D53C5
BC75E92D9FFC4CF5D97E5C253EC6CBC95C776157B2644FBA911DB569BB21CC18
F997D4A44DA8C2AE04EB142AEC7BEF17A9C1AC42B75BFC767EECE17C65560A0E
E4086DEA06A2D2352DE559933C8B4E514DB0410B1E140095EBE6C361D8BC48CC
05727B71589342370F8A366E11B3623E494B8E802A47C2278F2BD50DE2A806B0
D7FAF7914123A44D9570FC82B6D231B37E2AB7C7143731A8483D8D0E8D865CB6
02D83CD2DC870E1AA53E3712C683F56B2ECF78FCCEF9C018C3D8273DA993B9A1
CF9577C0107889C2EBBBC688FC7FB98005BF250E91BF91F719E5568DA6B69A91
1D746C4C8EBC0A4E6AC3CF08AC86548A8FD6D6D253095D1CA40B9417A1DB1BC9
CFD7A726E5853FD3695D297EBA5400A1B90902EFE6792F207136E1E16B417B2C
21287771F728FDDCE8BB0876873C49ADF8152818A07E8372B9E6D6A900BA4404
6812884F2FEFBBD39715F12D929BE313B1A5F23EAF1A32ECA307C440566D8413
DBBEDE3F4E47F96B61BA0F88E99544E109918AB0BDCA926BA1162CF6F8D703C6
508CB2DC5D586678999DBFF6A39E853134F6BCC2EBBD3703E9619F762D64128A
18C95545E4C79B52D7003FB0F27D5FDA349D52907413D171FA2C0F43B7C69F2B
C1FA11191A2974874205A7DDA96A49166276E333BF24A5894AA474C9F08EDF66
B627B992C9E596047831B16841B250CD148557D72DD7E683BF122A0A267DFC37
AD7469C554F21DA9C2007FFA851430CBB5AF83475C093525EB5729D8AF505B26
F99EAC72A872C10BE7C60AA2C2AD169FF34266D8A72C91C24108FC0F3D955887
236884915F331A5CC5FF426B674CB4C72B22588999185585F81C9FE7F420372D
E86F10868948EE50880C3185549890A6937621E60049B6EF549F775AA2861FC7
EEEFCE2D6FFB37AE8D53E4AF5C970E67BC73C920CA64074B3649FE56AA0AE265
4BA7AE69654EEC38CA4CCB5F26D1C2D5C8005D2871DCD98C3A637137DC8441EA
7B8E6A353FE001C63AD0C72E1EB219C4864D18C4CD499B20534D33C822226FC1
99D26114C8B47D73304B66C6BA835EBDDFC19E88CF11D2E7FBC549CA5D86A25E
591E0531A442F63B6D86590198C5957155006779D9CE0C778599803EE49EBCAF
6C6E111EDC97C368223B86632842682BCD4EED2766A69EF6B97655A930494E6E
1A478D5C2A0D08CB39DA7D5F522A4ED633E8FE6D57A0821BFDF2DA7DF431DEFC
08A052F306F0BD86130C630B5690DB1906123D949ECFE82F7B51DC5267C06989
1DED23AF9D42E7E92E35F3CDB35836193EAAD4C88DBBDC9E20AE49D3FE7B47F0
B4C5BE36297E9DA5DB6AD90AC5A04E5C5434D732318AE791EDC71A47F2AB39A3
FE73AE47CF016E3B3AD1A5C090108D4964C7FD5E57B0D504F8030FC501B4758F
1C0CDF3A5FBB4A0CDD161BEF105C8697B33CC8C54E71E075F1693EFA5483DB7D
EBB1EC30D6A719EBB7B5AAF66866359A3E7724F400933CED59BD7219595A46DA
8FDDB20819F2337432A326ECCE7F6F636B38272829C49B77DA56D8C3459AEF93
56949ED415099A0B82D4C0E326AF1777FD532A369531C4F38A540CBD0E96C682
B067F1525DC438EA0076574A376BBA70183152AD7577C8EB4BCC88ACBC5A62EA
1F054D8C429F0F7FF80AF8B32B1A30C9F7923E3E12C1BFDDA721786D7D6000FD
0985C57E723DE55A2ABED9B40D7BE674118CFCDA53690FAF7F415B3CCDE7AADB
CF72697BCC9D1466D942AD5D2F3718A2590BD1D0A6D49E62478FF7256CE9396F
4491CBF50E1AAB4DB1875D107D8180396BA6046E8883A9FDDAC13FEAF57217EC
230CCA301F89A1016CD2DE577D0A8F874806B28DD649CB35D90E6345B12F46BA
3332097DDAE8237E4A34D9C413290538C5E297121D50C81741C15D5756CC52CA
9EDD64727BD3BE976D4963BDB9B0D1D1FD16155510EA7F6410E1511C924FA76B
3CAE4867CD22E3E4A8E70082F0C085AF03D89E764E467708D4185A1600EA8BF6
80C97212992BB2F5000FF23382B07D5B059D8D3F20870038B6EA3C5E41A3E6E6
EAE70E6200948A2B24D0AE624CB648EF0A2E816D6C1C3C83FC0BDB90052DDC7F
055DDF6A6EAB9E62CBD50ABE89F5DA45968A4FD41C738DF99235FC8AF7B0A7FC
07C2E6FB4A960BCDE8B36D06B51FDFD86A22BE594113A00F62F7A579FB409842
47FFAABFA9652CE7AF178B421B0DC4AC696FC634D09507BDF345201376AFE24E
D8E855C8EC0A4F10A8DCC2EAAE014C26BF75ADEA293858333FAD8A5DF5D5CE64
E34060F98FC38430DFD56AAFEA4135F59E74D46E9C0DE71D7EBF3D9A4DEFC8E6
7F6FC526DDEA73EB9B1EA95C15AF3E1BD133241D58DDCC67037061D453352531
380C21D21C82FCAB5E878414ED99200D945BCCD36E1BA17B2D4E2DD52B5848B2
20B04AABD14C5092F60F1C33E6A77A9E51EAD2D9A4C9C6B49ECBA54DD1C476AE
B59C2440A668262623D6A60F543D13185DBDC938B5A37FA2838C251BBA1D812A
10381D0456CC203C348DD73C1D3F3446A4E306C676DE7CB1ADC78A861EDB3837
55242F3E168A938FA99A616BBD1008CCD083D9C4180B08D5361C6A1952999FC3
37744781995E82918639186A928EF12BAE7FDCC5357E6ADF9AD8C35E6A43B682
3C4E3D2E01A271B4E229F6FAD115EB0ECE8AE791EDC71A47F2AB39A3FA3BDDAB
879CD224BD2B3BD4873BECC873A9C71796A6D13D182F1FD33DCC71554DA83716
98B3536CF6FC0B6134E4F3AFDC577DF8F4B125C0BAC2EA874D558B0F46BE4CD0
45739E04FD5DEA0FB07BCAA18723F901BF5F6B6A8A8AEF1CF8DB5AA29D60B224
C9B8872CD9E55B2E3AE2819BAF9BDC42C781963830BAFE4D6CD2356A3D2733F5
4A29072F126379A165479BE72057F0D6D0311BF204A4C6D04CAAD2542B807009
054090770432D63B1C903E5700D6940D54DDFCF2DB627140ED8AD5DBF7D86C88
CFE9A37CB06C4BE02A9FC63EB240C890DDA668C586795967B2B1D5ABD93033AA
D7057C0C7678850AB645FFFDD403F440028181B75AD590B3989A7F340FD59C3B
75CC4A85E5B3FA0541F2E746E3F5A7F0A84C2334C2D0E64590A2420765F24470
4AE2B065259EE821CAAD682B251DF56033F47B4CBF6DAA00B960B965E9C7F789
DD05BC094546CA4F9CA4E3B35C0BC7079A2CF2E2A1529550D55D4471991B7DE7
59C6BC99788940F8ECCB6AF7ACD216131278EA1107F3C016142C1A8B337A0907
F9192DB48AAB64B6AC9E0FF0F544CE8C5C086BEC650C87AC6908D0C344FA4F94
E91B0A972678A8E98315860D63EFE6178FD39A8CA2F4D538637FEE65804AD9F4
7FD5D09FE551F142955918424CB632ED0C2C1FB31D3A72F9889F590D1F350296
EC270CDAE87B801C0C536C101AA0D77A3B65651CDF72E001E8A3010266862CF3
9FBBA573AADD91993E707C3189EE45721D0F6D8C3A1D8CDB3A7574A94AA01579
67DF66E162668F8D8A3F36DCBB5352490FACD6E9EF0C86845248DC345FC8249F
699D5364BBA3E4FC59D1F7378FB61F7DD6CB7D3DDEE35065C082B37FF060B6DB
75AF203FCA2D6DBDEF48DCE63F3F4869DA9D77CAEB4DC19B208341194569F2F4
629141CF756FAC27DACC81D3B0B0BBDECE5D54AA8023B11FDD5D37C1B60D5582
E03F083CF716C8D2572DE33AA0A7E4A4F64A6E5C39382501F2377EC5E1BE06FE
FC81EA3A88B4024C64A79740384D09CD8FC8DEC08F3E43237D86822376F40EE3
FDB00E6D5249BFE627495DE99814AD4A0798392364FE0BEFFF89A5599AA1EA70
6B50613961F9E542A99E1E9EAB27BEF2BCF74FB40F2D01E2F2D09E731C6C2F9E
4493F6FF4574EEA2B17D2645AC7A467CB73043A75E693DFAA0BF9F9BA10DED03
E01737F4A4CD704E8EAFC757116FE3012E01AEBF584EBE5134087E17D7717C9E
B78CD3364BC4D5B263A7B255D0918EBF55EC09503BF1AFD89227A574BD8D6F62
83BA72533B7C3CAFA5F99ABE792B377B97E059D705A0D83ED2233BB7EC99ED28
D2B4A7B685B9B278C77FF850296C7B8CC91E377352CD4B970C802740F07F64C8
800959147D32AF178C2E2E968248D5B79889D9133B6ED6BD14AAD42F8DDD825D
7E8041DCDA231DFB8E6ABD97BCDCA958BEE59EBFF0D3BDE9B4FB0A540610BDB5
9FC4EFF8586BCF2DC5D496ECFD6D06B9A5AFC8C8C46BCFF335C364E086A66D84
1ADED0348EF0A843D0F05CE3F579148DC114120876F891DC1CBC2613C7770AFF
963ADCA396EB26D50902C8BDDBDDC8BAD0B87F3BA50D36D20926718FD370099B
6BE08F5766FA4F3557D0CCC9EDF31BF84531D664F70963D7B37ADE87C03A2DD1
CE4DCED3C6423C5CF357B67C00FB8A600F088414D8992ECDA0ACC39AB210921E
39DAB25974FAF91DC77B8AAB2239DEFDB964B9A39EB820B0594A04C8A90B658A
61B785B8AEFE9DBA015D717A3CEAF3A92E5909A8F0811FE2758B6161A8A96054
6C2385FEE3AA4828CB103799D5A8121BFD5C984F519BECDCB8EEEF18F331A58B
E4704E5130FB4984C3FE2474E6C95273532B64A356B32A047802C9BDEE75029E
991753E72D33BB3D28B42945DA4A9455103CC33474390660C14D704E6CA5597B
EAFE42535A8C88F9F1937BFB87FC8AF336B6E6B7268BCF2B4DDAA573EC35918A
52243149770D7A638140F9EF7A02B92E75A597785BBED4857290DC1576BACC8F
67701204263E971278EC573514392567A82BDEBB7E3AC567A69429EA3D1E7FCC
F0E3330146F527C77164649A42B061255C93ECD9B8DC0D2A73720893EA82A1EA
0AC894127775162D0438F882845B8A24DD727260B4B18E174328A4B90D93FA21
5065DF8C19C153EA76C60BCD0C0FF79B4E98495C38C459297F3E0DC1BCE6086B
DDEDF8F4E9B794586A9CD11C14D25342DE63682A24C569C99EA4E22AFDC4B35E
149F7EB05AC2BCFE82D329D6332B1E5F5EC98D713D700F4428E59C4D8FDA511B
CF63CA7B0EB34D1BEF48C8FC4FA189D8A962AE59456EC1E2FF796E37DD6D1B9D
E5FAB1CDA68C7673B94ACC38F874D92C1E2074B7116C3845EEA16B5282A7375B
3C445C622F7765443ECA040F54A876DD343BF69D7B2F16E43F5C41A8EE620EB7
E7F02C11C1B52C95B6B66A2DF1FBE1991751323DA2D16A5420B7A869207023FB
C27FE57345CE26EE4FA1566B96E221864A45A24ADAEC63F61C9FD186843B64A3
B8BA56C65FAA99BB540B469C141FF7FA87416303FA2EBAA4303C4F4992D05A21
F628B7901829DD810E10D9DD4D39C32F79AACD665ECA7277148AE89168C46840
BFA42B5EB6D2DC10C1B440B5B316FA8F6565B7C0596FD023D6BD1C2CA79CAD7F
0FE9BAF8F71089C3F94C1A9FE844D514E123FDBBD49FE36AA88DF9E59107C892
4E34E442E4A7B0DAE50CAD34EE9951CFBB3E23E96C7086E8D9E5015CBD6DC0AE
B49862AB0712464EEA52BAC576A4BA45363D3B7FDCC2F4A81E47370B18001316
F0FAF32880794EA774CAD2ECA4581BD58ADB6AB154DAE7900B7C4B60F6343B92
F1B67E0B8B99DCD7EBB4E08F06C3A4F52203654730006F3A39B43BFEE5D80FCB
0D3A83798F244EA38E7D327F0F4C117F34AB17610F5D7F76C202F7697ECB0E22
541651CD027D5B23BE4FC86005E73CF251B746D86FFB6D567AEF67B112126E2A
CF3642047B512AFFB892DECBE1E9CF7F118F554E5688D5246D21E1C4BEF63FF3
123E5BB8ACC107D8B722419A9C1F8EBE330B864E6D9CB09895FB773DB25F1A4F
BD03CEB58C7EDF1577444E6F9B5C63BE4DF55743E0DC918118BAEBFCC476F9F7
F52DC619649FAF3BC7D3F0867D1B8D78B9A9DE9DA1FA281D38D992F1779CE576
DBC43DA0B3D52D76D907DD2BA5FA67289DAAF80C0F5EA7D9E67929CF4142CD55
62FFCDA62B59D893A5959E924476E93CF7DCA4E9552E15B0C62E64A0059FD24E
9E54D410482DA1202736A20A2C8511C202DC92A263CCF305021C674FC70A8D1E
5B9FCE9EBE0709F542F3EE5DFB1C1A0AB40E808537744BD9F54562D7B4167C0A
622AFC28FD1A1F890D10DF396A72D110434C6DF848316629CA47FF9B07038337
966F12D57747A2957AF8F20D293F17F5521D3311F85DC40CDD28FDCE6ED8D979
9646156E1491E5521FC8B9CD9158D750D9AE1D1645E399B20090DBB60D0B3F5E
A1A13FB288A9C0D536A297936EBA8F80BF5B2ABD3536A2450AB577891F3BF378
698BB17CB6118EFDFA622B219121677E28A1CB84DB96F62E89B545CC8CE8B786
D388BFB00807370CFE577C1141A7903C924ABA53A4B5C7C390F436CB4C08BF45
547F698E0DC00CC722B65CBD277C5DF3B4B1275640937E5325EA8D2985AF7B9F
14EA2C7C51096681B774B9079F2DFD5420F6D2453D8A30572DD2A12550B2D61D
32D43CEA6CFFA363D804FAA42013AFFAD1401B54E1E86AFFF6D7E6A9E866BAE0
54F5EE51C829C26F9B88AC109A4388B2362A3AD1F83A14BA94D46350DC9C2286
F9A29749D657CC05714F170AC2B490A94F98BE39F5EBC58E442616A88E8FC019
4CE3B471CC2C4DCD7EE8DA67D9B82DAB5601A9125A3B90CE131D3B48612958B3
89F643AF4EF40437BB056519FF432CEA503118F0A2F57D33E98813E044F87B8B
46C868D6D2FAEF826C12ED0AC734005B3FC8E636D5951411C6F46CF31F03D351
7A96309E02D4153F7F64C21C8767DFAB7E5677415F55FF32E4308FE161C7315A
12FB600B92EEEC2CE2B6C918A7906736E895F3154BC4409B9A97CCAB9DA5C761
48888F30AE04C7EF468C8FC8AA1C0A2E529502832B329B1EBC55089A05E432F5
A19F77E45AB50CDF50B9F75F0A6338BA2148B76EAD501C9C1670B8A568F69091
BF0FBC9AD619AF7C31436CD5130B3B64C1EA82BD4445555CCC8D8C82839F55A4
6A84383A5CF1546572770BBA3CB09E41AB8CD211371A43A1F9F4354B5BF2FAED
4B00F36F2CE5F46491EE8650568A3C4E497D1E90E7A0F10941DE0F2AC2D90107
4A7BD43D4D5B05FA1A04F498C68D3A49078A7E2CB48A43238E9E64127BC951DB
04055489DBA72C24342D68B5C8896AFFF13F6C5D87F9C357CA8E2424585B9D34
982C57A36A52CC3D3CC3A173A7346B4A33C99BBA62EE86C30D0E93B2BCCD4A74
3DE63B7A8395F625BA36D9134FFB89994E5460C89EBDDDED2D74AE20D4B29604
D021B8CB1F3AD3CE5104318FE113C2FEE0BE9AFC4DDB110A7AFEC7A193835DAC
ED6F47059CEEBBB988E953AC22110E3366BB92A8B570377A356DEC6AF110FA0F
C9274961C7033B715C7038A7CEBFE998249291D97CD034935C3A0DF3CC39563B
4230C6A08BB4FB0CDEA7D44636102D47AB90B928C3FC68D277777AD2F477516B
6676A165AE58B26B9DEDEE02099393336984A0495B5AFDFA147835FE0BCFC558
AB6171CBF0AF8D53B79FF544A0C6F98C72AB9F84F3C402380D6677A1F2676225
A2299BC2E64FAD2F51D2218D29E57D8C2C8B7EB292D0E4ECEB60C79F9DF0F8E9
2B8FCC8CF0717532E4799F0DCF5D2FAB1DBBA602BEDD83581EE4119973AB763E
3B857A6D32903A4124E2264000233BA7E9B1E80979B7487BA2CB786018E20A5E
0355AA35B05E219F5E55187DF09674F324FAB81E61751AE62138DD04BE3F1DF3
1CD64AD21688B2FA3BDF5E36CFC585953C95FF27739E9099A4B58BB53E3827F4
65279870CA842A232C789B363F4B77BB6F513F2D1CF82BE364B0469E2E163414
EA231376981947B80419C6552BC98F10E252C17CC9CA5E9E71CAAF5A17D5598D
8E8BB772EF73E44C8F5C4B69EEB8584D6AC888FDFEDE4783A639A6DA91EF82C0
84C1C89C0B70F7654DB9EDF8305228BA8CC8209364811257891A08FAD24873CC
2C75DA3473DAB2832331C2F3DF3CD45EAC63D7202E2F23518545A75568CC03D9
528A3DA314C3781B6AD8A675B3985D96DD31C832B4812AD67FD873378141C0D5
E654274F0A884B4E81A58647CC0C2F66BF8B28CC148252E90F6E7536E42E562D
803338A8B8A330B36B22482CF96FD2696A48C832F41C5C234E5A477B14256AEA
DF217F5E4092D1D03ACD2FADCF1422BED5ABD93033AAD7057C0C7678850AB645
FFFDD4055C250801E1B884A635A73EC67F26C4A36894C4120C6C7FA052F8979C
7A5CA5D52FA1B48C90F140B934EB585E3DC75A23E9F871159B2F3CDA9654D2FC
FCA727506D00906AF8DD24262D80A1DDA1396947FBE8692B77E9A6F5B1286C5F
FA28489391031EF6DC2E9040E85D23934571B2C15D82EBEC804D15C0FEF51E81
E63603AB1E9281C2D8B798E7CDA3D88B9B026AB9A677D0A13C4AE52D001C95D0
C24AD339181124180169F3AC7E7A19D8565769126D2B830F708F56A8327BB7FA
5CC1E56949F31D5077D185A6A8C1C19267AD441581D7A43EC3324CFF3DAB7E16
2F0C63A0687F065CB219C926D4511E817E1D39B34D480522E9DC062394210332
CD9277A4CD1995D21351D824C0F8AB1AB137E7F6D35AD957835FE482F81CD228
FA2227DAF5336316139B1C3959321B8800DA2D2E66DBE5B33DDDA58222CDBB75
89CF09DA07C6EAC8D8FE03BC36A4649EB5F77E9930EE7D89C8DE35DF4911AAC9
B7C62D6F7CA19DA5777365A7DE0EA36661EEDD0D99F80734662C33FF30DB7BFA
31060D48507E4F90994CCCEB2B11C34946640CFDC74AA12724E13770A8817E1E
619793C85487C0571E75403D111C5EFE83AB5351D1812A8B8743AEA49E26DED6
E9861BAAD4020FFC9E1E36598BB8A970AC962596E5DA29211EE28BBBAD5C0771
8185F2E6A707C1CBCB5F7BD74B934EE2BC8350E3A8F4332D19994238F3B603EA
8489EF99E770EED78A968F1DC07FE09105B30F327FA3BE68C5416EEA99D327FC
24376C3213224CB700644CF44FC66D9118186CFA278E47EE2D0B419B93EBA193
7F83EEE9027F53A79111AC130AB4A246A18F1735A73665A2731B4B56297DCE76
B0044C5AD81F01E220370DC8099CA12BF2C5AD035AD6DB4B6128E36279CAB175
64F0F604C2CAC70727F24CB5F2B23E93A3CB703B62F86E41FBC6421EDB9FF682
9A42E3952FA29C49E2D9F885C42FCEF1BC56E92FDE53A26F9395671BD1653E8D
F6C5992563BCCE12B4EA70A67A6BBE9A02D18CA44689E5DC1DCB1767179A1B63
E40EAE3829BF4CE47841CC9958B70AF6D0D07D34102A25E12F04FC9F4B80562B
21C6D0BE5704A5B17E3209DF9F81567747542BD1857B6F5060D31C481C37D159
D01BFF4511CDC412A885258111779F31BBAE3304BF771CEDC1ECC1EEA9D34523
544C00B58BDB14CA1DC0694534AADB7CA1C907C3EAD979BA7BFDEC43C4901AD1
4202F6538F88EDDBC3407907C2BD2272BD90173B6B0DFCE2AA75146BF25D3508
95F22F5C898DFDE7899D04178D521C14ED2611ED7B7DC383E217670BD6494D82
E11917C0CEDBF68918F144785BC1011FD3862B69DAF75FF7498321DDA1ED16EA
F12746E7ECD0FF3CC3B761AC1B46CC8C57A7888E103C748DC913172BE5853B53
486FDCD74AD402F0FF7872F3867D77DEC97C808656F26CFB3E6591E5D503C2A6
D0AE50D7C66575EECFFE2E6925962EDF958E7197B1A26EB30141D2358C0C3F47
AFF734D51390E769C6D517D84E223D306718D250574E4602EC0964E1E28AF784
9030B807C46BCAD3D070403F49B5B89CE4D14F9AD970F33485DD79C77BD0256D
6B5B7FCFA5E7F8BDC7A6426E2A74D69A79225397FC863789537C701CD41798C7
60C6F539B07DA441ED1B5D45704665D5E85622B48BEC762BCE6C8196F901BF6D
9816FFA07969DD0CEA6C96698E00932E31829A69E2B42AED8B7C9729675F9DEF
3A78573638C5B6A95A1958EED1B1A35F21271D10FCE1045F56061366E217CC46
FE08016C3DC5161B74DE04DA7417CA7023A8FA6643FCD7F55E72948D2DC55AFC
5016FB2C4CEFFB29D33E4116A07568EADD071850FBB88222EBF0BB4A984F0333
43ED04ECCDF84588B7283413A413A9FFE523F0680C042CA59213DB93D00B61A1
7AAD92EF3CAF093084BFCFBF45A265EF7728BF1E9A648CFF974273D188BEFD37
C9AE0B707390C2CBC0C271B9B304F156053EA3DF7AAD83878518DFFB3EEA9982
67FB51CF42EEAD7BB7015C37E9B93E79D1D9B0E84535512013C74769E497F6A1
8B100E7419E54BDC64C410EBA4FD22C67D7C3AF711B3742A1DE9564A9D3E0710
6E7C3EBF116741C894BF38F5E738442A68778686E7CA0C313E15FE05C63C25AD
87670D0D578CBBC23C7B47CFE6CFD6EBAE3E24A85D002135E6974EB6F862421F
6F37283AFD0F95C4B889F3E301B88C83F192847E27B311C9F0CBEA812BDEDD2F
541779B68CADD0BB7C24825074C22EC6BEE99356D229231F672BF1C5620BB431
502DD43CDC3F3E523E93A55D49D6DE96D342935A65DACF1CC2BBDF23A9A72128
C27B3D4A09F5E907121305470160FFA5A9F9471856823C9811B3B5ED20AD2FE4
57E763F1E38A6EDD572326680D97565FE4D1E216A9C768A454647DB379C0ACD4
22BA2229C8B0D4A9DF0932F6AF67C63FB0EB6EF172BA4F1B494BD3185DE85223
A77EB43DD46D01E050A07155954EB8B347918C4920C7142A2AC68231DD2AF571
098D548148D7DCB55736A343D4F9EC8FCAFE2322B848C139FBF3E82B94D81A64
80467C07A7C017B8674D22344BCEC8F8C4FCBCE04F3C65EA91889541467D451A
5EAD04C583BDB2CAFF3EEE454AB8558EC865DEDF781D4A97BBA0591DB59BDAEC
C087BD360B3B50F5CAEA8BD4F3EACCE5A8878F02E0B498DE9C1A5F110347B7B6
12146B5E4362BFEEFB41A343AD66AA4D2FC6AE27B27A17C510EC43F9A6B4C111
BD7B2A4307A0C3F611DF40E7AABF085C3809142BF88C8C80C42C920F0A78A29D
8B8920635C97A7C153325868F716DFD2933D5F0B14A0BB45AB5F7647D20F0327
7014FE4EF56765855524A8DC2993B567495B0F6AA28F06AA2CCC9FCCCC2C4FBE
E56EB34405044ECEA8E10F6703206A0FBA3035DFC030277DB93F3AFEB4389C16
2235FD048F0C7CDFA8AB3811CD98E71BCAE53C8F132D263266C587805782FDA1
8363E24FD3E96F0E3D2B357B3B8111AF03D89E764E46770DD8538697B33CC8C5
4E71E075F1693EFA5483DB7DEBB47B8026AC74EE09527348E31E31545F0FBAE0
813944CDA0A1D5C90614F22E02626ABD343F3AC0A9698AE84CBE66263CD8C96E
AA02F137C2134A47241E3F15A881F6A501C6533C0356C7D6AB6BE4CCF1C2A978
C9A8DAA2BC563D321B8901E76B80E3B89A01CFB003D77233A407AEB5CA9DBA4C
2C3F91912C485C5DAC43C435E2F5527D647EFDC220213AEA97259581392B9BC1
71B1AE1279F582D839FF9C9C2F8385BA91BEAAD1A686B66DC30FBB57A489102E
3A5247CD38F0C8DFC61D9996A8FBF914209AE128DDEF1C4099C3807A01337FA4
063B87047466804D6AAC393AB9E45D02D0858DD87D990013D6A89CBFE02D3C63
4BE4DCF7A2359122F3E9F7099EF323D25D3F3E547AB7D85F1A14100918F605CF
E56DA8B9A95E2F71E964DFE6AD037532E0E981F879B79440CDBF6CC14F198DBA
7A893E6AD7406F2C075B87AEF6FE35C55601F999B512A8012B582E72E76448B6
CE2AAB25ADB6B6B2AFF57F0B2949B9B8718B426C20B5288AD0347968808E0C31
A589D075992562F5474685253B3F4D79F949F6C6468BBE43197E100DAD9EA1A7
CE89BCBA746C4D9789658488E28072CD0BCA544694E95E6AF67C7B558F90B31D
F454BD990120A864053544B3B19D36FF290B4BD1B807749BBF6077BF514DBCA9
20BCAD87F68AFC4596DA515B4EBE13E394473CE623CB9AD2C26CFB2671B72D15
270CD8CB1D59CA22EA631BB1B3E49E42E7B668D99299AAFC1A4965F05C16DF90
85CED287BAFFC6C93AF8FEC009CFAAF1928FF6060D8C3886703050614930BA41
0862DDEDC0C900D5198AE27851335925163320DB80F5EFC1932347564FC1C643
98D712347D08A572DEA0C23D6F7DE57D9852B9CA89927AEBBFBC5B6E30D586A2
DD28668DA7A60C446E6D4F86CBB53775A35F4C4F79078BE326D09EF99C25BBD3
74C2C7B2486D61BED35C2AE04107B03CE274EFE7CF5C3887793CA934F06A27C7
8C5122CD9EC73E29A912F30A47DBD6D715FB80371B38377D2252CF0A85C938A8
065D01417B18667B975BF873F4BEA9022072655ECB439F3031E03923EDA8E2FB
ACB8D3C58CCD07BFCAE08D822CC52BCBE12DA950703A90C352983D6F88861882
EF3B6E75A64CBF2A115403A2E98751715251D4CF99D8DB478A31BD3F8C714DD0
B43D864F549344B3D2D311C782B0D209FAB4DEBECD7F1DA1FE2A0EFAC740A45F
E966833B2BB7FFA220503E9EDC623DD02C323D7064944D89EB2E6FCB482F899F
BE7654F08D93E029994A566CDDC866CD6DA6EF376E57B6E45D2F375499F8118E
AF5C7F6607DAFB9C8EAC5E334D9D374A9C1B6C0368B6486A3D0662464414D6C3
7E66B6A3618EA101BDBE3E814C5FCB11C6D980578DC2352ADB9D6A8A6CCD84D5
704CD7687C20D023F4630958904F6065CC0ED5761A9AAB14BA563F1D31D0CC8C
C759A49426FC6F4CD868486008400A3BA5D6D7BDBA90DE0C9EFE0C9232665F5E
893D8500CB57D81CFED18FCC02BFD1C0F6FDF6FD995B22C0D3C520C592414DE4
8097F555915DD250546F22F9F42CD1A5AEAB3ED00E7DE847BFBAC0D6B05C8C57
0A8F4BE71C6EAC82D9A687BB43D8309085AAD4C782B78A35CE8DBE0A290BAD08
85D2A28A6BEE434017BD459FCF89FA30E0281A08AB3702603C8E699CB21CBF1E
702A43C212F7FDBB168337708E7D32E8862B74C090DB4AD61A73BC0C1D2A286E
8FA222D315EBB019C7207B0558CBEFB9CF25E8D97B854F2A2920A5991C800847
F92B7E4F5DC3A1AFD438EE08BFAD9BAEBC7DCAFD3C85932525DED92156181855
1B6F7D1EF658BD5DB39BD9EF06ECBCD35F10C42EA9DAF365763EC4B133583BA0
2619C2C67F6C2037E4E54B86594C9298A2CA2FEF18A89876F04B2C41C57EBDE8
2B9EC3E07E59695B17438E48D6264220B1B11153D253DB31361DADC038B645DA
1E7823371F1FF1E6352F2596EAA0C4DCB8DF16CC632E1A740BA3FFE21D909997
9EBD752E36A8EA33F54120611957B1224E2237CE0413A464973E2730E8D19B85
568B16AC0C6105BEA2372072096958431641E18570C84C47CB1B8AF7CC9A7435
EA85ED80D8DAA2ACAA5B048E4C85819D8D903ACE520E5C7CE18C5849E359D468
9386F8241FE6503D4DC2FCA7AE4C781A2AF6751AC2366302A37EDA689449C6D9
74A97D5AEA4652625C005977FC252B1377F4E7D247EAA5BF1BEC53DD019DFCBC
3099ABCB5101CC692702C7DA4FC76A3C64840ED949509C5BA8971BBB9E02434A
CE821D263606A374B64A01E25C9C7B71D0F49F29E91C20F24FCFF3B8645ECC3A
D0C5EA2C6E64951A170D8F94874DD922AAC1936BEC68BEE119F67756347B1C26
50F77845B4EB6B7378DFBF36AFE522359CCE22B6E3A5268BE5BB7602483A341A
59A1B95EA285C94FA6C4C8CE5866A2B146A9A3B873938F7874C50D3018716E75
5FD272E07AEAB1F2D0C9BFC8600FC97EEB77753976CDFBE158C5F5DFCA812225
42CE81F2CD52B47A8CDE68F4159258A9ADE8D72A64F336F904F18B00488D7316
A0E88821F713D83149911CCE2064C0AFB4D935B09F36A0F4D61211DE4271273C
F39110B40FEEF6B961452F14E4C14F3E713FF2C1B9B9B53E7C2AB98E9FAE78A7
029676ED063BED6E64D0BD1E9C51FE0264A18B16E899EAB7FC18DEF46A81723B
B6B76B4C3C2E2E5B8584AD015374B9C37FF104130515A28DBFE7F9A83A6854EE
28FD1B2F52BE6E88B5EBE3EBA0C7901A362981D05A5AA406400383B2CDFACAF5
8611D2FD16232973483E312CDAC16CA061AEE91A7741ABCB2AE2039CE16E1FE7
30C26702E68F7D5935BC45355460BE4E0C5D87B5B3B91F8CD458C787BF1DF1F6
000B8FE97DB7A9D8C8A11E9D34EDB183E4715B08362D38B92F3E77B55CE291AC
B8321BE53A2C7D274D73D21E6C85B2018E78352250261E141ADB4233C557602B
6334D7A15072E61E39663D742EE1B3ADEA80B1E8FD313693E1219B298DA01C6F
8EB2A860446C717D6BFCDEE0883E9ADD2BD5FC05D3BD77DA90A733DF8E98FBB1
19B18342A7283EF893A875CD8F019F124FD73991B3D28EEA63093F2F1386A15C
EBD69E49C8FC7AE15E6B525596290038D3E7419FD02E246015A49306DA63E60F
1E7309053453510645FF66168961B7D66288CF36C97474DF109303809188CA82
1FAB51B444154738A54B5493450991F8C59C3C1CD422C605740A8939487E26BB
9233D4CDE92F7ECCCA5D312E8E0B4078AC809300807CFE4BF7CAB2D6CB6F831A
69254A546B6DA8EECA492D56B2F9F55B3672AFE8503CE425C1502DC3E14A5993
ACB13E77341634E66286794A6B632063242034681657D298C1383EDD3EA36E26
43914BF569EA1F9CA8277788FADE52905B6912419779A842DACD9FCC7E91AC16
D52049FDC80E3F5947CFFB4E141E414CB9DECD58EB2544350BCE56376867A39C
F71BCBE74EEC946B4412B0398A980FF85A6100CA4BBA442A0DCAEFA2A20B54EE
054AE15F26A7304A9A97B0E7233FEBEB709BB571CBD6D51C00B349268DE077F0
6A8EED668F9B6380CAE5E75DF3B8B749E7052BFF9D02D5732377B16B4C393369
5839961674CE2B5AEF26AFE67D401B47A1E8E4DF661329FC2710FF62DDBCF951
C4868B0DBD87412982ED98260DB84337892A232A3A1E688B83F6031CDDF84F5A
94E60CAAFBE1D27F470EAD9A7C3C767303EF650F0038275688B9FA5A894C3037
38994C150DD55FA5A0DEDF7B0B982EBF82D0914F7C33F549D3055E6857FC86D3
28500A1BEA9D3128504CF2131FF06AC9AA00E30AAAA7D87D8EAC69E3C8B77D78
0EF389B8367EC52D3AE1E3C2855DC776AE87C783986BE301803D8541D5C882F6
EC43320D24867624620D636BD5D74B42B0388C0EF4BC337C53E57106BCFB1FCF
B2CB1DD837885F2EBCFB3BC8E3B4CAFE23E8BEF99C8D9B8645A54B519859A907
F2F4CF9579BE24A6A444D0F771DD144D3AB7979E531294832E44382734E6A4FC
602D809C8592021523C854A025BD4AA11B023E9503D3AC5C864148DF82C3AD47
722148D3203D088ED7A1FC7CC863AF414AC14AC2D75E5EE8E2C44B0A794D061C
547E8F1798A64F9917FF908D97D747A40F5DCBB866F3148AE22AC1F787677CDC
3C2F1C7DD927ECC9E3FD1923C32789B45410AEC18605C490A58867696454DD31
07E2BFDFA2EBC7A3E2A78C8927F24C0706BD5F29999C7A0E3AC55C7435402D28
F2E84D2EE64525DA85544C9A64BAE28239DA8BEB1A6A96E95B783B1FF5990240
926797C0FF3963633223EE144CF28896B00F6939C2D1A29D088F6F06857BBA75
2FD2A7D6BC309B30C160D66EE1CECD38BE03720F7A2937BAFFF8038910C0E7C3
B7C45426702C139ACE571B62E1A19B26F2E26EFA95F8D642F4B65616E2A22223
B0E9F7715EE1E8617FC868081FBF89A8CFE1BD96B21D6EAD9E432F761AE69415
435AA2C70191B24E20E699454570FB31850DAC38AE14BA8937907319AA5E3423
F9BC866B6FBB910B766B0D3B5B849FC57905F16D765BD449CAB4455252955542
B51FDEE30829D59D8CD75108CDD5C40A6F65086B80EA65DF1715D54BEE001D6A
439BCB4B3B7895ACB7AF7EC82DC1672D2FA869F347D7EE2A6148603C8B5BDAF9
AB2831B8F48698D0BEA2FCD4557D0D226934EECFDDC7D0B0B718CEA8F7D2F96B
B74F5E3F01C4FD8DDC8DEB238A2554A274F752B2759825CC4836DD015B037C08
031775B8A305B3248C4A133F7EE497B6EACE17516DCADD90525F5043AF0F540B
1A42B6D057F6EC11DC7BD2F47472592808C6A42FA2EF84CE95E719106E59C421
D7534E48C018EF86987486C5718D18D9E787C067EE858FC6A68B9B834877BABB
CC880E525A437F4391E79929A9C133BC9A0E600E4E4159874F8CACFE2CDAFBCA
4AEFAB885EE6746E6BCB698FF6DD5CB3E52F13482C48FD1456BB3DD971792EE1
B00CE037E54B6EBE4A725144D8941A96725CF46A44ED8B88CB1B2544153A1AA8
D2DAAD9539788780C6E8EEAB50A684882F5AFA6776BEB4765C6ED70B6E038C63
536C67F00F622D32DD9A0656EE7273EC391D39F1B0EB6B09E9A78487CBC56040
8D863B9D17F62B1EE6919968020D41EAA7F6C1A9B682B344B7DC94AAEDADFBB8
67E923B1E178D16C6D2C47975AC170824CA29486FA545BD8DE5177013854B109
11605F872456B8F504547C4F503F906E74846306E52E324E00D300A78B984ADD
86F5B2942225BD45F6FE01CB6C10015841B66CD6BF4C70AC935CE75D02039117
9FD995E5020FB2B56B488D0D628F058DC1B5EB22D5F83D6A295AB9E01BF45591
DFC3B9D53980C582EF3A79C9F067B1C1D5C9E915592F7FABF351B02E357A9FAF
092F7C3D4B36042FEFA70953AB89F663527AA83419708926B62570656C0D125A
A93BC857622A48D33AE8B2BDCC9705D1EC8848293ECD9599CAADB3CE77E62E61
01B51F0D07F66AADF8A594E4DFB2332F3791AAFF57C2FA041DBF351FD9F074C9
8C6D159862B0ADCD0496B65715DD63A14FE70BBF7EEA5114584A91048CD1AC98
BF029299CEA838209B392B22761F4B31AE2142A1C04E07EBBA6599DB6A9E6D15
7E7FB615FA653AF27B230D652116A3472CE2059E675557E53A7F82EE005220C5
D9C7368B0E9ECE176300D5B23326DB319B1509B69CA9477308EBC12D763FBD65
03011ABA247A0AF3051EEFA76D33FDA0C0AC392A2F772A9E3D9EC53026642726
4FC16F9E84979B100B84152CF6E0E17EBA2352DE294B8534DC59A96C113F239B
3FDDB442396970B2C343CA865C47F0497FCBB7C1220C5FE36799601CE72DF8F2
762BBF398C49AF0D61C808A2ED8A2E67D5E919C60C0CDED9471D5512C9B6D17D
206F7034D0EA4F1FB73476024F876A60C80B2B0BD44F9515593C1E7C135233EF
BDACB6C764688AC18704FB8322977A15C8ECDD04BE95BF3724E476476930E154
3C91903100B8AE9369DCEC61F491A3E6DBB68A218A398562E2E6E382E387E14D
829E48084A5F6F169C291BB7FDB904D149467FBA73927F2CC982DF1C2693E6B5
9A09821BD121F361A0BB39E02217B34E09C28ABE1640ED4AEF84057FAC50C227
D23DCA9572979472770D120BB685C2140498296402770DC7262C71EEBF9EE42C
7A111D5BC2A9EC89E2F19716811BA35FEA5AF65304CBA1325DC5A5B0D8ADB556
3588D38C1151A012779EA3A28A2065649C8934EDCA599ACC8C6C5122AAC38AAE
2183EBBF47DD2CBD2C857A323BFE20160848929A0D90C4720806141B9514BCE0
D709937674AE66657BAC3A58A4EEDF997EB49F8D967E148F3810C7FCB2838464
1C07C53CFF7417FA1F38C1AE3946453260D3BEC44FCE8730E450F3EFF5C5CAA7
2856C1E8748411A4EF4789F1350905881AD6417E215513F8A8224D0225677552
04C3D749FA3CE81431E83632E50C9504B72081432557689B9103528A7183858C
BEF8F5DB1F79860C4B8B64B68E84AB3FCC5AEF37DB709AF088DF3215909B48B2
6D9040AD0DB47314E9395370152136FEB80F752558E5290B983A7CFD19B9DB65
CB41D0CE65F05CC6ADEC4BA2AA4B92B0A965BEA31B1EC7035C2A626853C90F57
4F0753F1E002F576583BF8FF1FEE3ED0DB577DA27E4E341D6F2D32A270159C13
8B2409D3A79E946E5680042F31B70AEC09B7B7D697A6CC355BE29D6BD5706D9F
0A60638B5608A05FCC5A87AD774203738D9D144919E9832D93E1569693E3E2CD
CD508876E200F3B1C6FC0878C3689734D0977F61D836C0BB1FA3D448B363C36F
983002900693AF3512783242342904893D044DA384E4836D27ED3C5272F362FB
3B3C1B14242B4698C022109AFAEF6A836BCD3BFC8CE815CF8DC0CF6D4C15FC11
0A14C6B17D8BE6638B1745AD02A01894C458AB9007A524E4F3BEB89F1ECC3D64
576524BE0B1B9D79A76536DA7036198FE44403975E6EB58AE03B17825065A7D1
7F4815CA118A1F4544CD71BEEF45014EE987DEDDF0724CBAC3C084F337DB347D
7E909B751F4CDC6547F9D72805E61ABDFC1C57061DB609F9F27608073B580ECB
45053F0F2A618B6EF08C5FA3E85F241E3F8F815FCE7C8E07C2A4258E17D6582F
F715985459988C67DCCB845094983454A37FAC420C701C12BAC758B30905B56C
CEDE37F37167FBCFA2CC9AFF696A2DE791D9F3B2BAC8FBED7AE0AA0A7DED469C
64ABE4DFA9125787095ACA9E34C45BAED9D91FF93DA907953BF1D25E12AA256C
9519F4F823F3A4FBFB419579005CC1A23BCC2FB48992BA917D5B91FCFC9CADE0
32280F7537D1F123E6E96C71479FE3A4A549474E89A56D13CF6A99EB5D1AF2D6
1C7E16BD6625BB553B55795197C11C2065C639FCE1C3EE45D756CFCEEC3CACED
14896D6034D50A5444881CD32A24FE91D5FB42C42113C538E707C16EE24A3F37
5E7C5DFDD009A6E8E5F3879805D13FB270799FDB98850AC56AEFD124F359BB33
327123B24688B757F4AD4411072FF9EB94481D1B738D0627F2FBF79761569445
0C2484D2F2E64B909A11A824C2BA80DD28426CB762BA1573E6C3EBE16666020E
7CC501E807504FA9A2A4625E490C819622D8A8B5C3E352E7F66C743DEB4EC14A
3AE0EF469A2CD2FB00EA4915F40C24875AF382C1268ECD03EB4698A8F8DA9A24
8280280A4F1F935E552518270B6315EBCFBBD3592EDD7F3CAE82407719F13E81
9159309FAEFEE5BEE37EA0E3BA67931A5909052548D3A596A6C6C6AB77CA6775
BFE52C2A97EFB0D86DD9BF2F3AB34DE24D16AF01511A0944D87097839CBA65F0
FEE40BC80E05BFB45CDE854D700A2B0B8180E5389A54B85BC69FF37B8CE078CB
FF5F62D1E19C06F9E6851A64BEC3F7869EE3181CE8AA17B6970B9CFB51816062
5310AF4F5F81EAA90BC4FA26BEDDC52A21E60A61A01402B7ACCC86DB1731F1F1
240F77BC7A1368AE2954C28514D91A9D54BEB95915E160B6E3A98C3437ADBE66
A53BE748C4E76934D67AA367955FD8B1E95BFF59DA4D95BF116C42EE64640B64
893EA9BE9E667C38A6CF2CDE468AC65F90AEFB8FEA4160CA7AD42C31B640B072
A8E2493D867E17E8A5611A4583A323BB7EBB612E96A7A1B36AEFEBCDDE5AA2FF
060D88836D4695194090DAADB9A35ADE44D831A8E3D9D2C137FFC02929346A86
ECDA9D8898727A1479738B54581FBEC32936073014362A92529D35C26639C017
D7F2EFD6DE3A2FD816390A36F8E5C4CF05E92085F8DA4848BE88C0721E27CB13
D8DFAD0EE8981B8676688E6417B90916BFC3AF4E4C5612BEFFE6887C53CFC23C
425A7BAAA4F56E43F68830D48FAA0F3FD51285924720666EB9AA7341BA436844
1574C5D7DBCD140A14AF212E1BB233675DF422A6F4CD864370E76AB76E4E4C64
BA296DA5D59CE3175A99CA26F4D4199EAD13CE31FB746C7352C1170494246D34
3D7C8917CDB779D86592745C3911D921769310244C99B8313A7415C7EE363C4A
24568A6F2C29E2DF837D72BB1CD23B48D2AA59872E46A800BB496B5764B32644
6A071B8FE41A8B6DA10A27264B232CD79712F7B6736E4FF828B8A0B2A5A38603
CB0C76B14667721A220ED3239E5C8C1A47BC63CF0F64BC118C47A473592D39B5
463A37ED087A340A0DF70F1210D43B7D8D3A7DC4CBF0FDFFAA6F52F892440F88
ED1F37C38A5C915F46BA3C7971BD90920B8E13ABB5CF7AF0DAFA0199E7A601EC
A699EB750B610C25835D06361B7CB8FF90017F221F52AEAD6018747D9F16B6D2
5C016957B6E45D2F3754993481447E2A4EBA4FD55320C5E2C0AF678E398F652D
D2A0094E9FC0DF53658B54DED4FB8A48899758F3C0FA5C3B68866DE2CE22D9F9
8A004AA5AC3AE7797E2C7848F8ABA75169AC83DBBDE492F75921B262909C7FAD
9432B676870B99F75776CE3B0EA1052607AA7B520AE94C2F8F22A9D8DAAF138E
D3251C5DCC5484AD230FBC4E7C44A8ECC47B05C9D9396EFA9D26E476280022EE
7D009ACB5D9652619D665B91C8545446D1AB97E51DA425B3F7616A0D8FF29614
809B84D9D09FA64A11F7094B4EA5DB5DB6172C30F2B8F62611EF483C97115D9D
CE3D17E07155CEB6FAC149C76D1E19304DFA6A1165210D81369297FD9E8475A3
325961C9B05FD4FA366E3820C8089F778C0E9ED1BB310300460B170589DDC1CF
296D2934DC248BC959A8A3CD6E5860F3CD1ED6399DA34671E704C8F7037F43F1
B59C3B7BC28061EB28A940639A54AD821284AAF5BEA9C22182E1B802EB63652F
8332AA3B37989DA406C3BB3344CCD3C2E4C024C4AF5E21DE2AAF50B724BCF6A8
052C88E83DF175CDB2D6A3828D30ADCE18633E23494F5CBFFE865DFE2785BEC3
D2D1AA8884850B485596E1AB450923D5907F9CD12F27D9E1AA228AF71B229F0E
11FC709829295CDF869E1DE50463330432427F759442449F9B2C2E7D1BEC51AC
21BA307746346474A13C143566369ADA7CE037721F3E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 82 /R put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA853
B843CABA76BDE9582090299F423519EE3AF8F83AE7F7828B314B6E36E9127419
F274E9FBF5622C5E48D7E95664D6C0C1006661038CF2C93BEF1DE34A163A2C86
693A13F4D0F052D2E183F36401F0C29862BC1B36A086524F76C7EE2C6D436A23
7009F146F1756DCADD3F70C51FDCE610E30C0F4AC538A2703423A07976ACA74C
25F4CFD6A92969E206375FB0C672E45948B0E832F2BE688EC22FEEB3E06BBC3A
272F73081A30830AE4214F2F029918FCA40BAEBED6299EDBECA01E08F27E5627
F53BC56F4AE7CE2D6273B27323AB829E2D51672A4990E3AEE84331583A99DA4E
63610AF8F10C50FE6196E3F4C1E4FC9BA6BE0ABDC81A0A7BF6A5792A97BD0A7E
7BBD31C3FDC01D734550843C8D84C6CC0B492CD1A6CCD57428F03A863E959C77
457D401028FD00FFA9BC422FD09D8B8A70446A61CB256A2FA0B59A2646D9C5FE
961894DB8B315C52008B4416AC35439E010BF90E43A05FCB2FBE8E62385E220E
588B7FE5509F1BB71150E159D01D24EE28008D4213227FE9BCAA34364B1039F6
BC142AAB19C8E9B15F0113781DF9C9B3BC145955552A901AEBA588D39D7E87F1
CAF27D315E168807021B0CD1B2CE13B611A7B5FC28DEB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Regular
%!PS-AdobeFont-1.0: LMRoman12-Regular 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Regular known{/LMRoman12-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Regular)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Normal)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 44 def
end readonly def
/FontName /LMRoman12-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-422 -280 1394 1127}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E7AC5E68123F9DFAD1150FFE135989C22B412B
63BEC913DA6144549F051416C71903E13237781A5DD70E8333F80D9F0E493687
94A83B2F049E14761EFE435983C72A913217C8946E4DEB22A9DB2FD68B53B9B4
02761774E0E713EB4A4FC9C587A325C91693ADBC62DF65291D5EB7BD830949C3
35DF08289D902F15122C50260EEE2B47E043ADA0D524C74E7162994153270875
9684A21A92E2A110C8FA542765DC1244DA4ED2FF03AB0E7836F187017A2AB59B
436136202ED2D5F38A061955643F519B56D5081FB38526C4091FB82642EB2AC2
17913FA5191E1482492797A09A2C4859DC92077AB96A24C759D2A12D8CF53A67
D39FAC370CA395D7947698CFE282BDAA265B8C66D319093A4B6A6B23D39B579B
02FDEBB0FAC4746D42B81AC988E14F5E16D364AFD1FE5E5BE79B95F649D0E302
3D515A32D736B13ED5A59461701BEE9BD6454D8EDC9F523F0F9ED8C2283958FF
E83175BCD63A78D5B5AA7A59598325B315F6EF8ED5C2903F0797F25BEE9627EA
B7293E929462468CEB3850E3F0F02C6D8BCB048CA7C08EFBDA6F2A43E03773DA
6CEEB9CA135749256D200AF2DA1AC7CC1F88D1F7E2FB7A3B317BD067B1136AAD
853BB4BDB4FF59678994E9E420712F1C1388E969C0C7AD3251B7DD9309CC2412
01ED1742C7CC55BA82454D4A8211FEEE54F750E858EA905059B59AB8153FDE73
21AE301103FF22B1C3AFEA3486B201D6E142180481F28189F1A55DEDDB2B8C99
284BD47214751BBA6318949FD9BF7FB4659ADE42F716AD523F9E49F08C8B6F5B
A43FECCC19D69391CDF7B54D6BEB90258567A4D3EED257CF64B722FF4A793FAA
07250123A6A86DA694CBF1F040B611B619BB7D3CBE2D58CF1223CBF5A0D79A81
7C10FB27867E46D5BA1B3EB266E09AC5FADBD0F80D95237A5F36541162C707EB
0EFCD7DBA0E962FD6C10C2E1556836669524A473393873D502CA659D99F404CA
7B3C6D001A60B17ED2B2AD4850EDCB990134F321F1FD6696F64BA101037918C9
F3EB2C616987CEAA46F6C052EB3FF6F2FB9A6F974915B82B6608CD85F75F0664
5644A5E3888713099F73E90FBC9681A6432D6944A68175A656D126AB96DEEC97
7DFB9A5ECCECE68B7C706A15EA93F5FA7800171D760667E1336DDDED349310D0
BB68B865F3E43C4275DFD82036752613F3FC722D561C0B5BA22C873A42C13AFF
73B7A9B8096208922179B7EDF55236F13203049ED2D3A304BEF0120285E9FBC3
921898A37465752B57535DF5054235CB5A713FDF779C161E40A8A8AD8074AABD
6A06EA11E40F1F4F4090C99D86095BE64A36FA8733362A8D4A2273879968020D
41EAA7F6C1A9B682B344B7DC94AAEDADFD1BD39385A57F9383AA235717AF84AF
BF5D808D32071618FA11E2F7907B9626CA16609BFEE67DB56CFE2E2B90BED39B
54D866320877A767FE000D8A3386EB1AEB2D99809C71C946EB77ED556CD01675
A5D45FC8BD04EAF80C756386291444CFC1D7F12BB4B1304696B2080A14F56ED1
959BD60C7F7F5BFAF8497205D4BD589967F17FBA10C2EF19C1679C5AACA4F9EE
B15E13977CA81B5026C7E1EF4FDDFF62E82B16CBE3D401AAFA4D973976EF232F
76C9D0C0793684D68FE95129C326682238CE9807B35B2C2C0C32F4122724C159
AA1C41DD94D0808809572A0A32125FA4D78B525B256291CA389F839797A13591
6197A48D453611484DA293AAA6B62F5ECBC9D32FD482C74A5387629E03895C5B
946117AA34217BC77B1E075A4BB99145EA55CFD1D12CB1D2E72636AE538232C1
3966FC6E07843E4FC7A8FB27BFB4FF67CD278CA322575D7590D77B4E03E63F7A
848E639AEA6DDEF55107E8C5B9DFFAA47CB3CB5A614B77D0112527C9AD97FDAE
5BC457971A70DB3421293E16959B64702BA858C1217A8B3B836A947462E0B59B
37C8CBC667F0052E653D33F067997638BDCAED6DF3A8F1793F71E79A58BEF6EC
47F700C376341D757B09A3E31F6ABE9EB9021C1A6E311CBAB6DBBC8AECB140BD
DCACE9B1E80979B7487BA2CB786018E20A5E0355AA33D6FCEF382799F62A9A8F
F8262E8DE16E9245C61CF3FFE09AACEF315932D79117A513F6863D275B80A249
01CC70FA943FF9A9F5E8D5716835F17CE3FCD6FC5EF10AC25471C19ED3B2D164
93293F09EA311F49295310B0C1AF942753C52402014764CE7026803F091EBA60
AD877E9208260AE6AF24100E2B365BF89C5B679378A7F6A67087C57B5519A988
04735147BE66CDFF2481FE35DBEE9CAC7E77D79BA760EF4C53A3C983853DE8C5
FD3F25925955F36A3BFF3454FF7B226C0F001FCBC5484DCFA46DD8D89C69C886
AA0247C5EE233C9D7DCFAAEA1E34B8938673AA6D760A80C38EFAE41268C528B8
5A14387C3E29D017EC16BE7E6918E11E7AAE31ACB6E85DE4B2B15B93B7BACB79
AC25F37A4E4D1B370E59C78DC9EB4AE83D1CB6E4DF546FBC914A6FF52591CCD3
C464AA14A393F61610D617E196C9252A013C9532C303C68553C91CE83431F239
BE883C519B643E9EAE5142F698F4B47ACE43BFE59E3AA4C8B47CA18016F95C6A
212208CDE1635F4E5271224CC19B6D47261CEBA3DB1E042443B665E915991D93
2209B3F4C86C9763861923B2F335DE040A8C24E73A0DC3FFAD5A6A9249A29AE0
C70F71EA41B0A4A505263D6A6C70BA63EB2814D31DDE792AAD7AEB4FA346EC85
0781604DBDF2EB65869969F265341938B2C7D6B979342D93A9F5A23A3CE8A015
130A0FB817DE38359C63DB215965E218E892C350FCADB5F66EB82D0813EF551E
F65992B2E24B4FC8353951C0A335B53F68A8F8286A94521BEE28D7319ABCDFA4
A21B5DE536B34845B32A34ED5CA1F3D3EE2B04DC4CBE12FC99DA94FB2648B842
54D4FB6729B1CB7E86DB55FF4216E2F57A08E04B44BB36F27129E5E93EDC061D
348F162C03BEDCDF0521B9F31D29543DE2AD436B75778C0489533F3FD5742FC8
AAAA8A72683C54B45F81F355D9D19496D0F80470D6B289B760B6851EA1A9D31C
01577A0026C7929C87160EE0D8EBC305A07052BD82AF003A0EEBF1D6FF38B526
E2EA0A91866201E08792F03323228B622E30142E47BC752EB0EFF7BE8B688A36
22826EC83CC42DCE8356DB43399E6A6918A887A64B2EEE98060E47C0F4276DEC
FDCA976E967EED2CE2C439693E2FD2F2C26823FBE781CE97DF06830FC498BDB0
73AD2CA5EC36B4892379B00A5C8564FC9A915C85B66EEE33EA460AF6141D60E3
76B4E430431F049992647E2B744E48AFD33CF5041056A43F90D0E6A47C2521C1
058E8C66894928964B332A89C5DA71AFBF455E5A68FDD4DF74A8F1572F8168DD
E778337122FBBD1485F73B4EEC2651C3465557A320A0932B65C1FF77F68B89E2
BE7D6D975EEC017C4CC66C88F5BF25B0D84AF0E70ED77B0B380397149845CE59
EEEF6DDDC9E7C6127A68489B4B19F3D15F6C72AB8DD43CA69CE0AE0177D2B999
3DB6EDD24B6A4FBFAF7245D800115B62C9BD6E97A52671CF3F69A78D19654F75
3822663BE5461EE982F36B0027977D6B3738BA7EBE8FFE3928E471DD9502DF1F
41F853B486CBF6A62EC2D4975CE0BAE9D76A833969FB573201280B149CA91AD5
F57D3A240F66B12B30C0B8C3C25DE1E16BDBF5FFF3CD111CA5FCCCDC96631D0A
2B46A37E422D648CF65D7C1392E322DAD8CD3CB42B3FA767FC185F653F299CF0
85F2C3AD7BDE7C44FD3DA32993CCB41A92B29BEB26E60B05B105EBEB7A7476D8
31D2C0383F39344255823DB7D1D12E2435634CF69890D14A1FF76CD20F731C4D
09ED15BFCB1DC5530257DEDE728A19496AAF9D8BBCFB2DDF39DA7261CD6B1DE1
94DB09EA1744A0B6E3A9A1704083D27D5690B18843ECD420763B9E7F42912756
39C6DE6964F3607C90166D11C291D467B35592E73C61A2DC1F13CD09369054DC
5695355C6FE73DCD523582A4973275B64B3D8058783639676B4F8B47476E4098
ED693455F82F098F49FF487626BD1A4D4B3B7961171D67F8F6B26EBA8AB37B5C
35D075C41218D0E9CAFBC8078A26AB4F29F821A015135CD43127434DAB18D387
013C388D3840182F35ECB411DD16BAB8CB1DC80EE2D09164F7CB2EDC0827D2F9
73A1460966368EA8F0D42E7A93BBD492847AE57C85675CF04BFD1410B56E616F
68C3927EA7267C0C4BBA87AA3EC7166170B80B7355E802532D38053D427DA3EC
5D297AB110438F9AA9CEDA887E63AD877E9208260AE6AF24100E2B365BF89C5B
679912C69C51E8D0541100E3DF71D501F4BFA0AE8260EA411984C107C8FD9285
F08FC3C879AE6D42023BE0E114B374F049F75FC09E974E64A63E36F76D0DCE3B
3E57F4A1C80AE684E56726F52F4A49A022808893BADF86ECD0EFEACC9F5B7E84
1DBC5A753D3803C89C438B0FB99CAF607B7B16433C977215E7F78D80C54177E7
D853C4EB05C108B4859A21AFADEEDBAB163F8C1C822C4DA3FB1A29EC3ACE79A8
C5A00293FCA8CAD6BD2A94098E88D45175D4D9A88D0F77DFD5C14FD6081321C7
AEE0F7914B79B9ED057E292AC7A96CEE551D96F4D85369D2B4167C0A622AFC28
80C6D6FCF36412F8EEC622F2783C9F1A0403E9A5D876942803F08147525ECF7E
0304D3BD24256912A2ED3C59B32CB4091040E21EA8F9253E6CB7433656B87E1B
0A17BA09B89DA54E89C36AC72560140421800FFBFCF4372B123AB0EAA5A28063
EA72DB6C8E32FA349461C1A8946B78E05C110976E5B4B81BD89C82D81AEC14F6
8511ECD14AC322A438BDBC4262A26D679ED4D87F89B2D3FF1A88AEC671EC30FB
4DDA9E1BD3A55C4D59BBFB7F5EFB232FCBE3C721D8D181B02711EE2C105FBB16
BAAF98F469068B96F7ADA96E4C628D450E7E1B4025089EDF05D020C458C7F3C0
A9E5F676EB11E606954B3A3613D4E1DE3727C04BAD9177A42914B371F4FECE62
5C47EC539B20F4FCFB72DD0EF45CC71FFA185F653F299CF0858E25008D1538FD
4D2748FD791113395323560E169AC68D884E15ACA3BA6934ACB18CFB0869D655
CC9E8B7B2A883E868B7D9AB5F1966D7364A38F999D57EA93937C58C1343F917C
4B77C7BCD394C7A7C155763DEF4609925F2B5D58FD32BB7BB54CE2DC59D09E42
CF83A35DC7802A111D96E6C592F5DA313DB18AEC1CBD734D9C289A53647EB6D7
735D9E91EE200FFF4250D413CF779E46A1A18E239FD522EDAD8AEA7F7EC5D653
0B3F2D2A59FED4C52F3D93BEEAFDDEACCA99724FC6248DFC44FCA9723223CBAF
554E37F1F63A7CC7241B6A3197C6081BB1F3246540E952D3CE37E2F63D1B34FB
1EBDC9A60F4AB8C27EF1D4E65E5E97328618BF64DE4BEE2CB0F263EF782C0D49
E6AC6384AEA13283716F280C3478C8EE4EA63876BB37A5F17C733167B2CB7DA2
0C340ABA91FF0B3C926798326D283B4A92B34FFB6273EF4F8128FCB12A4F2C8D
13768637D078225DEF89BFE7329F2B420491CAF1794C18E8AB1DEA1749E877EC
12EF096A2BE42692EA401E2A3A11F32513AB4829EF58D62DF6C4CD5658D8DEE5
58D56E17F13ED15C8E490FF120C6DBAE75E3AA5B8D06A527BA83FC7759239ED3
2C9487CE5089F76DAF6F1AEF63D276707539A79C0AA4367F4B1359BFE46E90DE
9ED306DDA195B893F42B5C037A98F21B48AB50B63BC616BA3F3C588FDD7480FA
2A14FCEE4706AA003DAE9F92D5C55727F7AC23F58C8EF808B093595E631544CC
051BAFED695D5C51797C4E9E14EC72010DB93C1EE96A8C4EA4856637A5669681
D8058179F67449AE6584B538A32295BC5C5F40DFC533F5B87A0D016B3A67CAC1
CE1953C9CF7334F7F3605E4426785042123F5784844950C5E30EFF8683D73019
7DEDF1DA5A31B8AAF9FB4F4C4E0E815AD1282D0003D149F5A1A1742EC110A5AD
42B236F512DE383DA77E7ABE6662843B857DF4EFF9DA9D4652CE666141182F86
363104165800E6AABE35B01B991AE910B7DC821CFD8A6B5C7F4CC6FC03C091CE
C66A50A9349FB3B1C2A695930A19809C222D522ADC89CF698C61B861F1B4CCA1
2CF4B2481E472FDDC90C7BF552E25EFA727413E0F7C59661F1ECF4DCCE59D724
2984AFC94A2233E590A733DF8E98FBB11F635BA1B2912109796C1C7ED9476FD9
4CA6A05BB8C3A756CCE5D25F8D2B1B99B73FFECCAF7C7531842B95B7A4A67149
2A44B7F43E4219879931BEA2B95C7510EA319DE31DA5E946E39856B07D81DF2D
0C98672BD99C91405F80083EEFA4F53DBE3356BE438546C0FB741303E40B31EC
F7705509E83E336BA0A9264629A6EC25B94E589B80B54A3BC1358EC3FA22E15F
C60EF3EC60091856CB963DA4B845FB3276FD3F0B755A375F5C9D4F03D038DAFC
2F7B2FC44D874EE1812B3F153E63FE095A87CC113B930AC5E5548B3701982522
7FD74D17B8E54FAF294389E3804F2D8827B368FD56FCA8E01B8FEC2384E26B98
803679524D46A5A1BC4BEEC335A5C78E90E121BEFE8C3E1729FA4353EBB08AE3
9BC8B715A541515BA68D3264DF63396D5C6B2FB989FFAAF363FBCD811050AD49
BEC1A5CCE5CF234EDC9466F1B88FFEF31523001CE48D8F355B2BDC20BDB11845
0F9F9C13AF26147A6F94636839CF1075286502027833484674C9ED2EE44D10C0
CE6B2EEAA9BD1B7182CE9151EF2A4AFE4FA32112954C5B86EF7AE3D015FAC570
F6596AF00C0F5C7D6336E0E19CA338CCD852E4AD9EFDB3784C6366C4A1EB3950
6A273761A898F69A36FA0E6ADE17A52A09061F578841058F3FAE9DDA4237FE83
F267FB2E492AFCBEF4C8E9DF3FA6967F6F5C9216D1F34F1F9025773C7EA50CD0
1DF13A42E9491468078630B74E277F5C32166AB539082917BFF7EF652D589681
C4958EC2FBCE0E01F764EC4EDBF1A7E60ECE54CB38A7251F23A0CD43453352D5
C5AB3E3F4D4D5CAD9543A3ADBD3DA129B2195F29379C4B88C50DF01F591763F1
6FE1D1CAD9382839AE8C789A6339F7D36DAFE163824896DC2C7B007941D39239
CFA195CE54BBFE9F13E4F119193F62F76BEAD5C3BEA1E7044636F7D3BAD00C99
38DA2463A42D22D0C888082F3DDEF6558D68EEE57DD7DE2478A2B21894DBA290
3489ABB6B2EB9F977F3F4D690B31E8F6E08514B46890A7D87B06DD81FCC70783
17F01C0E31E1A4C310B0C4E5DAEDBD08EDBCBC3BAC588F367E850F9D9D2A9F7B
17BDC34F34DA91337E5469B32C9ED1980C4CB36101226D4929EE7C9DC63EA8F9
780763E889B13FB2BC0150921CF2C5C11A3A9A52E09A006B8124A80BBF26C1B0
D309A6E8E5F3879805D13FB270799FDB98850AC5630E0DB9EA544860D688E9CD
F25E98769FDA84FA98DAA60F8B7B4B80EE209CC66F763542D242050EE1FD5980
C610C2AE6F94B0997E15984F42D43D629178D72F01CFE1AB79E6A2F569230CAF
55EB6CF686087DE12B3D6D19E4ED3FC032610EC4A97842F2BB59894122796E46
19F5CE7FC3B92ED8BC604ABBE0575CF97D126E1669A54A08243D46A59ACBF3D6
48C1AE05E9A2A4432B7BB69C467659C2247A0B25217E43C8C3A9D70992C1F31D
C6753222850ECF459A7BEFF8CE272B577AD0616D09DDA2A16584C8D40E7F673F
BC859CFE610AC653373F102E395262C8BBFCF5C16E64FBCB889EFC8F5CB01A1D
7C7D9C1D968238CADDE66EBBFEDF28BEFDEF19D1BFB83991280E8AE164321863
7BFE082D98512C9D23F5C73C6D1049D98797B1FAF91561FE88F6B59AC7CB0A06
1D63D174CCE92A2B70638D24A5445B56F34C92CBD4E80331798E82A8CDAA8046
3BCC001CB369CE5D0CCE7584FF1FD3333EC86FFD2CB48D694619D3B6F77D8D87
56065D4CC919ACE44690CDB5907C380524B381B6236164777BCFB2273E157B01
E8B11BB02F5772F0FFB1B81C3ED5CA1ACEC503AC5A3F9D962D8B23770C91FF42
EF52D058EC3C0B13410D4DF0EBBC7856F66566786826CFB01F22A944EF21FAA6
C12D3BAC92E531CF3456DD2778F1181D774D8A4CDD0A5787C961FE2354A448E4
6A492EF0633D73C071CEA58830A18AE1C56554E8935A8E29EA9053C5F3EFB0EA
307483F841C23B766D1CB22E9EC67D91F7299AAC56823CD4BE926D0EE4E8CD01
599BC4C22A42A4E9F9365D91CEFA249A039485BFA31F9D1FFB1C157CA626EC05
6A68B66C652833CDCF08803F40EEB4AD2BE99A7A0858D7D26AB192CCFE79C07C
7ED5FDDA9D4AE4C409B2719E566CDF77D94A229FF53A0011CFA86DE80FF60B45
926E88D1714610671D3923BAB73DB3747D8AA14EC6059854FA6DE8AAAAC0A855
AA667C6821D655778926F8FE0A064A24CCE1F22EBA80314370DBEEF9F7CCD561
DC7ABC387CDF2B6C6F1D7D2B33C37AE910E603808CCECEFB9AA802F3002A294E
48053B5402594A8D6CBE3144E3F023BA7B594B3C738E3AC8167A29AFB38F8708
85E83F0F87AFCB125DB47FF5134FDE8B541232027AEA2735E8E862CCF28496AE
C62C6D2A9117340F3205C1198E32511F945E117287AD86E517267E421D37E93F
670D79239ED9C23CE1CB161F50091092627CA0CE851D73E08A7F3F8BC5E58313
03447C940325E2C4030CBF4F39893EAC86362504A872500F5A72E99FD49D0BF0
C12A7175C6305BCCFD126A1E65396D8881438CA223336ED74D2CB53F1FA77EA7
4787017E92DDE4CA70E9A409216C2F6CB26B9C95E60D2DC40052D3478EC279E6
FF80B23C94DFA8ECE2B7374827AE168634FA007F8981ADA3D0355AF506D88E32
379E2C8F02E1379F36DB5250CBB102B21359C32200E796531DE4EB6632820659
74F633EA0483358A528D56A6FBE9F3002E56EA59E9C2459EEA50D4558727B404
136F691BE1541AE3E64BE682605CE4EFC5FD59DDB4A16140C85D55AF2AA52C92
EE85C37881985A9F22B7E3D74EBAF8B072345BE26EABB77DD815A2C40A43FAEC
418E16536B30D75D3462EB461C609C8D47E2B111C2A48FAB1C999BD8C3910780
3EDC1CB30FFC89509DFFBE1F55156A7951B8EFD72B485F95F8AAAD655EC46EE0
B1269CC8781D7AE8780028A6CA54C77CBABD469AFE468B7950BDC321CC873A5A
19873D58DA915279D4C414D7511069F7BF2152984266E65DE1A3A4189DADB602
2E5AA9715DCDB8A3D3D1E9FA06793C754111044E6BD47DD72384082A6ABBC6F6
2F9D368D0F93C4E2551F1E1BD1968BA2383121482B7727ED2FEEF31983E07927
F8878102167E6C23C85BE7D3C1625DDFCBB59703CCC55D0802F05B67594FAC20
AE98EAD48AEDB936A29293C513AF98CE93D5063F7D87E6F759A29F32ADBF5D37
B697E1824527ABE5B8F62F15899242626C9F22996711088F3FBA80E2C1599E58
D1F25BC54EF6FFB05AA6289ADEFE783DC387F689DDB79FCB67920CEF937822D6
AB50026A3744BF5BA2E45A826F84216D7EAC6B9A8134C4E80828B0B849B269F3
81281EA458FF71185168B5152A74B0D383A2088632E52D26886F9BED966ADC9A
C306ADAB6AB6118CDDBD6201B83D0E86C2405A02517839D51030B695AE25CFBE
C0CCD5FD1F4EFDE44C2E47EF8AF9790FBF0497F8CCCE3002458D6D475A6DCD86
4A1AA95C1F47F45B554C5DB2004E075F188A9FF4DACA08F258DA5E279D8FA49A
6B1525ADD1FE7E7420B500C440D364CA8C1F272323156F95644EEDD4DD907472
7F4FBD3C035BAEBD18239DAA37517B3FF2B21C4398EF3C4DAAA73D2E9E02B7C7
F7C277A3DEB8EDC0BB83249CF414967A020E5B8B0F4C985830CDF5E299E0C0F7
F1D0C83ECE888457C900E82C4133E43905EE91B9C549CE3D9E2806607E422732
EBC81F6DBA1E01B1AC09C515B31676917D11D6AAC4F958DB61B556DC1DDD04E4
4AD3FD17A2C6A56854206D95098E2350C75AD80244BC4D6F73FDE34846245FB1
9B5036E5A40FFAD255002931AB82AEDD0BDA2953ED797E7569F71563CA7C5F85
5EE5DA523977FB149576AEA5549B61C5475A0A6EFB0F2F0056228FE28DB2DF16
0599E3A94522133EBD574DA06353DDFA9C87125E5C9B69FE0A5923903203E49B
3AAC7F81979ECA8231422739C0C58B4ADD86BF559D2F5028AE5DA5139E8DBFBE
BFF644019D08C6614921A8C129938FA16F33A24555973303D8CF202979524863
3B82EE3BB7AB14D465CB0E4F622144E415EA54E08AF6BE26B0A20ECC10367817
3A5E658CE844D4F0DDB7D17CBEAD0F5C4AA381B8581DF3F82578AC6FFC9216A0
6EBB48A7D5CF358A8F64CD0CA264AA0476CD88D97E2B329ADEF2F4CE4EEB512E
AB95AC899DFB6F5923EC7B3CAA8F046B4CA5055A4E0C3CCE2A30757E1385F846
2D0CDA1D4FE31FAC01B3BDC0B3A663581AC44D7E7652336E2DD2A86DF840561A
91BB942FF755C0A1B04D23F4F1B2E01628DF6C5A021D50886FE4E385E858EF6C
F333D987339F41F2B8899C23CCB7AEBB5D60F011E319A23D2D54576AA26A3A33
3761183D0C720073C05A2F6D7CE4EF45440710DCD3C90B959AC3A19FA9D0303D
AC5BE0058B7AC46EFDC42A3BB7EC99ED28D2B4A7B685B9B278C77FF850296A9B
645C8A6336457245B77DB5BED5AD69086905342282DD090F725D2C12B770B646
6A74DE9180A36895C3013A45F8EFE7D6D6BB6660DCC1DC1737FCDAE025AA1456
472B68CB75E7DAECA154625D290753F8A8446BCA2EBA9FA3B59F1ADC65ADE10F
AB296A939884449842FE797BA4473543F1383986C413CBF283AA4E1B6102C1BD
67947A2465141D0CC94768B538891AFC33B1E9929C9CEE82C4D82646280FDDDF
C1EE81028E13027F26BABF3AE38AF0FD6BD081E5989BF17241D483037DEDC584
02CD8195B2DFC7EE6F2B321909F5D067042F1120EC56BDFD3602CD8C6A407734
13BF6452ED50E0454810807035BAD9B23E06267D9AB0480ED8F243C7A7491600
119C6CB203E65CC1462B7C3E811E4FBF589BFD5C15D965C316B3A1FC467F98A7
E2F4511DEB9FBAB2FEDC321C7614F30AC150E4622CB7BDB175B84F2AE6120EBD
D792769E7EF80AF8B32B1A30C9F7923E3E12C1BFDDA721786C43C071BC2ADB91
D5D4F19876785AB3080EB8A0C4A16F69321AB69C710E7908494C50597F58D5EC
D91792AEC6465F89F9EBDD06968A80A8CF7BBB5FEB274F945A0FE6EE8D270015
A2C420D9771CD9C71B01A93AFC986C34C0835E517EC748DC40497193F4E4EB75
BCA69046C0326DB03EA31065C27B544A46BFB42677030221082DF6F57B13A373
A9E02DA8959E1E9E908D2A3E2A7D8829B9DDECD23EDFF11182E78DFF8DFF2247
D8C7EBBE4E95D9CF6F8D4D204CC6D61EDBBE1D890C67186CCA0576C1BC1A6D88
1BB06CD0E30160B12D190831DA30BD1A0AC04F2851504C8881A81C1DF0738606
D584CA516A265A9132694BF1A6C96DCFEB832689DC0098589449C6B0FF73A672
307B352E141233CD8E2B135F78A56D706B19396BFBA6BCAAF617825376C9765F
9C13B0D0893DF52D57BD6C1A98F2D084B9E63F2752AB0F918E093F586685D7FE
3A08372E7D7204C19A9BAA0858A960DA6426CF5DE016D08DF4EEA40A90E1043B
7BC1D982E7CAA79328DE04F0F7A33D4CD50BC68D1EC7256EE3FB416D8D4D75C7
DB51C8299B1400E45F4D8E1D77C0C11DDA2EC873CC2BD4C28604E044677EAC91
7DCE9258FAE9F7BA325933AF2A3C98F87DD26806FCDB9C98773585EA5E4D316A
EAC8CB4182A887EF4B294898CDBE8E8271BA5A9A2831669C086A3590309D998E
61DC8F252A4A13C1842F8BEB5A2416107B1E59084B5A0C3941DFE2688F464727
BE1CDF9FF5239C62338F7EBA6802CD6A89C52B018E46EBE636B6214175D6C385
0D944F07D9C7BBA90E20CA49FD3906B7D32C787DE06908B02E3216715507FAC1
A256207D14A1E013338CA388A3A3D8D2373225C6385265F0B26F3B72A68643D8
44B4F859B9AA0942C46A7199C7510F9B2A10DCE4F979767770FEE84EB9C99413
0A91A5941FF5A10EAA8A5FE2CD4FE65E899C5B2267C747BAFD5934D95FBD2640
BFF7E94C4C260CA3170473D18BE8365338117FAE90B9F3164E2A29FBB5372BE2
E7EA49AABA75AEEEC5DDE1D8BF68483C3D2443BC6E159C3EB567F2E92567354C
D98440880CF5031E5E45BCC5D29F88AEE951C2452D22AA967D32C3F37A96A585
89898025EA873936EB69BC17539AFB4E5E6E11F518C80E2749400B4D9A8BEA50
2B531A95D074A7642D5BAB97980D042DB9334244F1B53A7CD80D444A93455702
1183767D7AB50B2BB294132270228229EEA3F8D8300975A1E4CEA313CFFC773E
35283DB5E6587DA67A23B9AADB7B820678F4B87B292CF288D338C41D88929285
1E8273323A6E550D7779D1096790EB7D8991E2D2BB4E21AB095CE70CDE48B320
04072B5D76AFE97A87CF71BFAF27178E708298C154CA1CBC5A2347AC28E96012
3A04365F334C326BB19FEE02D4F50615AC4FF3F906E9D890A821349DE1809038
91204F4EBE911581EA3BE89E4CDAA34900E8B9F47CC51D45AFB01CB6558FEC2D
3770FC07531D30C09C38F2C2F487CA8BC0696574F4D97784BCD075E047C5E337
58D8990D8EE81BAE03AD70AF745817CA28E3D2F3D53CFCBCE1DE0C0838B32F42
4CDA9346E625CAE0DBFF80E0A0B8334346BA37CD833BE338A0A9D593462CF91C
1DC3D228BCF7E99F93FB8CC353325868F716DFD2933D5F0B14A0BB45AB5F7642
E8C7B6113E9D68288A8A324AADAE80AAD15DD2581B12A1F341E51F352F5ACF47
4B8D104A5677B231727E89E38E6DC7E76C5031C3C0FD6080CF97D0318FBE6A0D
B8D3B79075B5727D400344644D0C16A555C50F6826750E2E7486680E7C90DC71
0C4909D50036BB8CEC576642181EF3199F594839CE0339BF6BC57AE9364475D4
0A38ED45BB7D6DA36565148F3FC891B295E7A73C62066CF520A47E1DCD562BA8
E943EFC02ED8BD1AF09AC4E8A0BD65C4230D916FF9E4B2E310D48403E301699E
50BB542741370B3C342C005EB85B3EF2E1DDAA2510837ABA7A29AB18FAB25B86
F15244E8940C2F9BE4BDDA2E4322C0528513D668E6478E9BE3326266B2D53D8C
44BF4406642BE1AFBE7AA05D928A193AC2863B41DB67BDBF4EB722FF4A651863
D0505F551F95DDE3615B9F1E6134534A315CF6304E2DD15317738826E365EA2E
5831E662E3F99243D20B70959B12A70DC985FF76BB327CF2F2FE3BBCA3201A5A
4CCA5FDFE743D4CF1A918C5F58DF1D364E29610F516493F7D4977CB26F9A83AF
7B4C5FF11863868BF0E582CF0251A2C2166A0E4EE6272EC1F39BB7E05C36CD0D
E61B3AE3668AA3D7DA417C906CBA807993A9162700BC9A110DC6F51D28CF849D
07521DE30F80A6CFFBAC0CA1E1FAAFAB1922FCB9A6BA94EC16802DB8ED8C1596
0B4579F3E651C341E532592376A74B7042A9865584BFEEB4D4C3FF774887D93C
19B83AF6E957C9A4253FEAC804D0C0EC19964EFDD3D7586D95E7DFE70FBD7E67
9F03A8E2E4CFA9697B9E513973DF94CC2D37694850ECE54C80D2CE7BA941F938
AAF88CB18CFF74FC89AE9A0B32ECDFD0BF913825C5D6CE35E7D5460EF05B1A51
36CF2C1DDEB46F756776F10698EFCDEEEDA99C75ACDF7262119E30EB552B111F
81240CC0667E2ED796A8D6BC9CE98F2B71D98623F6106DD1716603D89315F346
2668BCD5C44675717F9724412C5B9610388BC481FE16664FC7B10192CE7D55A6
F16A2F32777BBD74CFF9C797041D0A982AB1C0D499907112619B132D1D7DF3C3
7E35E2ADBABCAEB14B34D2A184C9155AB8D6C978DC702A7278890312F6E32B53
6B9C9926D6DA9BA0FFB366D19D8C69701D7E8ECBEA885694AF30048AEDBD06FD
79BAEAB05CCF5B81D99CD34D142EC19F2762CD95B4BE8C22431014B54551378F
52F29CBD80BB6E5B01BEE566EFC53A6C0F546A7E2FA8A481581C49DB7D26D98C
3AE27C211C8C4FA5132D2B427B8583BBC14969D9EB2C285965F4DCF207F6BE5A
1C3C4AEB59E750573D14577705EFEFF28C43761EDC0E66A5E026E1AC6382ED76
32008080C78C427E8E051B99E95D205AD9D4E91AC08D389275D701D5A0B2E94E
7984D00F03986014CC31EBB066ABCC4F6FF2D5FA315A4A1C9B6067D2874D6CBF
F004142161A7701192F6585586FC5DDAB14D19C7C8E39FC04D479C6F4123EA81
2EBBBAC6B6F48D530BB0F7ECA49000C283DAF19CCF88634833F3A62F55D62CB3
7607DCD3E057392B1202E416B635D3F474AD6CD39E49D7478C767DD9B71530C5
F01BE2D2611CF9644C28F3F7822F453139A615402A144402BC8CAD70441769D9
8F90D04DABD55602A2234943DC1C617EF756440F870DA4B07B36A43967BBF036
C87602A1A166AB1BB4A7E6344A0D40A712322CF101D2820C4B916D2585181D54
F1F36A85E2D3ADD60AA8F5B2BE8C21D7344CD8E8A6C73664ABF25B5416331DA3
205E8F38383299755769C94370B4E3C380A3642A91F1947AAB4A780D034BC00B
16D7C4D77CA30E73FC7B4221C1A677B413EC24C29DA1F2D33041FFA0E1FE4020
29FE2439769D67DEBDC8AD8C861E90E5322B3F0767AE6499663C88B604B2A8F9
47700A630BFD6A51E28A938379CAB93ABE05747491570EDB80902B818F38B4C6
459401AE3114CC83B1B24FE74C351EABBC368E540F255A281B2437BBC4295CCD
AA8DE64137227F139DC0BEE360FC7E9B9BF26D89F808B05C2E483B9171450E4E
645763A82ACEE79613DD66EA9EA94D956AF7ADAF6F34C805C8BDDBDDC8BAD0B8
7F3BA50D36D20926718FD3700B7182B0C3798DA5A68D0EA4AF872890576B1DE9
85ADCF8DA53F157BD60FAD7449153823E9F7778158B67FD31F5B6E8DC4F671A6
8F8B02EF2EF44976FF68DF0865B4180F54B8675D83F5D851D392340AED402E9D
FC0045FC47FFF7C880B1EA553450E58790B89A577AC441F71ED017C4B1CA9CE4
7A0675DBF2E804072C010757B047D81CDE80D92842300CBA463409FA76943A91
2816EA4DA67931E27059BC1063DB3004BFD229E6A1E22554AF326DDED91DFFDD
939E001AAF11F61EE5D6A4303ED46CEB34782DA67397EDB859A9F9A257A366CF
288A27F32BBBB40E175B1C9D974E44EF83A517C3C5752B9A508639FC3EAB9A66
EC8D2C8858E58DD524D173A2E79B98DB9E6748C784C9F2B15590E4E80363ED65
2CEA14D0CD2FAF8CD0C0D5FCBE09D4EAE4DE0A8330DE53C1C7ECE32FE269C7DD
84CBDFBAC186DE2E1CF84844B43966FB2E3AB8CE7FECFE016537A52FD1A6086D
FCD366465ABA0EF103567F98FBA5BAB5CCB5C196731EF7E3B7D4C0C86D9C66ED
01B85534A1E39BD5C20DE216B334256C526B94316E56A74DE14A0E8AAD7163D6
D9B782384C61138EC1501C46CB5B5152192E8D337A77D60A3BC6B0F33E99DA89
99D504B49BD30B1F537AB109F6DC000AC14DA4B6470AF1DF4F4EBE911581EA3B
E89E4CDAA34E087AC99A1C4348C3109D0671951505993DFCEFAA29DBD045BA5C
1868021E69F6DCF2B27FF31EA794BC8B59C36A663FC828D5FB2C9832772C15EB
82E86734FF9C269DC4DE52743A4AF692E07EC8648BBAF792ADBC2583F7991E91
42D27FCE2CC85BB5DAE1FC5751649009B86F0806D385A7D1E170C47AE4059FE8
5CABBB066949A02C4E3601F85780C59378BAE88F6E3EAF3E903BAB38790E872C
8A80F3D37D34429519EACABAAEE6384883F21D51527A22F9C168E7DF3B43FCB4
C9DF1736074582183309AE00F7ECAB34218E6B25E840A594C538AA8052854792
C3A985AD57350AE15AB7B12CD019B4AF7582590C7498E5BACA91156CD7903C1C
42E115E9C5203037C808BD295190FB22E382137EA26FEB07208D32DADF413920
53084F113479AD8253C8460D4159149C1EE0F65C84B23A94F219AC14BC1D6A10
EAC63EA4B4E55BAA92BE152FE8233BB992DFB53B06017CA640FF1CA71025C1F5
3713226D0A5FF3160746BD0A86AACFEC7C2D4CCFF39FAC7EB56BE27F9F08271B
B84AC9AAC072FF6D5AFDC5A833E61CE4EDB9BEC18B7A3D9546AE17060A9DA3A3
FC071E413DDEC851DA08562622002C3DDF0D5BB0D1F5A4FBAE0C602130439FCA
7A2A2959DACA9F8C687C126BBE696AA6732DBA9AEDFDFE3CD1E8FE988132C263
A316141ED0F25A4455CE5AB9473137EE9A79EC3F588762C66D9860B6D4FA7E3B
525A89C672AA53D222D84CBC9EB9BC1C8ED0033F5C2418093D59FA7958AC9BB9
3E2BE97037023BD77C5AC2A8AFBD5F5C8329D85586F1E197DDFBD86C7CF03E17
2E26C713F3AD40436E36EF8FDB117E2424C4F54007DEC332AC167E28D7A539E9
25C196D35280933446739CF0DAAA36061D5B202187CC67C268BA8DB757B85BB9
E137D94D7E59E418EFD0A463B616725FB7745CBB094CB3607C6ECA114DD7A599
62C4DDC5ACE95A878698528C4C0E32E2C73CB8FB5AF4E8F39CF89CA0FD60C2A9
9B2938D436C3B46D661C8267D8D4E2DFC75C0F145FBEBB48466ADB7CE8343639
20C2EFD2FE0CA35B333D281640515BF9C595EFEC75E11F0ACD8AE0F36B68AA8C
5FD2E0E871DBD2628AEC086F95C024E5EE4ADF486DA47F265FF8FC9FF028AAB2
FADBE542A871CE8580556C16A49C4B4E8851D93331FF3006ED60AA2577DBBD57
648E398F5A052751A5B22688404C3758EB727B03BFCFC98DC527B4A2A27FC4CF
05A5F078C886B012534B078982F2C051BFBC92187B119420B8F9DD71FA224A79
14720E92784C5E7013ECA0861430BE51BE9485C2BD7D5FC13534168DDBA44083
519C586F6BCA6545386030276B14D1BC62CA55244B6AD971A023FA443751D631
6C41F695807F3BC8A261F1C47C4E740A606F9F6DD417ECFAAC501BCF19DEC8F7
555EED3BB2A04E4A1D4CFBC4FEEF7FD5281A016ADC60AC66694EDC070A192352
F0FBC15FEEAFBDA650DE094645F2CDD7998FBCF51E46A80BB2611AD6460F7324
3DB763DEDBF476F351600130269B5612818E9EE4260D12E906B1955501847A17
DB8548B186F9D8B00FBBC7B9C635BB8D08FE653D05C619C1CCB8536AFC7CFA67
0159D28823702BD7D8E2920EE9DA68ABE0CCCC8EC2079FE9F74D53DAB010AA03
5CF0652D0CDAE87B801C0C536C101AA0D77A3B65651CDF72E7E24FA7D0B6A8BF
CA634397723C6055214595D7474373AC13C7810019D7F51E31FAF51876EDEE27
3BA577AA9AA657AFD41493314AEED231CCAF4E716D23439B6E2B631F3F3423CC
D6E5F8970B06494980A4D6F091554AE7EE59B3C22EBAFEF68823F286006363C3
CD99BD353A630E4F24674A869EBD05D51CE34806194BE2BE894053812655D556
84762C17AE68FA2C663C01768720331C13E10AD8F1A5406919E95659EA531286
69EA2DFEE0BBE4FC6D3FBD33F6A98A4F2141B56A2D110EE04B8AACE1D8326E1A
9D0DB17A1D921E3306AB2B2A0EAE2EF71D7EE7B273734A6F74249E9F5EB74A78
F16A86F513FB24E51823B3FE56025B599C6EA684D84B2BC485F05037B2C748C6
60852473E6CBF0E9B35CD2D8CBD06AA1ECBE41F9884F0505474D52C652824387
52AE60661430AD856828104ED9D5D5D63318AE6DF400A0877B9D2087EB18B235
614391DC6B2E49D4CF2A8FCB3DED17B50F04732BFC63443FA54136971D4AE43E
AD724E58A00629F0DDE8363E355DCAB54BC68E35E2B7F6D7D5D833ACBAECDA4B
B19A2F385DD4328B532D0DB3632424A95A06D2C9276C501431511492BC56CAC7
08C675AA7545CDC0F2932AF6093516551E7BDF1BFB37805F90200DF9C2267674
DB745FDEBCB73223C1C5F60E093738C7502C46CDFB5A8DD1477A7C20AB85DA2D
2BE059F6E493B02B567C8581DBABC1982A436909FF946C58AF176A508E104AB2
52755D481AAD4288F86D78630179A9241D09C2594308E3F5B07B46D609C5DAC0
A4EDB9A7923F6DFCBCD268C37EEA6135222FC82FB0A998BFE32B0458B82EF826
FA9B9CC77DFE3F970B0113991E13BFF3932678A0F4DD61AF478E169EE0F87078
734AA4C71AE3A9C7FC15107D9C5D4628F07C1330890D4B52E4D0348A61C61540
88A0525CE1E3CE9697734840F8BD0B8A1858FF94F4BB07C46BCAD3D07040A20A
F444E28D219B2ACA0EEA9A87084AE7BEE425FAD73F43D693B07ED0D0FEEB3C94
16812B92A7AFD0E90582FD143260DEC9A8543A0957BAA1E7177D27222F2CB767
E7DA0BE5B7FDE1F15A534CACC86BE8FC46C4C8A69839A70467753AAC9BBA573A
9FE12719E1067447295BDFDAFC790C694EE9379E448909D7F40E5B7B64DEF5EE
37280F2A20AC783A00262C18B4F11C12D72DF610444C198059839D241326A2F1
B98F2955B4132A0E0D76AE153A02736E402D5906CA654A9B7812037FC9EE3ECD
84F80F0BDDAC3F4A857332E2A02DE729DF56CCC594B5AF193DDCA689F08AE72D
99CDD9306DEA21534DE1FCA4F6C6BE4FDBCB6145FCBD4EF7C6D3B776E5E469A0
E1E8AE585D92927CF8FBFB3B92C168956552FB1B8D523A186AC288E8FD9A2DE1
C6655C485FAFFEC9C9EE29785E5BDD4C60A93B2CA5CC32FB61B1216EDC702162
10DC13CABB008B17C03E16C20EC7B51AD1CAB9302EEC7319D7C200C601D955C3
57DF6A11128421599781B2B2F67535569B3071EDA01518DF82481CAD443DBD3F
CA940C155B0BAF00D0B10CC96B9F4CBF0164A99038D69D48D7197B1385934BD2
86EB8B4F49CA9DC211F852359C1B47ACF2EB9A236C8D940488D07C9A4C15F7FF
573AF612FAAD5888C210A3AE0904A653C87CBAEAD5143EB5BA98AD74480364C5
8FF9037842D90823F9186B61D9404307E752939E889461D58738681CFC762CB0
4A288F5E69A88209AA0F82E72A62C55BA7E417F1A70AB755FE7C9435BC24882B
059B5ED59DA9D42CEDBEC67A111FF478C341DE6A3E78F8B50C45BAD0BA3C0780
B36E218B31DB58C26F1F0CBB4E232A76B00EBC1AA6734423BD4E84C696872583
AA05AA5387CCE097A2435946440F9F29FE71635D62D4C3AF4C1DDBFD88BA7839
0A21C2DB198C7D06A54BFE712AF239E5933E66CFA769DC00A59AEDB58A218DF7
8FB7CD40C100F06E6A2CD108605084EDAEDDA87C7334E021F71C3C4A30BDC852
B36621022A4D0B08770E45BED9F985401E615F23BA8A8D9CA6193084C6ED7FAA
61B8E2B18363B71BB7C0C263801C2F1EFDB132464F2BC240E5096E1E22C8D822
92BBA5A9B2582FB0EABC3E1B5AB08B9FEAEC401BB4924E807758D541D1296F44
90233F77D6FE9AEEB0E45C4D061FC47B1D4CC64106C7476C88CBBC999481B683
F2D77676C00E19ED32185030195AE2B431CA708225B9255F9F771F4DF75FF333
9974B377BB84AD85C2EF2C738A9D8AD306CD872EADAA457FEB8EEB77B3258FEC
663987E0849B117CB805E1EF906BAF06D50F263CD393C3F9D92F93492CC36918
17C302E4AC873EE6FC75E90D9F116F525B34F01F85081F45F073A66A6F13ABA1
90E776A18103CBF07F3C84ED6EF3488E95653FEA0B132DA485CF64D939E89E98
234129A67E839EFC70FF933566B705A530512419848FC6F3CFA44B7F56D6351E
3E2DEDC9B18C7002F76150CA2779FC06F1FF190E22CED4A36680C50ADCA91FA2
96244E1E9DD104D144B6A4B9068AA949181D990347FA02302C38E37E814D5B38
F3FD7FF43E137C430062C24C39E050FB9006091203A8BA6DFFBE2E4FA701A0F5
F74992AF1155E928C8C995632091246BBB829094A388AD391B56E39890F831FA
7DD733A5B06989C48169361BAAA73A888F2C7A45318D6DCC84204B3A400AFC2E
D9C734182D438AAF95D99615BF5540C83C4D71240B516EA62A72854A0B8A6ADE
15EBBFD5CD2BA9FAB7E75099F8BDF92B5E1A22FE803AFB2171FE5A3E58B2FB78
175775DFBA0C88D7C77FB1097C6B36D6495916FD69B176E7FE2424F8009C0E46
736F0649DCA8FC4CC21915C985750F0DC9A0223C94FDD48E64EDFEFF9F89C9F1
BC81EB2BAF9D9A252887225A3B463786F72DF1BBC1E9425350FBB6F82E3187C9
74362B1DCD3D751C073980B640B8C38AAD4F11010B6E957EFE5D9857D2AE11DA
E8A9245D90464190DB17190A87261F6181DAC9945D2084B0EE1EDA5D4778A2F3
14845328EB824646C589768CF0F6E7ECBC4D8D8D1151137A4BED2DBFF04366AF
B42A178A1E5DB96501F7D943B65EF164011EE91C9E82311863DA8BFD876D29BB
50515D64B93986B7BE71C4723FF5BEB50E766CA5A003597AE52061432329AC4F
72021C91548965A7864EB63BB79621FCB28035279D990D66F02D6014A9D44516
49B6778DB2316E7AF118BE2D6CEA22EDD4F70A404EF25E2D34FD1691C4AA3838
34C7BAA08A237BC3DBD6CE3D3DD3C29AF6D1374E87CF2C52A92D5D522743C492
29E80FB98E692F6CA88C806DDA31F02F85D786FC32017D7DEB8854FDFCAF8936
5C4A2A9D63E9ADCFF29D53FC42920C631A4AF61DD44345E6BE3FEA8AF4AD1695
224F27EB395F2D84DF5E2FB30EAF9DC2A229C1C481A08E5CC43D063432C11EEF
9DAAF90F3E025BBC86245667B29EC11B8F3027398A9FAEC018E463CC93AAB7AC
8EFD8E14A34F50A626A6EC5511E670351C40356CE9904A23353BDB0ED9F3BF4F
D31905F33283C9C740EF3FB52922784647364BFCAB06D58C252C028E75F84C6E
E21374CA267D25115DD6C3B92F798BBA7C3A24F95BD0EFFDCD0F315E4E3F0719
F1AEC26C6D1D6C33262158513055923478C870EB91E7625DC0BB689DD1581229
83D138423581C7B9D535F1AA7B99F495DA99C7F370241D1428B43026ED097216
A4EF97D32DE2D0136C932260914575A7F49C1356D7A34EA3D5BB0F5209C866F3
71305C6A088282942CF9FB1FDF40A5F8557802B1FC6269DD86B85DCC88C6295C
0EE99B6AC6C78C7DCAB3F091A7A95347F2DB16D3390FBDEFE059EC4B154FAC3E
53DF05B2B0377BAC6FD3CC08A5CC355D4484B4D065CD23BE33E71CDB3774D5B6
7D6822FA84BD74EBB4A52FBADADBEAC337A342509808C3F72C6DFA5A6E0E6EAC
F1FC494F2CC14B12552E7508AA826E80E2600C22298EDC5E57EFEA9F77EF2208
176BCFC6D79D4ABC4BC2CAF2DA3A036BF2962D405F1F3449B691435F90058DA9
C6D3E3C9A92ACB9956352711A741BDCCCB7EC1DF559617C99DD11820D375EB93
35D7CB6267EF13E1CFCF2907E464BB5DD9D9D20562309C88647C8014DA3A1292
5D5D973F5E9819BBE94251C299A33FDDC157416284F9C6DC805B38C7E970517B
765DFB7DDF14438AADE6FD7EBC284CCDD8D238BF76438F3800CC652E2F650938
A19AE21F216AEF57FCB84F3F32991BAB7319B1D7DA6F2807D202ED0F6C0ABBA1
89E15445FF492AC25D26E60996839904EAB292E67DE868B84813FAFAC89720BE
0C02B7F389B9AACF26793AA1DCD37D6667A0C457DC5409A17F7C09B030518B4B
6932C3C75A4B9293860D65140AE54FE0C8B0FD9FAF2C60D10D3A97D1FC1E0119
4C8C0982E82F49BD637E26043C594091AEE76C564516BED74488EFAAE78C9C9A
2E0BEAB0508E826BFAEE641ABE1CDD84D1E7FCBD647914C7342655D178DFEC7F
E0BA18698FA7418EF3E91981654154985974B6023E71C2F48C598DD223FA0D9F
2BEBCCF1614DC962D33A49A631103D061C10ECE1BA6E9BA2551CD144EE879CEE
A4EF907BFABCEC2E441B9C74D1ABC84C3ADCF6C3623C61E8FEC40931592032E1
5F933ADB654843B3F31079113E0BA3A453AD1AD69524B140920B73E76CA7CDBF
056A497B17D31A9343E483712AAEC2F0EB03E3E8623C3F046ABD2F6E793C31EB
F5C89965E329D5452E0F2F6E04065EDC0CDBC6826105C83A21B927245A00D292
140466B4076AAA04763FB71D6C28247BE7CE7E7206C3C78D28289EF48A40723E
39B7EC79F2D3822C6F45A6AACA71A721815A222BE811B4B8A038D3058F19119A
3DC0A20B983AB8CFE56A3AA42584181D5AD455C5F94B9ABC3D05DA08FD39E709
5D79E0B4E8014F971E880685FBA3617F16237D68C581D65A0C4548B62C3C7C94
EAE9CA5BF9C685A04F29EEE3586A7D549E4C5F552D6763495945F278070C7497
C71CB17BD5AB135456A141815A3C0AB1A8EFFFB07A89A3843EA44AB71C5FDB43
79989D3F6D84C530D25FB79B9B0144C3014A4F73CF066C2B9C5D7C54AB1A9069
FD30B9212F55E9A6AFA267DA024CF1AB339220FFBB6D49EF7EEBE8C685F5C03B
606B3766ABD2050C0AF727F2F9744FA20E213CB5CF71902E84AE49AFD8B8516B
53D686F681EEF5773F6B05CFEC136C1D8670F52D557283B6E94A9B2C541B2EA1
4B0C75E8E5D8790012EEEF0A0E43D1331FE27588D0831394B41627B59F74E277
FA1F23F3A9C636AA9803439103019B6F141E5DABBCC8B6FE018315CAA4B69547
C3292BA94C3E36E17E33467064A177C8225DF0BCAB4FA69BB8744C8D6A73B814
D9DB11F810C2013B2348588B524819D69BCA3579102E8C20524E45215E39591A
DC66618A84FC708E9D9DB333DD67F23976400ACBF4BE6EC61785F7D19B2787E1
A8FF3E8AD35CF856DCBF0FF9AF56B913D069E412674347F5269F25522F64B545
562B5EB99674569210EB8C4212CE226A9996EFD2A5B2EB434928971C49504538
7E67565E07117F89304A5FA52955A445800816228BB1352F2D06D85AD774EE36
172536FA4E7F5FDBE5CC02326EAB86C3457E2F9287D9904A62B77CCFFBA592AF
CD4F003B06D09B8B9A08B9D0EC4BC5458C6A90F203A6269D7BB213724279BD4C
1412F5BA8990633918F522639E64128C6702F29232EEE042EE13336F1936BBFE
0AC805289B24C0E53077A8025E7ED8E52C930E2E802CFEB73845651A72D16145
25C3E133E4E1AC2D597017836DEBCA4D95A393CA61850C560080A4AE3750539D
11D7D9BB39FDA705AD5812CD6D836AABD89D461F44F96A1C9F166E156FE354C9
FA6BA49EA0881583D592358BD2E97DC820D7C915D853D0FCF19CFBB246A971A0
935816DF87AC67BB6C9E843A73FD2C4FCCF3752DE30FA18432D693715C97649A
4FB53A6BCAB15C92192133727749DE2B549393E580810D9774E6EE5C59D6F27E
1DEE7C7E06D03EC7916C7E9EFF02E685CF68E2D204D7B30DFAF717211AC59C8E
E5177C676AFFF49506F54C9EA5449DEAF23D91E65AFE6D327E3DFC0F71EBC6A9
0487111CE11C75B701BCFE365987A184F1ECDAC794EE3EE375D4126C8BBD54BC
E836DFBAC81D9846FA6779E148DE5AAE118B31EC0EDB71B05D9F4151095885CF
97272A6C7E6AF6F670D3654DE34B0B0EFF8802243901F1E0386EF59D9B12F44E
4113E500453BF785898CDE9DB441287F49F119FEC839F4D48736977F5B21F696
1C8A9ACF42084673B816F8896C4BB18C575AADC6F588676339818289C009B0CB
1E0C1CAB3C9C29062266F3163CC283F2D87543614C2A35DE6926053D8C843998
C3C0A0E56DCC537F7876812EFB9F870174F4D1BFD11019237C11E486C3C3BE9C
DD4856627B9A8F49219B38AAAE5471FD6A611769F2806B17F02B9EFEE56BEA49
9A0FFA29E6177AD4E8C39A7FFF96FBABBC4E14503AA8C04C132889458936B9BF
B9A30AAC370CC6CBE62CD6B8C8198B2EB21C58D540E50D852D984070927D9210
5A161B207863A29CB72FAC2A48E91ECADAD234DEEF2F6E59627D3286D85003B9
DA9E2DC2EFF49CB9D11474773B6175E00D6236F113677A591DA6992A60910A58
ACC1FF84087D95BE7A2FC2AA446A89DCD272268664FD48D5E2DC2158BC1898BB
A676CC279907E39B68A9BB77D9AE8014B6C788A2D7B2A1A296192320EFA677DA
C5E26365E17118586C1EDA5B7B5D2BDB0B8CC13A5DADAD8181CEE905D90B7FA9
6C6D11C0D17AA22A0E667B2B04912A2C959F0634509E5343E7A7884EE4EA359F
A04AB7F5B4A60F2C8416C46D9C3E31DDCA915367379102F90AB2C21A8AD912AC
A950218A3AAEA34715F7E08561A202392A840C03215E3584F833AE50B340074B
199D6872E53C605C789CF1FFA02EE55EA53331BC00236444D67C8A2260AC9536
5592F91C9D62F0376D1D8478800081DB2A08CA9C43DCB3478D638705326044A5
CAAE6F3D08A2637AF6631769F34BA682B9E677C4ABDB326584926810D82F6549
F32B384B76574A50C3A16148A23BA5010FDF180CB13A3618685C0174E5FE7E67
DD361383F512D369662017CD1CED232CFEE3E939AFFC53BC02659441147540B0
79E648600C697185B779A62E69A5C8E93354012CD900277ABDBA244F8381BEAE
775EB1C63178081E30EF153C018325389899787EA73E4E8EC323DC0D3D1D1005
C5D21590A2A0877E06AF39419A18C9B4AB6A7EA462973B6DBA8B632D158A299E
13333E2DC6156CFB400D114261C76977B34BF8C6001C0FF592DB667E0FFEC390
E3E5D0D6EBD1D429F45F7ECDCD8AF614FF849D47EE402BBC71236435D1CC6FA9
C2713A8255325F9C3420A724B2268F9ECC7BE01927BD85A77BD9D5B95FD18E97
4B39A53B5DCDCFD9FB21A2F8D90C46A935E5D798A70D15F48C2F617CE0AD7A40
07088A67BA580DD453306672481FC77B5C6D88B6F34F7E171EC49FF371A7B95B
61D42E3C4C8EF815C9D4DAF5DAC217A0BF31AD62B669A1F524EBF1DF052A3106
D16A7B81285CF2A5F58B7FDD1F16385BA08B8D4512E6FB3A3A5F89E0E382CFE9
64C70179C13A65E1D6872B19222D4F36A01DFAC57E35F30F533077FDFA6DB83C
BE3A62479A623F00E21C72DC6C55F39DB8FDCF8ADEAFBEFD991636E4CB51A1FC
020745872A3B3DD2A7776AE1B1FD79E67BB9A2FD9A6C69D52D59176ADAACE3B9
8F84DC45408AB110F7137AD3AA966C34ECB14E8CBAEF558A13463A2D50406173
D8D3BCEAEC9258D51933EE0E8C8D9AC87926FEC30CE2BA0C6CCCA12416589E1D
C2D2F3DBF96773D2F86DAF0F4DC6F7B107177052847C20997D959D897DD49076
8C81C0159A036BFC689B98F8D7F2B39F68055B6FBE2163015F9D28CC5B4A695E
54198E65D986976D4AD76B4D9B31EFC59777005D7D3313233F371EB2CF9C103C
E971961454C5BA68EC81FDB4F9D9095FE29374D1DF472DA46570BECD2F133052
9B3EE149554EB95268A1A07E6E7BCD1EE19DB9E34E141D469A35FD6BE1B64744
EE3795FF7AFFDC30B931A84A485C62D0EBF325518CC320CE514A66489CBD2A92
F35D99459858A5144EA864B9815CC30448E2112ECA93953BACAF2070B64D52B3
70627F58B3C9558DD171FE630F68E27763F8774D53CC63B57F7C9BD829181B8B
2289CF2A52934FB7F6371A7598CDA9F963E37B53CBDECE799CF79DF0DD2B3419
83EAAB959C7BDB869F97F4CBA945AC6C96E81E1315943ED94A37DAF852FD4558
A5253269AC1EC1EB0E1BF409D63AAC69C9624788EF9F8447986B34A969B80EDC
94665F1F3D9EACCC45B962A67731C76AC98678B54E6E3A1039B5B16848AE6001
5545027C5D6643ED9E898E52F2294CECC9151413AE8B600E9FC07EAB89A3AD38
B428A2F6BA940E6FF6E7FEB0C0477DA65B79AEACAF019F736B0BE0CC97FB31B2
901C8C2DA92BEE9F27728FE5F4CF0009238047F65CD42FE47F91FBB7C0F560C3
477C6632BEFE3CC40D6CE631B983024EE9541B60CD7F8B26A5202BEAC30B3633
4A7A85C171B9AF0C72F19FFA5F75BD9991751AE69149586CD571A9F67C1D333C
C1FE92B111DC389E06E9AD2EC44DC5F6341FBE24F93BD82EB117B09B8C394A4E
781F8BC1346D3FF51D2DC26313FA98A2A16197A05829252333F0D42945C05BF1
0DBF065FFBBF85A9585DC40C922C4EDC9C3F28699C51A9C71A01278AACE7335F
C785CB8982803358F62310D6D77002897C701521F2EDF42FF7D1A17B7CB1F613
DBD74DE4AB848D5C8A528C92C8225AD84B4AE6DB6F1FBF31ABF448C9261B75BF
1EB61260DEF86A64067C5C9D176926F360586A5C73D0A07A6714F8EE8F8A722B
28E962270CE7928117BE8FB03DF43F03953500CE90D519E49E2B5D3868DA854C
CADA0D44BE8B17691B2E3F1A80CD6672B6B0842C2A4968ADC06189636CA42618
09AACE742D9DF10DD24AB48FB0DBF787582709775477B23AB62F13004BC7009F
6F9D2536683DF32F752A1A312D0D841F4F29753F02D66857FADAAD7CC74F9600
5B3BB297C9EA3667D6FBD3BBDBAFA5D3BC73C2DE8F59D40D2C092EA4D0936C03
086AE7F388763344D124EEDFB2C6D63807CBB8502CC328954743178754FA1EE0
13FDCCCD85D8728CE98B15C2992A6DF72558C240404DBD9689044B71F710D0D5
A3B77A6480E971912CA8FAC1EC1757543978CCBCFED68B20B742E45B77ED5249
5356ACC06F887606896F0BB2CA0811B378583E77C14E3D1DF8DE578DEF38BF79
25D1FC2CECDD2B8488CB0B660C6C18E482FA34FF6C8BE5790068FFF31F92595F
E56D439417455C5DF0A84FD71D9D673AA58E7371A623BD64742F444AACED9DDC
8C8C6E882D97673A70BC845767366CDE0D37A82F054621136570B4C3191D8A4E
83102B81DC22CDD8965A3CE7526DA89722A7ADF729F45DEE8F3E99966BA0D5AB
C0690DC44E8A3EDCADDF8FCD6E289C19A7056DA716700BE5441B0F13569A540B
FD5B314A919A5FED3AD972227150AA5156B5D49E23EC0368E3F06BE8A2F5BCB0
0635370983403C373E5CDD5962599AE3BA0D086EE6BE1683333C0D99E382F694
D6D04687B8DA919C710CDA923D958262BB41BB9A48ED77815D5915DC59C8FD53
074D94B428DC28D235BFDFE721887DFFA68B4A2CB7C7C29E8457D19234A2CF59
57C67CE85EF0E4C3180730747CA66869681F861EC2A1C431478AA1E30B768E06
14BB6D239233B549870A7DBF605E12E31208F9C7E9B37B613ED70E3B8BE0ECEE
39C54556A4D75D6F5145C5DD564688B2362A3AD1F83A14BA94D46350DC9C2286
F9A34BF0243B84ABBD62A8F3154F6D56C82622C4B85FDC0222C2EFD2FE0CA35B
333D281640515BF9C595EFEC75E06C89AAD65A58BB3CF494BC17A9C644FCC9C7
3820477C03F31DB16490CB6A70FFB9477393E78CC5659B3C74C7381B8B380A42
D3AB886A9197C0079E12D9A79FE6FD1B02B3CB6494575BE7C27F44B99EBB6713
BB8306E5B5A091DA9A1C51601CAC8F4EB2F16F7B13A4266A03223FFC68B917E6
1CC7FDDE2ED70841DDA35A2AC33483B7E587345992A509C4065948368C960D8F
12E0CC61CD555502578C28567875926ADA5E203CB76289F7A49BF2AE960CFC1C
C6271EB7B2024A96A906EDDA69B74D0767754DEA6F41B19956444E02C37F08CB
ED1C263140B0062DC0C4F50F4755B4CB54F6609C5C948BA3817DE8E54F71FAC5
84426F531F4A3F9C4B3703A6967B964DCCF25D2190505A0360352CC62DF4E895
95773C49E0F8EE1DA6B4E6F21298B6A6D22A71F09B507C136AE676E52680371D
036D1801406A3A5009F8AB79B50E738072DF419022F6B4D73113B279E3F0FE39
51E60CB61B83F3BB039536426F32084A77C28D498D98BD505606506DCE53C9BC
4B84697FBAEEBBD19B7B8A4FC7BB5D126CB3C82C11A247582DF4EF1E02A8C0BB
AEA96C1A1EB92A66F2BD158F237F18CA8B38406C86E16F35CC14A9115A0E119D
10A4D9BE5791D947277B4DE6D4C2C8A25424EDA3D7015437BC1715E4609702C2
DFEB5A9335A6FACF64C3F48F1EA6472B994806D02F28988112405F80F2BF11A9
DEEBE8D06A555B642D686CB0F0DD3CA419BC2D34E3E15E5815B40E952E098614
C22BD305C4EB3CAB0DF84C0B6E60DE1769195D0BA38478C31C3633F06D93AD4C
8341B9961072C03A3BC8CA3555B6A5090030C74C57D527E933AA087D2DFF37B2
69FAFDFD3267831E2244F24CC12B83A330522B655A1070B50C5FCCB8A15F65EE
FC983E4FE371434CEC3E70452EC1013C3F31D783711AE45C4C6CEDE39C2AAB5D
BC6B4D224FC0BD03B4E41501101AF13B82A555D91A183AB1941874DB40E2FFD1
BB5D562DE020ED212349235A1BAD294B7549B0D02EB6AF6C3106AED7C71E352E
060F0A6C3635FA8B1CD3BEADB4B7BE007E12DBE00E96A0B17125B8324EC8C93B
7A9900A0BE176BE30B16AC9176008377117E712D0EAE7E591BD4E62977E17551
81878EB0A8A9A017D1522E930BAC7FB5E7DB828967F038098B5AD99E88299D4B
292FB84E91D96A1F04E8CFE0D379BD679666AB77E955FAAA7CB26FA0A1D6520D
2BA4A87A323ACA604CAF8A6631E7D3B32E5B60E7795A4E3B234FDBED0A353302
8129F4A085AD9DD05C3A4D0001737F96909FA62953C762F8D785BCC0251139BD
313337651ADDE2A3B621FAC8922F6C5E33C85FF319938092B7420CCD1CB87826
996C0089C6D9ECDC5D55C5B232FF842C0F37CCD87F4959A84CC6FE8704E50E0E
F6EFD917EE2819215A0BA0CDEDA77697241C9027F6B31EB9E26B3BD94A310913
E889B20F4FE92AEC416582D179A50E8A3BC69A3764B2C6ACC1D33D1C57855BBE
F5F5B1D5B92CD6BE7B6F60AFD2657A1913E3C0A21FC6671370FBFD0B89F3B76B
92097A94B68FD5A2BF17CA27BDA165F556E73EEE9CB58EE31BA9874D37C08B03
F4BE5FF83C0B51FC5B67D935FC2DB044CD88A918EA084B0933C78A9F010CD211
B92A65D5E85622B48BEC75740F341D55CFC940B88FA9C09F411132EC6D54CABB
0A05600E014F5544E46BE9C7E0B1997E6DDFE02C0150A4C9E54FAC04F3145E84
D01E1EC2C6FC29D60D85375C54675D6FE1C1EE5A64B3ED6EC586613C178C6685
58824A62AE9B49ACFC71131694C405F36C8F710B467AB37428121029330A33E3
61C619BD62942EB727CA1870F9437DDC0CC27DFED27E3DADCEA182D1C573C388
3AF97D367B108D7032E309C9D420911373602D71A58857864D6CE485F6EFE0A6
7D566EE4E202722ED52BF7181F5170D736E0536CB1D4ECB4EBAE515878A3B5A6
4FE78155E04778937935AD043077C85FEA56028D2A0BFF126C42712973031738
FB71EA1DF7D840984B3428DDD00633A618C80DBDE520B8E3F22CE2C0394DDBA2
CC5F97FCD349F8418B6A01E5791944B2968689F184D5D5F709119E286225A200
62A790971FAD3898A01899C1C95503B49F965421231A9EE37551162DDCB675F7
F2D590D770B7E62825C02328E3A71272B84513772C951EB5CE2BBE6EE5FA9079
FAA3E23615034D2B31841F621DB7AC11B51FFC94E7A4C6AC77CD3614C1E14B46
E7CBDCCD90E106009AAF932996793344929D61DEDA916AD3733FCE1C5F13807D
D71F5AA5149F8CA3540529B471AD5D97648AFD37A2CBB8CD357863B54B56135D
891EDF7DDF4D6FF38C1F6ECCDB73262B019B0E714C76571C12AF0A6796EB5ACF
D9AD1FE946CDFA3844078AEB61E010A7298BAF0F4D6E3B6C4DC8C10EF53FE1D7
487E2406AD300F6C465D4A4B94CEBF0A3CBC0738B434E3074FA2D8A8D37A2A7D
CA314957AF6A9593F4891CF9FB4B3317598B89B59E01B5B1351A73900505606B
895C8F3034F885A299EAF758FAE0CE78634280E83E8D09C4EE99ECBF8E6C6001
91700FF9ED17BCEF27BF867F5DC27B993A239A413A725EEFE06E4D40B8F2EA86
465BA87D682E28963C34E0AF3E7BDFD5AD9D1E21A70EBD7B2ABDB4B27B64CB3D
441083DAD4C9BB4219314525F5345D9017FAB6F8155666B9EBF3FA4421EFC2D1
3940C9D4FB8E41C9FB07D562C00034C40E6B34CBFABA15F436BAD4C6A85B3CE3
58A5E0BE4DB88C7D7A43F3EC9AD09B1CFFC74F798B2719D9BAF6807337B8BBE3
F3002874511B280F458C9A4495D2062DA1D8F6684D096AA1475909CC8B295639
029DC386682938DB4B7F02329FE191036DFF2A1E5EBEE243A6BF0306ED3BE4CB
42A5186F15193CADD7E52B2F434F9F34798D2D3297C9CEDC20F96139AC23A56F
60017B4E5A7B06FFC76B06BF752C05DCEDD192B25B570E31503C9FF90E5EFF0E
B6AD908588E5D5F59350FBF1320A6F9536B4BF37826F7F2E423410C34A1D841E
92DB7DC60ED38306755FF45027146DE12236D22542CE3EB3B9F851722AAC41B5
ABF2EAF016A7A7767F5988141C7BC7ED97D09AA8B321F5D010CD3D55D04664A9
78C1E16D2940596CD5A2A17BBC8F82D8EBA66BA1C594AD1D8017BA9EFE095875
C132BA926E34A8F8C31F7D5A4797E9C963927D1BA8B823C6B151E9A1EAFC6A0C
5CCEB91CB66B067E8BA0424CBD3B0760D3F1E53C33C5122FEF199CC2E0CEADF4
297C423C5CA83A75079194054F8C02550F916C002B02D9B025971A01FAB3FFB2
4E6AE36B4CA28A39EFA71A0DDCE149E75A28461D686F83297FAA9F5944803BA4
E509E24B79BE0F631C4878708061DFD5823CCB692092402C43865262C00410BB
B31A89AD23AC7C07CA6A19EB6A3E1BF76F90C6FFC27B544A46BFB42673334854
CEE584BC32D3AEC992B6AA0E4EF00C9E0F85EA47B3C0660116B1A5863348FB53
0D5AF5EFC32AE817C0B0A0611AB91BE61BAE65C65D30309D4BA574261E5E7579
A245B11AB2E7692B3A7FFFE8968E56D91247B1B478FE28C2CFE467F0FC0CE66A
95D471438AFB2F096588D22734B188FA7B01C24D9A6122191C51F3BBB64E37B0
BFE0595C51456E3D26B9E5A662F3E82C120DD8E29CC460BCF854DB3F1EF73F82
0B00E188F569F66DEA6D6D320CC01A4E944335F14A0F012805FAA4DE2E937E03
744732E3FDDF400617EDEC6C778353C94B54668A72FA9BDD7683E5E168CF3D50
E59205441970A3CA1120B1A818994EF4C548BA211B7199AB18CD0B6306C8EDAF
E1AF7D9449E79298C31F72DD9EDFE0A913FC4510F990EC8DA8F2D694CECB57C7
36AB22827038D5E2DCF97D2AB8EAEEF6071317CC31E126E02E9A5F7175382997
B8DD4EAA1AC0E49BA27A475EF5CB84ADCDF96ADCC2F3BD532D7F03382EF1119E
C0BFADFA49526D9AF56808447B55F75B5A31D6CD1042181BE83967D2C9933AE3
9EC90D5E81F494D89FFDEA459395AEB183B7DBBEEBDFA7E87C1858D28BE9B476
5A2812E4E86F2A0E92449021E75E9516F319106F8A9742BDC337DD0FD2F7C6C0
6B59E4626DD9470582E82C15B1E3E06966C4A23F3F49740365E82A7A29393844
0D227D0980652C3183FB057FAC50C2D721651F3A6152960C6605FB6EB8409BF9
156F453725DE890439C9BDC2F5F2334CBE510669EF485DCBAC1D41B43BB8EAC2
E6EE446E7F17182D266F978C8222761BB9993EEFF08AB132EC69E9A4A7A08C2F
5AE0174990833C226BDC347E01A0FFB1DB0040AC5876B209A2D6857D7C042B1B
058CB6EBFCB46978D4B765E893333ED8D8C2504C3862D8F6D32D04C681C42D15
D8B8DCDEF77987C808BF09AC23DDAF6D22380B10AB2CAAA53B1D3DA8ABB1B931
C8852426CCB55903B1CAEB84B8CC31428C2C68FEAF38658B3885C16BA28F192E
16FE6F8D5E177F3809B40FACF815D57DCFD3F0A6177B10EF46C228F3CF7DF0BE
0BCC9FA18A7E23A4E0A1F69FCCD3D4037F59A9EA31992D0C3EB5FAB88F79C3D3
152AE75809F5CDCCC31A4BABBDE2AC70FE50F5FDF5F66F1571346ABD5D7CBD7A
792B3DB47808945CB8AF0E7A99A9EE1F6F67A0D65DC51E6CDE56DFC57A922FC5
63AD38911E16F5AFBD2E6A8E79570D2A06AD27D90FF3CD7D5826346F8E75941C
1189A12E1A50131E90A5EED0AA43FB91DF06F288DEAB608FF43574CB0C57AD92
1A5A247FA60A79617A89A50AF49C420F8E900FFAADD9D0E43B1324D326E7CBBC
4FCDA3DA076D501A5705FD044312AA5498019581C08340EB649018BC81125190
1E41731659C69FEDB4D611F65B90969E28179AE774047799C5B210BAAAF8270E
04C6E09C31AE54D8964596F15509C0E96F32AB08B88BDA8CECB22564471AD76F
25C6AB3E90C36C75E7EAAC10562C92133FA0B51F15782D08775CC629B86C7876
37F6BFFA6986827A67A439E091699B3C214F7042C9AA0453950479B28E2642DC
9130258AF2E1756978138ED9B327A39A50E08D6C4810474C709515D6A6557ED0
9C2D32472E44D230FA17EDC57D407CB83D2501B0D2C9E86FD3DA4D811DD9BAC5
98C2DBA138DEF8C4B0ABB3B13691315213B37046D36F6935162E7BEBE05757D3
FD361873A6C06D6096D380D8D49C8005730B909724BDD52F4D4B9DC8EE910CD4
3E2720F2849E4C3C7B62E653903867AB44E25B2BCF005A05EA389DAA2721AC6E
6BFF0015EA347A30E52507DB9E1AF76C75BC88E4DB3D178CD1E4C04A6F46F645
0B0BDBA1789FBF48822B33BFC5FAD73A5F027B4996C3D519D0E8EEA22F43C572
873A347CA8EDC2BDF33AFC3F130A4A4A3521BF399E9FEFFC727E07AA69625943
D42805E2042E248A874E814B3D78F46AF4F001A38A3E1271944EAD45C84F6C45
92ED63F9A6E9FDD1292F69E2B3FF7B54673DD53BC2FDE1F1B994B94FC224B655
992EA8B589A324419C2698D9FC0D30D42FE20904498902ECE3FA1653ECB3BB3F
DC0E20B2B90D73859E9271BE468AC0E2E6DD2FEE9F11D5912B7B2850E1FC1E57
E66D4FDEDBF9258EF212E5C281463B9D81A24F8B1305C5591EEDC1B75251BFF8
576F1C9CC5C0E521380BB9A40681ED8E00E63D89CA32AE0687DC232178A07ABE
333DC829F1D03D211175AB982226616B19C51800E38168C29BE22F99A39A8209
B0E19365C6C3BBD518E58321E3A9E7FB346A9DF4B7B0F0004359C8ADA7FC13B7
8B468A05F542BD304D2D1798BABD827BC8A689C3C3507C15EB5503E25738CFEF
BCF081E46C55D9E7AA3C194B3B115DCF93D555CDC7F4D5012C1B23E483317E84
8D429D6934B16F50DAA186DD0C099E81618AF2A19313E987E77D784162529A06
FBDDC4081F7AE2525765C22A709DBEE400BDA926B2F45017B238F0218A07211A
AC722D2980E09D9AC44513FAF7FF3B6E50CEAD45ED2B538EF18430B571D1DE58
FC6F22A3C5D499DB9FE842BD6416821E8F2E2D6D8C6AACB40A53197ACFED3C70
7D582B3FF51BE76ED799102EEA38415A6D3ED6BB7749F7FBC77EB93CA83780F8
2F76D2D4DCD2BA10B854A150F434B5F581F8AF114DE1542A358E0B8F82D79533
BC45B59E9E751E23C654F39EDB821B68A0F9BE154F17EC0EBC143CD4432429D9
397BDE6EB8392202923EEEBC86222A0693A34EADCFB396FD0A4355FFF84E8B81
01FFAC7B89E578F64BB4BFB74DF4FC0A490BAD3344C8A712AB3F6E0D3B9BF171
41BDE372809F836D088899C76E5636AAD41B9DE5AEED3A66CF5CE88342AA2D16
3D24B1D35C8DE0627CA7548FBA62F36118324BDEDB4813CF919997BFF01FB5C8
1D7206C438D8A4D6F7743A0986EF000BE851291CB10E58A558D6440E61F72C32
99698F26C59174F5A031A854336C4DE2FFC6C0F0BBC5F9CBA9724B8A8CF6D526
BDEE9E8866C5568DD10AB87853A393E3665C8DAAC99B203A6F6927054199D8DE
A6E643559DA7B331009312FDF6A57A63DE0B65F16CDB8FEAE274873447F03309
ABB111E918D759ACEC35280BFDDD070B7EFEF8D61A9900C16AEFE3A6FB0891A4
49F62CA82B4B9233BC9019BDF8F0FC2483FAA552E35C6A88F1EA700F840E9C44
B395D8821E2A6B0A6548484F0D1E2E8DBBC12087570F4C2441A1ACC83EF1EA86
147D251C41674FCED310EDDA66492D50D16C660726B4A298F819F4B0EA7A8DCE
5A41816ECDDF97DC2C8DCF5C8BCCCC03EA0F2AB6C585BD959FF8D0CB69DC465F
32137D1B4A8F90B4EE64065EEF14FF9ADD9B3C874511F894311894E235525170
753C99C61BD4B5CCD5C1307637C910B9D6F617D06B177CC07FDE8064B8645D94
266EE3AE8475A72A050C0935308062EB546F4DC790EB649D2B103DA2BD48D50B
9E277FFDD25F5477D6E0259F8496FFF2FE5D5DD1C32DFC80408D750304E9F9A6
BE2300ACC1EA8D0BF2F537E32D59842E589B79E97ADC0373B4F25EA15E67C07A
4AD81B3CC862A675AD5B403EB481B4BB62B6863A4CFAE37F715EDF3EA5A33679
FA7C03C0F565C8E6BC119C8429EE319B1E09E4044F8B2E9161108F44975B7A94
588215878E6866C71C6FE5F3B7F8A3BF72DB85657F4A3558D4585AD1918E86DA
ACB8660C66DF082622BD4E3E50B189223DD7593D3674AEB6FC8C3E885D369309
4FD2953D7CD808AD1982EF675877E9DC80E48446027A7574E504F98DB9D52D84
304ED2773FB6F5A3B18DEB2BA9A1B4B8D8EDF6B4C901B8CCF101CFA14CDBD3E1
7315E1E0A224FADE62569408F6ED842CA10DC6BE7A532F8C1112CF4A84AC845A
CDC41C6CAC48DE640F7251EDA10523D0D3A102387A3B248BEAC03F60CF6A48E8
68707E4E1A40F0196979581E1F03905ED468E6CDB5FF3C3429BDC7838A9410E7
B2D42EC2BBBD4E1BA25E5C289A117F0C50FB1669230ED4C68F9A415BBCF9471A
56096D8A80D4C665D405CAAA6D6A29C995E0D51CD606B5E8CD617F14A9B524F6
026F3551589FC18A401F3DECCF25DD17DEB17C16F44AD72173AD291FE9C1A255
9F2F929B8BB8DCC51ABAF46B099FF61CA6A77D5D31434A09B64F8FD9213B477A
704A145DABB3B12CEA753FBCE23AEF16A12F81D6145E3354E674A9A853C1E216
348AB87B18A4184C84556C0476BA1F3ABF8A9BAC5C83038807C1CF6B7D3D5323
A2D26F3ABC34D58DDC5A0CF8A05CE4080FD800B0B882EBEC4DFE04754F3A8194
1F66E54A3EACEF4395B9B94CEFD7B1F245E01C1F36620885905091FEBE1AF05C
A55A53623347DEE1DDFD486D303E795B024E5FF619B03F8A1924A0BDFDDF66CD
C5D47010D559AE27AF9349B223DEBDB510F36CFA5A1647F7FD98F225E500E5F7
DEF09F937900FF025D63F3F3E45F316B5E5001523600E26B20C8811CCF11C7FE
0934A0B9F54B651BB7A2FFB0FFC63B7D9F12B2F4A61E66537C09C36808D78A4D
5A13A5294A43A57869D21A83C2C94DAC7773DC51E60BACC2D10D2691E186DC9E
3B58491AC15834E98148DB13B4F113DCCAA98EF8AA17FBCDFD3535EECF830F14
6463EC2A440645C8AABF5A037944087CB2D5D260D28129A5DC6BF7D61D9E0358
1F22C0D366590BE5F0147D68C3AF6DE75696A2B47E4C81BA6C9E6FDA99321F57
F6794E4F833B453891F4A5DEB67199934371EC8910E5644EAD18817515D6ACD8
1856288366086F50154919E5C99CF62A721C575E78AD2E58757D6E68D227ECD4
666E9377B1E124F52FB9AD59CB083D4BD81DA759A21518DE5A658832D462D39F
D4D8B69E5A4B5B3056933A3730D29252DA027E97E534AAA1134EA7452F2FF1F6
287420403A0A31CE4A66F3EC2045BD2528E097D62EBC6744A2D5CA5CEB2340F0
2646EB786EF293CF46D124BE0F8664FEA6713D4D0616EEEE3F80FF0D715B1B4C
7A6B386466E51305470160FFA5A9F89C2E1CD58E15E23EB6FFC0B492E09549CE
A21B8FE273A2490615781F4BD3B054843D4BB1DDA2AD8EAE2841338CC8173653
E1733940CDBEC9B476678A7BCD0C6AACBCDB30241E3E2F47B265EC4F5C6D3D7F
2A15B42461B54535F08AB6EC4502F736F76AEB861A3516C023DD8E36C5832D8D
0E5BBB31FA3647D2B0AA7E01243B0C39641842934D2854AE79405374E0CD5FA2
9B8ED4A8217BDC85C48D4040C5153D72B41953605C79AD88E7A914FBEEC22FD4
4B86CA343E2368691757281F2FC35633487F2C0FCA35CC05E9D6622174BDE3AB
3916E34B9EAF5DEFC753AD0980FAA7A0837A0DD1EAD10B0A7A3F70DB740709CF
3644814A3CE35E93E591AA34784E8F4E42C4900F9BB002996744C6E5514CA68B
B67B6D0DDCAC5E656F5324D0694F11D054209064C022EB018C09387AE7F4B572
1033E6328F337B4B1CBF8F3E4995B38E71825486F2C563C52C7A22BF7AF3BC49
0D267B489768372CC0E84BCA86276BDBA191466083845E17829FB5C563266755
B07C1E9658B8DA9F48C8E10FB7F473A5BA5C8C95A399DFD3C62C0411E53F00C3
1F4BB9F0B7AC71945084D8BF715E80C3B16EE4DFFB456986F268ADBEE6BCC827
B863F7E0EAE4E95E3D50EBB87BFAE2ED2D2ABA218B885229FD1923CC317961CF
A5DA10AEBE92DC4EDA5C72C6F8BEF915E7E098D3DDDB939A3A6BC4FE551D41FE
BE1E142BFDABFAB60376DE3D267F30FA2F1FD18090D6EE761B6787D6F89F94D8
97D63724A9965881A84E42E5DEDDF6BC2FFEC9B106C8754731876BECE71C459F
7E94419C752B920E8C67758A43C49E2A845FF4E7C54D319BED0BF6A479B4C2FD
C7614E23F7D32E8CC58AD259CDCDE93654BB87A9482A58049F71949A1C5E8A23
C22FB5722C120367FF9292C71C6D5901EE083B47FC2A9A85F68CC26A4D25872F
EB3A4764C7A0A62A6DC82AE2ABCADD76212A3759566E04ED44EA5D22124C4D55
4AB44DFFFCBF4181A86F0A4BD25C3921CD2BA83608C01FE38A8BA0578E487113
90FA2878C9CD37249AE446D6E6BE72DB76EBDD3B6D382A015F745E9413590B9E
20220D2049D5A06F34DE2335626096EA26D57B94A928E3542A6C5E86F0126AB2
5A5CA2875B48C61CB8112A4CFA6F710934B29652E763300876BB073367A61A91
B741B5AF78AD82068FB9A44C98405CCF54DE838BFF264A3C969372E29B2B4099
95B5EB6A88A30FB007D57FEFC2BC9D43603DF718FCF9190B3B86C38960B5D418
A3D4AE53C85F11FB1FCE82E67CF096A37FB3376B747F197C1A3A19628E346019
FFC574588DEC1E18E82C71DEC9D9D76363262872446BBA4D955F92048596DE90
71855D38DB94D3869EDD3934C338E53FA772562F0C9B1B0E0A3A6DCB731C83C5
37708BD4A40EAAF45ACF566D9B4CDAEFA0050B0B507CD582F477C9244922C159
03C8BF20700422356938C2DB215BBEA1BB66DDE4937431180868C7211E6C9AF0
4790A5066B6E345EA4024D5400684475DE7D40C123DCF8332C10141AAD2E204A
EF7778AA8105DBCDCEF79D22EC07259DB973F5C59FFBE37B6495723BE8FC20A0
01CE986D6FD202A6087AD9B80C2D4C4BC04EA151AF7CF447C2C6A8CCB40CBFA5
0C6840E8B239FF51295D71C77B5DA393E9D4CBA3EE58C67F6CD8467777B2155B
52FF01581DEAFC030C91D6D4EF516020F64CC738A533CC8318C65668C6706DE7
011CB6BABE4C3BC77EB6FA9372ECBF0DD1B058CB1A08E89030D2963D180EF18D
90A8661E9DA70FBB5F0551018E8636E58B04D099A793EE43C2B7EEA418C2E8C1
D3AA9ACA544D6FE1CDF0EBEFA316DED6562BF50FAB965CC1EEF7281098EA758B
C1139B277C5328608BAB84B08AE16591935EDEE116903019FA85B63A73410234
B81052AF604E816A96B840649848D4F9BB391C7ABE8827811853B403AD6CB561
69499C894FD1497D98C359BC2D955B808C8C907D741ABD50AABA507705AF6789
C030472546A9758D208D0B6DC259DA5CF25EF708E55650FDCDEBD652ACA68FE1
A7CC4E465E9261670D7FB3039061CEF984B3D1B2D97834FC6A8AC6B8EB531837
396EB50F6ED2C41DD55531C9CBB9DE4343B25C02D0C6140F709A80090F367BC1
D982E7CAA793C12F2B9DFAFF9356985A1F56A24AED3E8F4434E1A044DDFF336C
4A7E77959FAFA420029FCC90D105D3EE27FC278B154DB4BEB0ABB89CA02229E3
481C9228939605DB8CE81550FBFEC2B26931AEF4D4843E3A341A58DA17B391E3
B83A474F91B89E56B92DDAB5C53AABDF9644D6937D76AC6F294C7D532A1C2526
E7FF50097AA25FF3AC5B637EAF09FE209BA2AE51201F6533BDC03538243D0FEF
2680E2B85DAA259FF6CDEE9BEE0507016F76F4E6F2D84F856795832BA7C22D9A
F7C3BF138855B970885289B47A192E1E9A896951B49CD90763D106CC42E26B85
EF1C53F62DAD95BB56A33C5F2FCE6A7B970E26003971B9379267C0F881D104A6
B23A09A1249F3175E65964AAA6B30D16B307BAF08647EA962BC8250FFDB358F1
AE5B1E49B9924D628E24FD76FD38ADF1D15D6A0C7F4ECC53A945A20FC270D469
FD4D6D62B79C1ED6E905AAF719B9FE974D7EEF5E6B14E27DB011D7D5C8BC6AF9
E4E19437423672A26B9CDDDBE6157CB1E86B6AF8BC706485EBCC213CD4FCC758
30BFA32E280D3B95B95C0952099EB2FC2242FA9303E9286EA1F4910B0B89AA20
778943310789CE684DB1E51B5EBEEBD24F02CBF10FEF402259730494D3BA36F2
319E0661DEB73169DF8EBDE941412317180187E3F5115E07241A0ED0750EDE3C
9B4A1A23255B16050DFC15D0B17B62C389303B11EBFFC3BDD08BB63522A7F459
CF47F6F61391D4EB56980BAAA8D2EABC9B4FCA317EE7904EDD6266DC40BCD16E
7E726E3733BD6F44B0D578ABC742B50C74AAC4DC3D89DBC5FC51BBDF838AF209
22BE4D6F73C3B384DDBC2CE56099BABA2EB4E937A1E038DE747E40980217EB40
DFEC71A2BD6EDA120F1EAB0EA41F422AA9209241CE077CB6FBA4D99981F9B9CB
0B3967BB37C3726993CE2E3B1DD99228808CB2B1643321283C5D4B4CEDF2701E
BDDD73546AA5EBCA67C2BC8FA311CA22F8FC2857ED7D191E5A9CE69E82BADB14
C174F6DB8F35472C06DEC103A3DD030A231E24E1E8D84DCDABAA54D3684093B4
6777FF32DA304ACBA714A7E184A53C1A9CA0501E761D4B17658FF0E87F4DB56E
6D82A91A6DDCF6F71AC38D21437E7C5987C9CA346AD0D85828A20DD52DF55365
126C5FBFAEDBC1C620DF7D425F361583BC71257EE2008E95667E3A7EB9ED28F7
37D807E2CB59BD366A9A2B0E5AC8161C434D041CC949408DC2E136735D046E35
447A068E3979D7C6BA5A12AD55A1686D8091A82A8C230073EF0A7D9A706AD9D6
BE12BF8176F4DB26175F231584086CD60E22A5633D25130F686ECD3B21B53F1F
A77EA74787ACE422F5D14EEFA74C694902AB0FCDB1429C173814B834CE4A1534
233A0FBE02A7945D456C714E44750C8A82A844158E0A6C7578C3D236CAD6DBFE
CEDFEF3AE9E61439FF77FB56D9901A03F787D2B8E74ABD2F7ACD3887A60F487B
55D87402CD1A60A280C7D46073BD26F2AB3655AB09945837B4F78D75DBDCE361
09B8586D720A9F2274C4617B9179C3892B31A59638D54AC644FBF541F63FAE98
B60D13FA53A9E66A395DA0D74EF163AE2921EEE3196B9BE75E8D0ED013B7D183
AB381D99329DA080D9D2A350AB2E32255736579E522BCE6EEA3F6DAC743E5681
CF0D76A44F7F8D1AA8F9C6DCD23B45CDEF1234921C6CE8AE443837A2E527CE04
29F158F71D51E0E2EEDB3F9B75C6458CBE3FD9713D1F3A15FD44B9AF180671B6
EFF4B43325CB2416FE1AA30AE642FE8B81DA4A36BF9A039825D4955327100476
C03BB71B579510EB65807621A514210599FA52159F19EAB3F2275D1F3607DD9E
D12C906DD365A1D73F32C0478DC74DE344BC3EBE584AD1897E4DB66CA9AB7408
704A037AB1E11CC251D958F39C8E83949D77A0633D90116E732E9D2E2800EBC5
93B844B77C34082AB3F66A2F2A9BCCB100AB04604DB282A73431FF966B1CCD5E
63C77F43B6963A0F71A9D546C82DA2609E68EB1323DF3517F710053112060802
62C0D9BE2C406CE2BEBF1891D251BBA10435B78DD63468E34D2BBB4DDED6E8EC
6A58365DDA30F723D4D992E0DFD09496C652F4D8CE20E4D43C03F6CDA804482E
FF25D140E9E08CBD738CF5D96EFD2810D4D593D3E2644444F7ECF439125DCBC6
D8594107F77A6E4B0C367BC1D982E7CAA79388FDC6A5BDB1E11B0ED428F02055
79FF824DF89A5E8ADC36B9EDC6B2F44FF3690699A850ACD0D7B275A84735068A
3EEA33809581568E46C91AC741D529C5C10F6F95E2C9A9FFB3AD317F0289D9A8
391134398CEC18C7BA41F20CCD8A05E35B3986706771299C1134BEA1E61C5681
5736095F7FC15D4F459DA473CC43AFC2BE532E3DEA1DE30363BBE8FD0152A321
29A5FB2BD261EAEA6345EFEE32C3DF4BE75C4EAC36F3CDF34ADAEA6F03337EB6
05FAA095003F4161A1F3D3B33E7D926FA1EC206DBFB190BD89527147C0079BCC
0F62C60084C00711EEC253BA8AAAE17EA451BA58E03C849D5A774B3703007523
11DE56A99BE7BC4E93E0026E3328D22EC68A8FAA9A9373D6EA579AA58A3C5B38
A3A48E8E6F36CE147AD025F24591E5C21362DC181A6AB09559FC177441F2933C
A54D1A3838E4AACE08BAC9C55F851B636E9B82DD572111252CB04FEED21E35FB
617473DFD65B34B895E4BE8488C3CFEFDC2BDDD8C7319C76E625ED1B203ECC3E
47F208F73376C6C565E901E7CD3878963CF5DED0AF05FE17F495756A47B354AC
BB738E7D3512C9852D83D5E31A3D60BFF38977DBF0F59D122FF7D2876853E0FE
62801D4AF97BD93035C271541E0BD7C13450AE61AFC0D1FED8B068713949CB66
F60DF5A0959F64D5ACE7273230DEAAA47024DAE2405D7C030E15B56F45FB8DB4
9EA4B34626D7BEF8CF822DD834BF339F65F9DAE79023BD02CE74FE2F27F9D6B8
BE7E4A0B4B2C4896E55FC1B9D6541349015E120076B0802BE166F3254B7C0253
4633013AD47F4A005BC3C205BD3CE10ACD844E3367DE4D7D2EB6C6D6C4C2F236
D82C63E6945C1FD77D0FC6842C0D87766E418635EB7FF7AB50AA4C26E321B43F
2EB4BC63571FE08F7776456AEB612A20802715C52A5093B9D7C5FFF551722AAC
41B5ABF2B5C01CD35FFB5FD0D73023BB57805FC86232B2E675223EEDDDAF8515
F2DA584EA8870B570EA6DA0A165B0DA6E7CD65E5377CE4FC5E542F15DD10CE1C
05338B6B4595204D9803A4D9E7C8BF8CD2F101FB6981B07E89A060AEDEE37FBF
06DB0C9653952C9BD5BAA87F99377AD6BCB1740BF0B76319F5C6E8BA684961E4
AE54D39C011F64F1C79D05313529D51CC86D63D7D049839272C584CDF0D57366
A2676996791C82D8775E2E8E81CA6C638A48A9D9636572FA3154490E12BF0BDE
A882F08ECF2581E6BF7F08CEF25E67BF042068ECD47E3E3F208C8E029C4BD1B0
D83DA6095E85675A816A7CC25ED9F8AAB7322404190EEB8C3865F539E9F967B3
A3518DA0D770168D309047E391737DCEA65EB2CF191BC1AC1CC065CDC859070F
E6F10612EB302F55EB135D27102022D6187BB98CC30DA95DB4B8D9F8B32395EE
370CAE35ED889DFC966B12C61CDA801BF598D72AC8332806C03ED3F1C4027AA5
10C6BE29C5770A5C6F994F3ABFE19C4B000B6C604FDD2D67F7A0729C58FD534B
A2A6EED72B0BD0446F88B855392D808F49F9387D8A5E83CC8A67365DEFC8C2BF
88D6B0162DEE357291CFB6A72A12DCDE1D70A0544C5B61B52833BE1DCA979501
6B7384067DAF910AC97A6B432C43F3C73611DD23FDA904B768155C4B3A2F7469
22FDB74F3B2FD748CCD51FBE300D7E9E6F5AEB3663F1E07AA7FB2A6D08CD85F7
5F0664560EC893AC961FBBE91F524ACC4AE71BDE66F48E8925C655C7B2BD85BC
DD1125AA7E40BA7E1CCD09E8CEEDFA24ABDE823CC6F6B1F9BCF824BE658EDC78
6857B9052E00B5F53FCB89B8D254F4FE3D35F3E91A2A0ADC5A028935DD3AC459
1E66099FDEDE6EBAD6D42936199DB170B60F6AADF1D2483123679DEA90395CE4
7E28A84EE132167DE6C8C6FB49AFE609454691FA73D0ECAD887E61002B02D9B0
25971ACBFDAC673C16DA3C3D64C67A454DEA6F56AEA8267EBB554942D342CDB4
DF615E2C0906395EAD4D289AFCDAFC06DCDD326268BA8D50A41E7AC7D7F0ECA2
9A6620E96393AB4DD6BD53D276B4389A42B980B34231B5AA3A38B03F5B5C3BD3
6DBE762F32EB37284D519C72750F6AB095DD3F5BAAB57980BFB56212C6F87FBB
050C63047BF7152DCD2A1414222C3202351EDAD35F8E4BDE640FC8B0A82D833D
E2CB677F95DDE203D6E43167C95AC7D08C917043D603CCB29BB093939103A58C
E4F31A1C0DF314D41C25D62C367C8A56825B9087FB9839616263E17C5FB2F44D
1D4EF7046BDEF95BC5F52021414A378C798ACF2511F72B3BEB64BDB33FA24B89
C7B4655474EB5E2744369191ADF2F719812D43D78077C76AE9530A171BB8A387
8389B565CB1AEFA7A9B7F1D48F1A733F86F6750CD6F297DCD3779B48028C4B9C
710FC065C015B72EDC6C3650829FEF82AF071808C1B0C0A4FD2DA76623FFFB96
5CB203171DFB326B00CAD1A44A4EA9E4868AAA20AFD697D795029EC89A4A6862
8BDF130E90B9BD3AA8DE7FF7F35FC21A9412593433767A50C9F3E7EB0C853032
7EB879130CE7064B52178C56D220CE846309841BA8628796137E720B32D4E8FD
DB0C5D32A94B6CFDEEC8C04C393B212CE6E3070B0BBCAEBEEC712A17BF0D3201
C44C73D8874B77D3B673156848FB24764BC06AE6CF6A17AEB5F7B718961ABD9A
EB78B739E2975CF5B5E92F0CC500964AC60B4AD3F1AD5FEFFCA047B95A945700
8440A2B6ED7652059EEED25D20BEE52C84035AB1DA40C4222169500ACE240C4F
D281550055BE08A98D8CAFF8B28EF905B8D37C203A84DE99F705E08A7A751959
D68687E5F53C2F79C8309020554177906D8E2FE78A4B0662242B3EF7756A03CB
0DEED7C54C31B0BA54721734AC39EC68D79AE1FB42841F91136CF2814BA4ED08
56AB15D25AB96D2C4780421062B754DF2D57D0AC1341F032223F33C6EBC96C16
AA4B0B4020F79FFC7A4AF74C00BF2439E5A7D1E585F4C2C7020DC97A3E9D6B37
E9511868892B5DD0568ED81E0DC97E2783D4B388B994CFE854539EF254C46C02
465E906C7A7B67F416B24FF228FB248BB53B07D798ED5E98C558B87492BAE2D7
CC111F0961CE6D0B83C86C20E5AFD8378E3C8871D3B4B43B7F63DF43D949D6F7
B0206499500CF2169A31BE4B5A2848CB1ED1438E7A1E3C732FC52CC498B876C7
78382461A9C73D8D44736FF6CBFD759E34608F64F3775DAF85EAFCA3881B5682
2ED677D767B2DB4AE1194E1C8E59959656CE1842320E3F8C7C00EDCDFCD1407B
3DA0A85C68785FE46FD7AEECE43D74C3E6964DCF1885C4E39F805B4AE50AF545
1D8128C8D0143D39B993B1880E068D3B716B5BA9F96F9147A00FA1375C370291
EF972430D104AA7F02D48B458ACCFF57E3733A7CAB1F0C8C9F32242D306A3828
6186643562E9BF8DCD4A3C00B07C529439E4295AF83BA1604D3636872532EDBA
FA8E0B437D7B61F92AC120699812FCE8E5D6AA1C6F813D6864CB4CAD8879440B
77A26811326B742E85691C5DE032F0B61A447FA6BC4D054F4ECCEFB149CB6741
0C30A3FA33AA9F8FD6E9B811E274DD052F136FBB45863EA8A68B8AEAB8CD4D9C
C9C229D808EE796C5A42C14E26CB0641F2449156547B18875C46D7A8CDDF5291
32EB41B392EAAF92B51E4A986593373D4F413A86139AC9A4ACCE91F942CD1D99
1F2E5F4AB333D1620C613DF665ABDAA447AE0F1172A37D2097349A809A3E4643
5EFE30AB98CD8B8830B5AB1E76E0AD9D6B8205C69D03CEBF7A1D1C0F5D153347
EEDE79C2B02C477688D9F1EDE1ACBEBA14AC29C160C9AA0B939FE4C5E751C981
CC162D9CE698EDAC4BB6AD0C4E38D9BEBB49004D285524AE49079A16886B1316
5E22C422309D0E0B23B6A505F2DACE1FBA3B6AFCFA00A6EC2C6585E7F6F71A69
D1A11CD78564A678479DA3351B26374A9C4E871D15B71421D6ADB8105AEF1742
EB25F006066C98B2382F15FB33D2C0007CF841F3640F4BE37FEB6C9F14D0CA84
1A68D332E649A438660F8A4BB2B6997343AD5A81F78F9AE58A589AF15F7AB87E
F2001921E34811
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: LMRoman12-Bold
%!PS-AdobeFont-1.0: LMRoman12-Bold 2.004
%%CreationDate: 7th October 2009
% Generated by MetaType1 (a MetaPost-based engine)
% Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).
% Supported by CSTUG, DANTE eV, GUST, GUTenberg, NTG, and TUG.
% METATYPE1/Type 1 version by B. Jackowski & J. M. Nowacki
% from GUST (http://www.gust.org.pl).
% This work is released under the GUST Font License.
% For the most recent version of this license see
% This work has the LPPL maintenance status `maintained'.
% The Current Maintainer of this work is Bogus\l{}aw Jackowski and Janusz M. Nowacki.
% This work consists of the files listed in the MANIFEST-Latin-Modern.txt file.
% ADL: 806 194 0
%%EndComments
FontDirectory/LMRoman12-Bold known{/LMRoman12-Bold findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(2.004)readonly def
/Notice(Copyright 2003--2009 by B. Jackowski and J.M. Nowacki (on behalf of TeX USERS GROUPS).)readonly def
/FullName(LMRoman12-Bold)readonly def
/FamilyName(LMRoman12)readonly def
/Weight(Bold)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -175 def
/UnderlineThickness 66 def
end readonly def
/FontName /LMRoman12-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-476 -289 1577 1137}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF10591DF32391231FD9ADF097C47DF0B87CBECE1B
8126447EAE1564C1C1A82FEFB61C5F15ADB2502457074DCEE095549FD9D8BC58
757F3BFADBB5865A9F4C6B4E37AE0A3790E79B4A3CC477140D5BFF652B59E400
223C83D4E08A2406824F883A52C6DA76EFD957D5DAB0EB5CB1111B83A6ED56D8
E02845701BFCB7E954FF5CD309C679025FF0FE24F12514DF0FEF86EC20AF9326
7CF08461753843F4E3AC3C486D6AE78F03909D8DFE1BCD5645596A486C156CF9
D549995066A7AE7B22C519ECE348BF3529C95E2D1ECB832C24FCF54C84718CED
6164AD8035CD1E938B7726CB36CBBF34DEC977D42954E88925EC9033EE14BAC6
F9D6B54E85C0EA39EF3A661EE4B82D6F8D529D44C855B642DEE4AD670824A86F
06287DE387927F86F092989624FF57E382429F14903B387E9AB9787CDAA4EB3B
06F3473A63B31C176C03F8C931A5B7B5C47CDFE2068072EF520D355530600D28
04594D8EA0FF6D130231BB08227B4CAD7657791F89549F92C7C0D07E12044BF3
D9EB41E97D064DC781C5E5D76F5F54BEAEB123C53D41663B0C2594354F39D3D5
A3E1397FD2E40D5E6153592AA3F4EDA899BCA86F2935FBC0EB8D826714DB45A3
932C9138908E429806A32A74C464169625F10438F7087BF286C089EA3C6866AD
F44B147B76D3F2968E9704C8AF9F8223DC14873AD224CE1F669D6DDFABD6A26B
DAE2B315DEA91E452DDAD3066F81EA46582C324C6513964A084802A25E211009
E84E722FFF61C769C50BD329B88A5B58FB2C3972A239A35712A06FF1A5F6C86B
E871E32383E6D196683F2CE295C80E3F95459833AA2D4CA6065C2B584B4CCE8F
DC43D607288635D51D2F3F4DDD3C0ED736EDB545E529CA119E937A4E4F77B509
388EA3FD9FA10797B5A2DDFB174B1E1FDD705AF02638B0318BEA32B0D416B27B
9504C889C1FC30A36AF2B2771B685B4D7EFD996442CF47558EF0E566DA0DEE12
7C9E98DCE9C83BE46CF6D4B1DAA2AEE52EEB4F07F80386C872B556B363517608
42271DC8BCC8A7AED0FFA3EC0839B104B3D3399D3C2172D3C2F4A2A6DD033D6A
0D6B362EF493A53C3C1B37349F51BB5EB83237C7A488381A17E3ADE2F3BBAE34
04AF40A5B687B14670190FBB954E10D29A3F0A68C1C2482A0BCDFFD9613AC0C4
6F3D057FB5F47E2DDDF9B56C3617FEA2E7FD05520E996C0B3F3FEEAE3DC36406
0DB581E752429B985F23EBA0C9875AD055D8B1F640D10DB8F40BBF062F476691
EDAA1D05C5591EEDC1B75251BFF8576F1C9CC5C0E521392A2F0D5F869F8AA462
B3883A673A976328E1F0DAA22B80CB7737DE2537E7B54F5E1643E30046E87CF3
8D9A45A973757BC16CC50504033125D2A68A1C97CA095C56B3D62783960780B3
1693596869FAF5692AA8FA6643FCD7F55E72948D2DC55AFC5016FB2C48AF9D85
192393C682B739EB43CAD8C3FD4053B2D53CF911352E2BA87A65F8949B0B7918
EA727DE4A08DE07B71365B8F31103159F65D30A7A318C1056BF638CD20BB56D8
6F22ED3EACC46F750F405FAF96268E80A409CD8AE0F36B68AA8C5FD2E0E871DB
D2628AEC086AAFC9F04CC93440E1A8B0ACC1DCADB778837360339A25C08E3B0C
E768240F0E8CE9FF939E4B1A6365664AAB69761B7A9C7B95BD29B09B930B0D82
F2C39F9BC0B94E56C48DCB22D8F0CA6C633BE68E5977EB3D88103E4230C6A08B
B4FB0CDEA7D44636102D47AB90B92FA42243943EB3E77E6CC38DEDBB2DB8BE77
78936B70FAE12EB1E2913B766CA2BAC3FA555CBADAF2CBF6B7A216FC93470554
2C841542BC1FDB26DBE389CED193E28A19CE9CBA64FCEB47C4D9C7891741E0A1
23FBBE971ED93F797C02EA830678317452481FB78DFEFDB25A3645AD3979D2F4
AA17C624CAB35B85963C6DED262AED5DE92278F31B2E573FD86696D98800443F
32CF695BC103A3ACA687FBB3F42AF9C89123C719005844588667C3DA28AFA523
BAEADF7BED1F3B5D595DF571540D0855FA377DFA6880F525878D6A3D1980C7D1
05554ACC5D07ACEA1E0D27664F6DFB6EFF878D0A68604565D0BF75FD8BE023FA
36D164B7BE25F9F811A466CE04C2CE5A774EE3288A245769B7ED30FCFA10230A
D6C9E809341BF5E55E58F3288F7298D62092922F07027352BC7C9612CFCB7018
B3394AF7EE7076395E67C3CF9B71BE069AE6C6C412F86A496E7C77173A0CDA0B
CC46683C239700CF259CF668B9F5C990DE3196B84BE792F51E17583FD4A83178
989638A37897AA769D74E0B3A299DD94B314F9BAFA7217AC70D8D9D02544A545
F6880EED34399A835514CCB97938F3E012AF4D68C140C6CE231015D93CEFC522
CF56EDA6F3147B3861904FBF8BEE6DB3D2E71479CD3A02BE03C555B0808D40B9
53D2EC56876076A116EE7E81836676237F88C519F8DBF39EC35FE41D78CF1665
E3FFD09C78FFF428AC27BCF0318D0849935822699E31F5115E7854A22F46951A
51F24526F7190B18B313DC58AA2EAF631A48ABE394668C6F1CE9AEADFB56116F
FB38C388F96143BA870537CC8B3E5F2DC39F9B930ECC63475BBB8C5F9A45218D
E05C4E6F250F6E544D6011F65EF4808D3D0158097CDB6E280AA402229A6B78E6
AC615258668BFD3469CD663592BF1214E5EF1C116C4DB47B805E2F60771168CF
79CF10DC2DA8F2BE94869AA570DF2AA5852113C51CFC85C1E41516CE412CB410
BD026231E22A9CD0F664D76D385CC1170476B17BCDA45C640C583F16DA207028
0C58570A966383AA9F7CE59375525369CA6A559BEF0E05F11CA9C72A278C045B
1D2572EC08DE1424D2420D550177794FB3DEBEBE9E4105AAD34FF119AB2483CC
A034A95AF0B24B801710B398D9E9A95138859A819011423AB5921DE8EAC56ADB
58FB18C27A41CE503CAF2E7EA6F673ED5F34F1C1D20B609A152EDECFA26872BC
3C8C802A1517D9C6FDA3474591F19D573EB051F551990D0331B2DEBFA31B5010
3F6332290E522C15C69352124E1051A715399BBD1A6D3704BCBBE1FFF89E56CF
9C3EF605898309C7C3D20DFBFD10DF5FA30F409A76AE8021045DC09C95C9AE4B
4EF735A5414D985F6F79100E7045B930267F0EEA9BE820E13291132AE91118E4
7B8432BD1AD7A9CD912F2BFF83A2C4705A26FCBB7F8E45CB2FD9AA2EA98E381A
01BA4C4E31747123F20A0A721766F9D9A6769FF80B400B1EDBFCAC63CE15283E
72EC447BADD5BD58B053A11BD770399E31FB3B3D856FBCF6235BAD1F0D38E26C
3518FE6411F2A5FD4809C085AC2D60FA311DC99B9100C1A59CEF4C877053161B
59682BF5F2D85F2DA7EA0FE603D477F6E80DEAE0F250811BCC646D8CE2956C78
B897A5000D73AD32BD99B92E6E63BF8D79777859EC0F7FAE47F5A0CA878106F5
5462D3027DEA15E36AACC0E7349C8E60D6F2439E2D50DCB9D96C6C20D11266F7
913970C783EF6D587F638339D1E89A4878ED27E515FED0D26FEEE69602B2BD58
D146C077FAC71FD55A5490C89142F2844CB7E6352B01A448D4BD7A06D8EC0F00
E69984EC55E0B487FDEBB3F7FC3F4093CC6E13B87084E461E23A4D6862F0EEA2
84DAEA8343FE913EA90B9ADC7D025C2B8EA3689D75AA38B5222166C447B82E75
52DE05711B3883394BA9D683C161A48059A0463B17F3DFE8A73B46E913B99D2A
38E7FCC667A5B810B665519E7E1450E00BB9D0279537763ACA5F131550E83404
04E208B9C0B0A118F40332BDBB431AA70981E77AA5E5E76F43E730D9D3D047D0
B3EC66EF1D37916398FB8CE955E12D8A89ADEB1AE1EDCF91BD788D8F261962B4
3870D5928D160218A297BBD3BEA22E12E9C4197D0F3835C0942AD6487F5C9B20
C9A597910685A9BEE4CBA868D352ADC10A564782DF3BD57758FD145E769D4E88
BF43D19050DA58FFD64EB7B1D37BA13752B6C966C7A1397D80160687245269D0
F27E87B2186D931D624120B81967E58ABF5DD66AE39640224A518BF378B5CD26
761D1ECD916FC625A90EE8A7E00080300F0A05D265549982D56614814E10FB25
DA53070C2BBB4411D9608F4FF0B2E171820C734BD20399504F034BFE4C20E7A3
1326783358CF8D4FA48C1AB81741FA70BC0E0A4BBD104C7E5AC05CE49C6375E8
9F0EAB2B56BBB89144CE810C78D8CA02BD7CE2AEF79E27A7CC1D6B68A5B9F504
BED3487D1424CA82B8CC60A0156706987C7D0DB913F1BBF8A7B9A275E3345BBA
213B3DF67C4111E9564B59B724BD65916BFEEFE9BF03AF9D84DD2AB94847F33A
3AB3757D2C8CB688D50EEA68DEAD0613A62C3000C037092ED0A93F8486FDD39C
FCD0E8A6224BFA03E8C6D73F4B8F480327701262285C527828E5E203F328AD95
5AB433987B229534C53061C3350047FB20E3887F514B5897FDF225685D18D679
9DC141B7F6830D6771F1A3CAE655CA173FA57D400530CA6FABDCCB4325478D0C
93AC7EAA9DF7605213DEAF94C7281D9AC68D884E15ACA3BA68034F897A2FFC1E
F76FA2A69CEE7F1E9543904F1773969F65553C3469FD85B2F2F89F0E547BFBFD
F62A3E47DAA4EAD6D47F0305CCDB297C320A48A3655FAFC810CEC6F6D68ADA4F
AB5DD7F61DB94072B0AB8F1ABF62A78E43E1578DEBD2D05109DEBBCEC64AC700
4C28C4F0A5E3A003423B9958C73D306B2B4A7C67A95F8B4E737992642BD3701D
39FFAD94524A7752560FE97B8E99A12AFCCC5044D989BCAEC863BD15CAB7CE63
0194962E4183C3838D9401260A743447DF953444B29D7CB004560D0685F73E87
72FDDAB87125F419F90D165EF1C2A06A9B7500C6AD185B4115777C6BF9C24D88
653589B431FB84E4DDB650C2F783594DE6123D3142FC5C99973AF211F2A2A05F
5A756073B85FEADA4823BC1467EF2FC0E98A2BB28E5933E2F6E50D3580C547C2
54FBBBDC95998DEF2EA825E3BB2AEEACC0F30841835121B7A7D7A973F2EF67F2
795E6DD8CF55B9823AB2B15ADC328CC3AC493DE8C2F022EBFA14A2976D8E3559
B5FEDADF4E23A07F6C0E1387DD54F5C8BD071C4E9A716737B6BA413F846A887B
D1B3B89EEF73565F3D0D2D1E40E4C2811D37C9029692DF8E94F6FE39474EE13A
EEE65EC0E099C29064CBC0503FA4C89D845F91A107C8414C1648F6EBF6C8B1AA
7B2F72302AC2C6E6E9E4FD1EDCFCB8C648B2BDC18FE07B44B7E886DAB96F8B4A
BC3C584457B1565FE02E26EFAADB605C5CFE109AC7A355E2283555E10CA9070F
BB98E2337281FDEE7EC20EA060A062235F8848946BD058A0C86C794697BB0674
C1DA26CAC3FCFFE73689E2CCCAD5DE725AF6C7DE282CAA214D69B6793520439F
2991BEE6E427D4E82FADAC6C3829AFE1196FFD8D1D0F6BFAFF4F9062FDD08665
FFBDE33DB3EBD99D8110257DD0B832CB4209074A589041E903F6D89E22D34EBD
2B3C90EF5D9AF0A0DBD5145F0FAD88EB09D1BD84D00D951D4CF9252A4443EECC
AF1E56E5FF02B9070C1A92470E3AD7F1CD944E91ADBD1EFF555FF3EC5664191F
1C11943BB76D70D356FE5D145C73670D1A8F71E5C4FEE96C8D4DF87FF05432B5
165C8DDEF25DC98CBEA51FA99398860E1C252C17EE576B7ED658ABFD497DD5D4
E49663A5CA73CA347E27BC49C7DBD28DDB3AC7A78020551168A47ED789C2AD9A
B8C8FB7EA2F8C7D4D9FAB4B8DD91CB69558534CCE31AE7E157D0B060877AAEE5
14CFF0AD50200A157151F7625E63296E325E2C36D5DC45C5129C2D342CA7541A
75675EB2F1A5BF25461BB38C84D0651F4644CF51DAA8608BC3B698A22BAE29AE
3FE5C543DB648AB544E8212B3B2F97B5844022274F5EA46CF4E9D49CADFF1DC7
AD838B09A2CB6136CAE6AEA52ABA90745D527188599641549149217DF6B36367
A67BA60DB09562E82863F6C001ABEACCA36DAC81C30C11F98A77F4D100499847
E1102CC075FA1210881D95D6ECDD37B0B820176667500E58782156ED77373459
6699116573EB74FC1C83B091EA1700BD5B069BB7DEEE2BB45E7757F7BC00D85F
75BF5F32B350E2CF46BA0E8D0120BDB3E742C15DE5A8340318F907D7DB5591A7
08C83C63D6D457915A2F41B21629926169F4AEFD81BA2A880F4799EAE1C0C57C
FBC28FFFC956640872B49219FA101B88EBFA3E47EA4515043C418049903E3F36
885AD45509FC3CF7A376A608FC51751104BB96EAF8314E2322C457EC6683D385
525F118C799C34B50840604E7C248CA5BAE81E8C76C29FA3779933221D8A612A
2DFF00179C41CDD34E7015DD7198AD6EBD2BC01221F7E35F8662AEF8B6203C54
59E883141A505B275EE1333E6958254B6D96C9E54D47A12F4D299F67168AF7E6
1F19056BD1DEB7FE32A4F4E62D202CE86DDB34598B8CAED5B6DA81A6C816C747
568DD57D21AC8F8B1CD8B2BE97272017FC8176FB0988076E76EC6E8B4CA921C1
AAFC0EC3E24C38BF6D64E9C259ACF279C3272383D7526CEE1C178B1C6988F963
BB0D7534D41E675EF1BA59AA153AEFA7AA88C44F92801FAC61A4EFA2911B55BD
7DF444571A774CFABE590CD7C75BBE8B58EDC3A2C53FE35CC6B22EDC09857DBE
3019A7C60107821040CB0824EE588C4973D9A0D51FAE6E5FC9F82277403C5DCE
FC2C316D499F60E7C6C04DE9C117345C4E51748D3A5C5167780590DD9E188017
79FBC3307C0BB8A5784518676D62FF024E380036EC605313952366F3C351EFC4
33256002C59C39260DF18DDAB0BA5A40946D550B7831A2EE2670B2FC5DF8A50E
6F0C48860C52FEEFAA70B5953345568F1DA030BEF5C410DCA1D11F770EBC2E64
1196A40F44A2BD2529610091D8A9F09161A41BAC6A15727CE914A1009B2517FA
41ACD230B1E0CE76E289C42EAB07B0F60452B537A69B9EB54A68FDED4456122D
483AE830BE0C173A0D256118B0867DA2ACFA39F9F6EF1D81C607DDC242707D6B
53ED198367C7D54AC750A007498FA31E27B0F86C6D3AA81060727EDD60506506
EDE0AF44190FD947C4B9D41C4A6A03DF807F98C68F883721E6E7E6383207B054
006A409855639AB72C071CA7DBDEC1EB29885A11D100A9D443EC282E485CBCC4
8CA8861B0BAC0B3574ECAB561760E687C3BF7B72600494F60D3490DC63F40B39
F2C388F118806FAEF0361E5A30DA786E599D9055059C0C2180824BAFBDE47BB4
6F54EDD7D7FBE6B569AD9CA1AC51B9CAA30D805089E1E96AA5F1C7D8579C4D83
3DDC80D805CFE4868E62C90C06533AE6C9A73E86D96C6E3919B677C2599BAA26
96DDF00B27D9E1AA2D9A1986D83626E0D8D0C105CB6FC5F610237BB3C6E242EC
52D4D247307FDF5269B44DAAA80E7B4DAD286C0B4469A6264647AC1D5FB8AEBC
6481A94C6ED5EAD255050003F03E16A6529971CBCB06166030EEF983EF332497
5116CEE2F516B4E2977709EDBD3DB7AE516C55E742F598B2D718232DDAFB2043
F674EA73C9F043EB73E6A0511F1E28762342120515EF4AB7CD1C0D977AD77AA3
B19AADA40A0586A02109B864FE34566E17B4A1A09F9BA10DED06056B51C42FB9
B6A9C4362429C2FBCD39A24463D3E0AB8FCC9F3FD3A30F4F015CDE9893D5D66C
804F030B04D85B48DC345FC8249F699D5364BBA3E4FC59D1F7378FB3FA254230
B9826E6322C4D6231EFE10719E907FECF478FEF51DB2687D13CA64138054D591
B1C7894E2A0D724F4369326D31DC3FED9625DDBBEEADB867DDB7FF0678F202EF
8252CED93785F720E4DE92960A101294ECE75FFB72E6043F33FD3778024A3CBA
9DC490FD77F0F3AA902CB872E59AA81C0B0A6BC9DD687A18BA25D37CED0CD4E4
F0736A7C0EDA3E239C23A9BC94D2BB2581629D0C9CEDA46E01A5443002CFE126
DF21A740D9791D4FD8CFD7A635837144E85014CE922B9801C1C1939D2FCDDA6D
CCDC6E7B4B622D86519A9A42FB03DD17290E01444DE0216C35C52F0C3950222F
A43EFF75AEA3FA058494B0BCEE5A20AF99C473D1241DDDA5FDA97A2888AF5FCF
BB88F51495E5B2EECC7F07816F1CDFD16F7B82AE7FA98BF363EDEB32B1544C9B
7F8041AAC5EF16801613FCB3273DC62300B0AB0281C7CD4FBCE2B5356A2ECEE5
118D86CD0DC85A9A53BE7E1C06835390A532F3F6B1F8FF071E03D1BB27C6A591
AAF6BEBA1976526BFC9D408297302124C1A7A32D8F5976F7CA9EB64367E3161A
5B20A7DEA7A985D1C34836249AEF8ADE9F56E298AC1D7181D637A568C615AC37
91D8E50942287BC59CCADFB67B23FD0CC520310B3EF0414CB723B3506AFA56D0
24D45A9A51D740B3A96E7AB386AB4E1154350EA81C5DF203CAB41F0E6C48E170
4F311F51451DD607ACE85F8B4F4C828D7FF50D459FB6C913BB52FEF3A6D478FB
BCE3D06A8573ED0BBCF641FDA888EB1B9654C0CD0E070A900A54D9B875E95CA8
166B84CCDE9FB92FEF1C849E210276F72734DB97A902EAF9C9DBE267C618E342
EE8B5C4DA157F0B3F4ADE8D0DC6B9E205C7C32C2724172E4E8FC4B58E6CD01B5
9C73A14DBFB287B7017F6AE0F5CB1F557AEC587491B60E2834911FBD138AB934
E1A0F7FF39F7484F43E3826342C8B8BCEA7F73C3EA43CB339557002020EE213D
928E9506749E3D0594975AAEA16E8539363D7B082B6099832A468D399CB9F5A6
C00424B2B60737C546E9A01AAA148880A67E7D95E3F2042F21E131BCBE2362E1
A7F253A0ECEFC2D2E76DDFF6D7128E80DEF90FC98F020B3D5878314012CAB867
D7CF7091C7C7FE7488B914100EE2366557171F2F72AAE38C57A5F21AE59F5A0A
27925837BEE41CFA13CA06EAD9BA13FE15B781EF82A7634A3161CDD6645A9C7D
B42FDD905FF9EE5FA98B2F04D69AEFA77F8263FF6E201C09E3AD2368AB66C442
4D96039808510971A53273FC0F14AF9F539D2289A0BEA1A7A8BEB2ADF0D9950A
195F64FD3209C6D47B46B7708F855E5A0E7F579C8A4DD8D901A5B598D721639E
2A82FC866AB91B73E08A7F3F8BC5E5831303447C940325E2C4030CBDE864025D
7176A1DA12C5F127C127C759CE5E87C067C64070AF05EE7FD59641A99D3529DD
3B8224D77F85F5C1827E436663142B2DCC67B793FBB9CEE4A986A5022FC4BD5A
7555D2CDBA53678F9F95A9E825F55134182E2BB253BCDA0B89BA1436D90E1600
6762D511C7DED1303B2561A4D010A395A1BFC7A2423D1E19F32DAC41FD436DAB
7247513CACC1CB61153358E44F4754A24610486634605FB2DC8090F2CD466968
0E1BB64E75832DB17C1EB3108C53E594D933EADE2663ECCD818CD77D944EFAE6
4D32EC3EB4B6A2A82F34478E7C279D48E8716EB8782989162F1D8B304C5DC072
DBA063140C93C17F59A53BA9D9525307D93B8C0D596E1098DF42FB714969B926
2BEA8D983F0690B37189265190F092F0B6A6E00700E33089DFCC137E376D48AB
C3F5E23ED8FC35BA33F568888E01A80060E2A242EE4CA0E11E8CC506066BDFE4
72196A930F7E51B5CCE9965967502E946FB13220933FB217C7B41D721180EA88
9E1BAB998D3EE2C0BAA7AB94A0807026C3BDF61F080FAECEC86FBE4964497DF2
8C3C460D540308A4B4878181D2ECB82FBED648C292D1AAFF87AF82D8258EF1D6
096C17624E97F8035582667799D7B99A1DB2A7E90EFB9D80F96B6A10D7D5EFF8
F0EA992128AE3DA845EA4E081D63D6327DD36287EC0226663360C910CBA51D8E
FE85A10F8E11F72D917F2828CE535DA2D0F052EDF14B2739FDF13EEBD103E038
CAC430E4350E4C3DC89D7892553730E36963118A600F83AF3F1902CB9FEDC0DC
D19B1B84B187F02003C375DA26BB94765520A3577B7F8EA6A023E98ED9BDD171
A3100D4D69D8A56566C0FA3EAC58EA3DFD72AC4C6B37FEF23A47B5A4038752E7
23288E6C564AD4EE44849F4021CA494EF6C2CE64BB429C542FF8A582AC2F46B4
9774F8273B5E98BD87426D2BDDD57353577CB01877424769AD11C53BED092CD4
C17A17A440688BD0D8601006F8ECC930DEECC72781066085C13AF52E333C74DC
A40F5946D9266E07CBF681164FEAF332C19BB64216044111D831971C4BA33E9F
D206A7B97E69443C97C3E77BE3301FB1AB1AE471287800936B812CBED8EC4F3C
2BFB4A657CCE94D311F51A49326E93EBE93FC663854E5A10F279A1233DC0BFD4
8266D36F25E6CCF2C1077BCE4BD8D3E30A63243E9F7DBE231C3DE32B82A38A9B
AC3DDDC4518306F16F8D4FFAE416ADDD1143EF22050DB2B4FDEC05248E9B0C24
15CBB4E191E98FB776EBEAEE6AD93C48739C83BEDAB386C9B13FC9996591ECBE
650E4B891AC1B4759C59A2CB5645DE059368B5AFEB6756F386A4C97262724BC9
A9A578B3BC9DB5CB1B44B1BD592D46D4E132E114B22AE36B9518755CA146091A
2013ECF11A1309FA7429F55662F9A92B658455FB81B32D8ACDD62EFE4D8F7FF4
29F96DFECFD64AD6E434D3141C0E9D4C0DCAA264EA71AA8654D8BD673F79CC1D
C21BA9618981CF81AAEE413D94ADB6DC8338098846BCB32ABDF6423EC6C03F4A
6F2F81BA6E4B03157AF42FDB1FEEFD1F89F1FFF83FDB4A95D61ABACA8EE7F72E
226760023EF06CF72D76D460EF34B60223FC6170F5DD66C147D2AE745FF5F02C
C49ED6DC4918B6879A73B9D49874E01F688EF5C892966ADC9AC306D01B6E24DB
B2CFFBEF254F35662A90683655A668931A02B1E2F133686110E9F1D25C93C6DF
9E1FD89F2F8CEEB870C409ED13E78B4C9B408E6AF76CF5FE7F2BAAADC3900F14
F17E59A758BD72AA88436F30764344CCF1B9E47D39540E4B6477A00B8EF6B739
5C7F900C2AC7BDEF8FB9D4574698BC8D4E3748AE0F9ECF7515A0F23D18B36684
FFE56A55E18E0B8D3FF671F9696E5F3C75320B4A2FB4C322929A703A21EE0CF0
830F466B96EA9E36FFFA2C3875C789CFA650EA7672135029F184C1F36006E4DD
60A05F12E3C18662C3C134AD613F7FA4217D853967AF5E3659D9628533AE56E6
57366AD508870C6C620861E751C779512C404ED48FF12A47C8FFB13F08DC1365
5D7241194A25388FEDA8896EDEBBC68002828A0B8F207A9F33AD1BCC21592261
A181AF18BCA651117D0A2A97CCFC80A69C974FB2CCB36DD6AEF3EB4C95E70F7B
D257B07D5381A661CECE3113D451C4B6C987C1883B80126A329268C63F84AE09
FF5C7902A238A22607F158FFE415CEA24700EBEB709BB571CBD6D51C00B34926
8DE077F06EC640A10D44BF63153E8EDD8BD7A5C64D66319AE0C7A13706DB49D8
C024312CA55295BF0D2089B505B5F326EAE8E9B1C3E60150E61B8B33CC90FBD8
67BEB880FA51868F644F5A768CB488A01868F8F5FC71B44F27AD672FADAEDB33
C013CBF06EDF7DF34EAFE36D3104DADE5D30F0B4B18CA8085F829B9F9E0B4E36
0140E2EF8AE58083EA877039996A34BE0B0F5BFA99D987E84774F6B4620EFBD9
8A082494CBC866E41065DEBF0051EE2C4BEB23ED11735416818D99B6F3E211E7
60F8C31A12F21A8962CC71446D91566F85A386DC278C8F7253779EB9D278001C
976FCEB9172BDC88F35057F812CC5C46C37F9808580669FA523C31DF75579CD2
4CCB5A7CE967062F19345B9C2B7088391D056D55AD5797D4267092C026DC41AF
E6EFF0FB86147C048B07CFE453C8070B0CC35C26E83223783CB7962E327817D3
BA0E2BB98DBC10417A546A8A3A0BD40D8DAB7BC810C8F15E1EC3EF927AD2F590
8E08BECB3ACFC6C2EB2F8DB5E31465076BC484450D76D5E9849D141216E3200A
EF170495FC898F22ECC3CBC8498CF1AED2677AA5D46639668C6CD6A238DC736A
95C247199D4BD0DC5A651DA6117D663E34E5A7DE2D3AD36415EE85075450F5CD
A6789A50609824588E505F6A89ACA2C20F6C0EC6E34FD0A4011808FF1EB14079
1D557DA31A46FD5F2E3C4925F71065BCB57954C4CB5A9A42C6CF6EA0D80B6B4F
BD6A54D9F5E37DBB6D1EFFFF10EF913F89FE8C0751154A30ED82E6AF4E94FF0D
5DBD3054E122389437002D5B744D18DFD9C56658965231411F110FCC1ED63C1C
C2563F12E20CD44F485912FF174540468AB1C1C5BB7A3F886E4AA3DD235D36BB
D540E737EAE242036E4AA12200C08C4EF062A55E990D90A532C82ACE33BDC0E2
A514CC070A3326C12523D372BEA69688A21D6EAF601ED4810F096CFC607364D5
50859170B4CA391D713F3A00A3687590FA5D97C24717BA12809E9C4391CD5687
9C4BDC972A2289512672FDA487FC97405BE2A5326F2E6F6111C5CF9100A2D369
E9DD9EDE9AC14E4FD09695BBDBD7994FDCE3EC4728C176E3F39C3548B5A2BE25
266587B52BDA27C708879EA8034AF404EA960F5A6CBED5C40B669F0DCB32D228
07D9C7A87F8930DA173B4CA5A62F687C9C0E26FC511278D2F84924B838AE79C6
9BCEAA8B52D4B924F9D6B01AB1918DD5A633DF53752834D21FBC364CA33BD797
0142AE10B7C80C03876B0FD46A58E2F77994E36E7F3CB0F128274D559A030470
5FE55B6F3464D4102FA9828E503D2F5760E144A976F44BAB92677CBC000F5AD3
72CD4F290E84611217ECA70B2B6B8185A967AB189684ADBEFE40D6071C2D18A0
B90819774D5C750B2D284D287BF3AC834D9B77849C378DB01F63F4F0F338C335
D84920C033EBB5F7FFA3A31A5A1E03E1F86A012BF7F7EF76DFE5D49BF413AA1A
5444502CCF78BFF25AF950361289AE9797133BDDE8B5F108D026D5F9B02006E1
307898437127CEDFC2C10F778106BB2470BC1B9DE0BB17ED74243FE51E6BAD89
1BC2CCACF0C9E1BC50362DAA863328670D822220DF701049E106F04530708DD1
EC3E8DB9A763F1BA3386E051BBC1C7FB8B5CBE3D295850C64A416DA82241BDB9
F204686895F1936FFA3A8CD3BA7E49E580D08E4430665EDCEC71DC39584BC7A6
769C6C5CC921305B45B1B8FFDE2A09CF6301F485C8B7DC2A180E28C29F0EA241
96A54A0EDF39BB8999E09B53EC94690B1148A5CC5C9F4F3BE200877997AEFFCC
4145600D21E37BB2DF1E3AAF5C41EBE3D6131603EF1AD7BB91A3C9304109D6F3
AB7D037E509C5DA4A954235A57F0F59F83932514018792CA5E16B365ED83C24C
44A68CC2E0C5F7BF6CDE17FB65DE01DAFB33F78AA2C3B1EECD4C5310AA943605
3E2BD0287A3C313E1F43F07D3DDDDE40C2ABB2B73DE13EEBA9C102C40045692E
E3B52643A0DE3E6721F54F0F627777BB77AACF3E1EC27CCEE5476B68B436B63F
00576F77D4DA319B068FFB6060AAF40EB540CD50D1A4AAFAD7BD135D366B6614
096E71FE02A94198A79740114864AF6B9D3EA5F9A365966424B74C146E164A72
E63C0F0386C7635309B468D8FB5D2F63E01AEA9875DEFD362A8930141B4BBE3E
2ED7D06BE5587C3D08EB14BD0620FFBE254FC47E726FFAAE2C2A15063C65B563
6B671CC58E7B6F9E6717A6A3E963595AEE2152145DF46035B15C340FEE679C25
24FA0A0192DBC4C4BF0DFE03973D1CD13A9D22D14C37AA9EACFF7CC81EF9860D
5DA595CBB0BC07A0FA8E38ACEB99E18BD1B2662AB55A70BE52BBD2EF7F0B0E78
3C7A56426E4FA821BFD8644501E923A3F52C9F27BDBB6E6BBAB0E40A2714E27F
1EA5A60DEDB7ABA1F615AF7AD898C9CCA5105A687B74DAC1CE89B91645B51F65
8DAA7AB223DF5A0821624DFBA69D284583716D8AD31335BF56C3BFA9A6819731
D70E62616DE4997BA6DD48A3DFFABC322A2A3F62BF60D6F2439E2D50DCBD1337
02ADAE6AFBD7842578CC7D5D745F0DE62C03875F0D15A39001FE2D8C879D563E
FDAEF6192CD15484C140669D81DF5C6F78E428F8061774E99961273EB9E4CEAD
D0F9382CF18147282729BF9FAE0CE3CDA5671A9D3CB95462D08DE0F7AFE59C92
2443FC26FF50A7BE430CF34B9732C738C6F23CF4F34A9CED84942968B40D4D87
1D7B504D5DE99814AD4A0798392364FE0BEFFF89A5599AA6DB1858D9FC840AB5
3EEBD3C417E5C5F2E7B2B58E3FB6DA5D4E992F9D944EDB02F6B9D49C876062C1
9E602D585BD621E5EFD3BEC41F18FB8C6D2B457E60950E1CEE7512B60C5915CA
0DE369A0D7112BFF6CAE56CB9BF699D814AFADFF0E32780B9B5BA9968923919D
295CD3DA706866C1DDA2DC5573FF5275FE9BFE034BA22E904A0ADB007A59D1EE
CE54FBC7B5A887C3478EAEE8720CC128DCA9B08433DC61135BA3E5397F55DF84
4F9EFE1E760903FCFAEE61D3FDA49A37473D1979C3B59B75C3064E8F923B4DEC
623780C0AF99AD2244654E2C95B54A088536335F3D42DC95F29056A0E8972D5E
0FEDE1268161B9A03DDE35EBF847285162043549D78E2B9DF1ECC680AF5AEFC6
A6078FE0F01E28499677DF134EF6C6B454C14B43489E50AE585BA475D84C286D
85B6CDF0F348A9853F0BE3BE81BA4BF722D8207FD68296B4ABB049ECEC181FEE
5B3DDC4DF62DC6AC474AC2F11808940D6E9AFAA51EF6C23B0D58FA4F5EA4FF63
763A313D33638C065EF056061AFBCE5714B7F41070DCF646C5E9D3871CD89B16
1E015DD55785E24919FD9C0F36018BDE9C7D0ED36ABE19A3BBC38FF7E7557667
2480A7EA057D586AF5A8410A54FC2AC0DC4734DC607452CAAB956FA3C7626C70
B16A053495F06DFD130D6EF52F14202317FC40F6C9E49FEBC2B0D1946807B482
F40362CEC29A918CCB798C30DA069C1E3F37096918072A9CF3DEE42A9546DE5E
AD908F2FC9BABDFA3259BD990108D3846FE48A7B088541F51D307AA464BEE9A2
E77B7716388AA987B266D62BA5841AF5ACDCB7E3FCF1C7979128EDD4F9537C4F
0E870DE54D18F8E1B355D06AB5EF9082705FB9BCCC4C76CB01A877C8242EEEDD
944E827690BF7B6E45B4F8674A6FA270F14B4944F2764516044111D831971C4B
A33E9FD206A7B97E69443C912E3B7F3778C719DC5993EE914DDAC7360F9F7F3B
D2753E2EE0200B7448CDEC0E7D7226A6950C452FDADCA224EA54452D3B835ABC
68EE4F0A91D2B720BB2C5A1C9670B149B6CB1AF0CDE7B27ED2707252504B6C74
D1B1215B978BD23933FC4EDEAAD832E893C09C8751CC215ADA36853DB0DE80DB
56E28E37B8A1E5EA3A48801CC51BE0EF9EA57397A07F5CB058FDFBACABB88597
81A88518AD8A625AA2C68065322D9AAE2D559ABF7A2ED3A1DF2C2B785C0BF8A1
66071BE79D45CFE4070F971EBE827C4A232B26EC3FE4730D3AC8B2C9AF7CAC8D
E97F6E7AE9B17330C26EFDF56783C46659FA7731F90860A28D3D50BA4D80AC6A
8C0C6594B95B3D8EDC0ACD268DE68310F453DE243664884B97EB5F467C93A2FC
7F82A0B3682C1D7B0CA2468EEB8BAC342210D5B0ED5550C4B54109A1B5D36964
B8C902B9229BFDD8109322DF0CCE8FE0405D523BD800A0AC79A5038A6C4DC880
7DF5F6C137D67B87CB0EB1B008704E7D438DF32AB32B6FD323FB5A0D23656043
72518EEA9EBDB9F5C00CD1E96EC3028ADD17368F5DDEC4C3155610F279A1233D
C0BFD48266D36F25E6CCF2C1077DA65079E430CFFFEE1E8B31F501B401651FBC
69B8A862F626C2D7500E5926AA784E5659F3651C49C701002EC3BA0E0D2491AB
13FCB507AB79FD0421C5C06B9D593027CD383CD1D23D5C8E17CF1B43A482C44F
E52E57AF48D3EF676901564423F1F8A3AB5AEC5A549EA5707353F50EA6E53F14
0863D5E14C5C8B11895AC0E79C0B211C49E02E612E74DA5ED29F290C37D03C0E
FFE15D0917BB65CDC0A3944782C7325EE9F9CCD6A1C47D5672565EBC80E62167
4AAC54ACC206DC00F5B58A70D546BDE9925575689D8E2E250E98F4380236E11A
F484E2FD67C1EFF5F8C866CD70456AF84A690F56A09A84EBB1CED5515C36F27B
640C3F74813A6BAA4F7CF2CC57A84CFBA77156ECFCF5A1BE72E976F99070AD3F
CD958C1EC54B3994EA142AA56F85CB57613FA7FCCCC6146E7B483AA7CD13A91E
54A9DE89F3B3D95ED3FBB8E563C2CC64E2DA3631AB809AE250F5CB3A3B7622E5
A704402F59B2EFB224107BCE6BEF04EEFE5642999E4D1F915D1E50DED6676F8C
9E0B72B4B04910280177392F60E826BC6C58F3065D9E77A3EBF78A6EC932D285
3045D5A283D7A2C7CAA60C3A169EF901C22B961DEA4E2EEBE0E82A93C1252D40
5416BFE604AE481768A6EE541B1B713E91C363CC7555F87D68D16395D93479B3
BD866A4BF33913DEB54B4BA33E07F541869E3AE9CC7B6087C9F370E2431E28C3
2C40312E1DE72D93AFD1C8E2635A5E428AB33E24E81341EF7F1354830444ACC1
584CD6C80A8D3A743D5E41F803480DC5DCC0AB2D5635020D26B524DACDFE0D8D
CF2F1CC1C4EB4C4A1E09D4671353EAEB628E09FF7F84DFAD113A95903A8B5534
0E2A24629A3BB1A0D986D709320936FF6EDA26F8D27A46C3059A2B09811BA35F
EA5AF653080385EF4FF32B384B76574A5049D9216272F667546E7A68A149DF50
5817CF5FCBEB7DD5871EDA1C1A7482861E697F1E4350DCA843AA863071A7B867
15E2BF7BADF8460CE3E09E63591F45AD67FE373F51F1A20DAD98F7031F952D51
0D9C27F31BB31ACFA0D49843E3085317CD8894097308A12DDDA2501C6655411A
4DF2DF658F42D355F21E147C50BB25BAEE68DDE0F4850D322DD2CFBA62ABF732
956F774C96204A513E6366951F097DB74D745DF4FFA1B21A4CCA8E6176D5CB36
C1F85204393280DDACCAC9FF20849F9E24D38A620464A7B47B4E1CEB70BC1215
D8933CBD0D3DEC9CAB1588E1268772307DC168E01E794A175ED80DB01F8ABF13
E7F9DF259D5063C71E277746202A33154C1A9FA36793CDAF2C98FBA727B8BCDB
C1AC8F4602882F2A971A09196EE70772CCF4E8199570C607CD0B4276B8626AE3
FEB4F127D094B167C7ECAD42D003077A32DA790FF3BF23A13C2B1B69EEB75950
F9106F2BA4081BF1F8FAC9AAB39662E6D137560A8363F8D0B481C660A273C72F
6ADC5EBE658F1F21B5FD9DC8599D4CA4234DB326ECE28D9E58369BD6AD8A7960
52070F4C578071A9635171C47A257EBC1FA6B40E10B77C81889061E66E5A4B12
63F02140AEA93FCF1A94F1D9A4D1598596C6DA2A53A8D6CAD2841A0B5BE40198
A40B7153D0ABD11466E365EFBABC7E8F324075510E71615FDFCC83492BD1EF5C
CF7A0A9DC7A072B2C6C6C29F3016A05F2D6E6652B75CC63C56562982F896DB93
8BA2630CF3C1487AE9581ABE2134C6CBCF30A76AFC77BF2FF7D096673DA4335D
5C0ABC397630DB93C6DE1577968D08D8FF4D70FD327E404897824D29264D53BB
B0BFD3A45CC95A2A968AA394F6856E50AFA11DA464682A11B0F05A4479B82E59
7F89C8F588F4056FDD0811B16F56669A201DA41C1DAFE3BF35FD6205E89A7B69
8F02D2EE6E86896E46E806A9B6AC519BD5B1F37745068B9BAD005532FC356639
C31922E94639D83826086A010C6BB0A23C81352C78F6379D071C08855EBD58F7
CB180FFBFF10C3007791A7D4D5C40B8B1DF3AD0B3A9058EE883CBDB2B0DE1B41
8B018FA483D443712ECCD5873C024E6D55513EC69B39510DE9BE5CB766038F54
11432722012038F780E642758A88330BE1812CA70C5C93445A62645202BA4A82
B004E3317869A3A9E6D3DE9636A134F638074B6D92C536995B673E238559E26F
468737E17BAD7FD443E2F1332166996593C9C96C4229682C31CB2F2AD8DD45AE
C240F75727906706EB0A0A3032DC61A439550DA44371E03273679879D248BD6F
164FD75FF8FDF2A266DB35F0C24D7F841AC0C94E554F886250F0A93337BBAB68
B085332C1458CDF05597C77FA0B7D5CB8978AFF45E499FC317CC5AF7A2A50D08
431DE4169636D2036E6BF336A40F984DDA415E8941B9B8B75E06DE8676875832
C57F9ECCF6D8C4AE897B111B3006F4A89AC8E9596533A7FE3340AD149BC63FFA
96CFD16DA5C80C170873C846C3E4D66AC8E2293681823129797EAB0C8DE4B800
20730ABBB5EF022BE875030723968C59ACB0E1BA116CAA9A4A703D2D5EA47B79
C7AF89B48201310A1C3CA4FE12EFCD8025E265E5BD69412F58378C19FDE5620D
E43159C90885474D7AB44F6BF5B4377DD1D5F4B3FF3EC321B95C3F599306D09F
177B936F372A0E29DDFFDD979CA08DF0D99C85A4D65DACF02E186BEFF0B21764
35029167C43D358874EB1F8FA3E9D2C070914CF1D522123EE215C8CE548D6873
25335F802BAA8E4148F46E284D2D0ED7F4BD1EA575AC436CD7F157B4E740A48F
5736E5050E91D6B2E132DF4A503CE50A42846FBAE99B7746E76D6E05C59F85F9
6D67CFC96918EF701EF8245485E212CC67DEDE8387701A841EF804130F4915CE
B43775445B4035029521DC9795DCB1984CF50E23B736A663FE2A7E377565943B
5C75F27022DC2A376DAEC68B4E0D81550CA4832AE6B5CE77B8B97B4C5435E157
9A02AF74678F6F37AE68B2086122E8C329CD0EE5FD19CC574F0A143365E95692
277B408827339FEB0EC1CF13C5A048866B49232D3FCA9DF9C99E14ABB25B0DF7
D14BA1DE272359095C5E3B8FF26D789AA3FAB7D013273C54345269F60A81DD13
18E8D0F525CB99D0362E104409038FD671DA74CDC1319CB259ECE368440D3960
4A75ABDC5896CA9DBD4F32E631D7DFA22A7851D5F0A45A2F52FEF51FBC63A43D
94AEC78C8EAEAFD6D844A002C229DB2496E5A9063D25F444073BAE842A9D6DF8
44B6DE154EBF87F1114A2F3CC32DC70C057D8D7279E1B0A35C80D965FD2EA2E4
621836C082372938350147C2A6074B263DFB6FE58624564DABAC8AE8C4517E9F
8322CE0099BE78AABBE501C2CBFAEB6FE80F69045705610F6394B36FB58D6D2A
A14D81F492A56954949ECA0B08B9E3601773287512DF274512A8C1B2EC4F639E
BBDF1DD4C9B00ED68C31548A4CBAC3DEA29236F27ED19170555F873FC06CF738
5E0FFB4BC952F906DB2F7FC8832357FC74A4CEF41F6D50B382206D188736BAE0
600667F168EEE9E59AE552B4FCBA3636383DE042A74D52687D4A1DCB21C99309
7AB0395A39429DFE6D0F6DD5A2C2EFF17709A067602E36663E6A6D00B2340CA8
592FA580E657B45CDC6B071B3DCFBDEE78F4CD3612AD8FAF8F814CC92D419B23
A5F2E0F5D07400242704788BFE9406C6E8D86B05706661604092FF161525A93E
A842C6E153CB0CEFD9C08E466E283361823797364E0E8FAD867FDE092F721AAE
7BE4EABA60D6BFAF89BC13AD16101FE07713BF81044E441CFCB2CE39DF2CE705
450500D24B96B7D34CDFAB5DBF99C8D3BDB5186886E2EB745DA3C77A7265F19C
2CB41ACAE23951C777BAC3513300EC4686A3AA00A08A82377CFD6AEC6B0A953E
54BFE053081D3F4F31A498A25DD2BBA07616AB4A90F437533D1951685918214A
94887DC1FC99CA5D83F9877306E4DCA49805DD0D4F8036EF04AFB8AC2D67D57D
F225F3022C99A15E21DB97DFF6B3E8F8A7D545DF938D5F1A52CE643868BE1A85
A7E4D60BE4168BCD057704C2F988CE1D06E2396476D43081E025EE45D7435E51
1E1EBEF2B13CAA49CF2ABB931E29E6ED6C21B67E76D0D3058DD78DCA293DE256
CBE60A8498455FA0B8ADDE5A66645D1AC0B3CB38A74D9AF23BE7CE02C0350F3C
3908A191468F77AFC2022271FE6205D65C1785F299C80FDAF32065A1182A8380
E74F8D4D4FAFE246FEF66C656BAA613EE8BC3A72ADA80F21B7A8BBAB1D4675D2
510F27032F05AF81BB3381FFFC6801FC793F24F175B4395881CCB9C478EAE5A0
A55DC4B7C0B5D6C66ACD695F68A16A7C1C2C1E47324D9326C985C5A557815F4E
6BBC36A3C72758F66340CD223B14F092509E874886351B64D1981C4BD43B3F39
9F388DEDB4F72778763AB0033FD0349475F7883C66C8F6AC5F1A9257E04DD44E
5484C4298F87C8258E7AE9AD8278CFBC0C8A20367D101A203C1FF017CA9DB7BA
B3BAB55EAE639A43AC6F9F7AD6B6E558F1E9C5DC4C9888AD0A3D85BBBAC38A2A
054B57FED270E9686C074CDB097FE571157F6EFE88FFAA20E0DCAA36935CAB6B
0B33BF674F7C42446D6CC0BBF97AE7C6C44258F75DE7FB37F9453916CD44133B
9125EC63E8487056687A3535F08ABE183ABC9579FCC75ED434A8172EF1133321
6405BF42848AEC42D2FD95001CF09AFBA1DD5DF63AEBC189EC9924E436EA5BA1
673CB9A07C919EC7477F04EE81E0102C57FA8C8CE3CC56B804C6685BB7D41605
C71BDD79CFD389B75740AD00E3C6A859B7751321605C3D0097DA6034E11511B5
0E1ED342A6705D973D3EC00E968E0E2A4BDE70BAE3A6D4EBF7A9FDE0E88D6C34
A91A1CB9421DE1DD7BC5D109B52B7093D785F4393E86CF5F957B2F2CD39BF76B
47EDEDCD5A24E346EBA2DCC6D6D02CBFF67018A565B949A243A214842D160623
350CD05418124E11ABFAF29103ABF419D2F80488457A845CE1C7210DC653373F
102E3952127ACE37771CDD2E1F5C85FB2AFABF0041AA0E53E426062C2126D89B
66BCC801CB9A768DFDF2934E015390C2BD601053E6A733E32EFB96B145DDD9AB
DAA2243A7E868879073C3358B53384BF91F67C7D52871C394E864C44A0CDDA6B
BE27E7CC3FE9452912322A325BEF16B1FD96C9E3819AD4B1F15E6143963E604D
3D09051726FF8F6FEA6DA337391A8D57A4721B05050720120A845ADFDE22C074
F93E08C31A40FCADEE4C76195E6C9E1300DD6CD67DBDF0888ACC234A8D1E103E
54963BBCE94F1DFBCB6331DB9DC558F5564CF27813856806B749EFCDB42A1705
60F53D0555035637753EDD2ED2F9D306F472C7921D42726505BE7FEAC5C0E505
C505D742D7E2DA01ECD37240A02D4ABDF4FE7C245CA0CA9F32EBE677F59162B8
C17E320FB920A87E0B65A45232F7476E49CE8428F7D6F70ADDE7933354537471
D1CE91B58412B12DEBBCF33A8765F3B7D2BBFF24C854105A92317BD40423941D
C7D1CAD5002674345F57C943BEA716555C15E6E8A88F7FF2AA4FB60C88E9DEAD
5432B5211C951416FE44ADC485B080A7AC7A3F8A6DC26510591341EE1E896557
C5D491FFD9C5ECAC8E55D91DA6E607ADAFE8D8460FC48FB39C8126488FA258BA
95528D0463541489F56666025C854B28533F3D64DEFAD1B7BA1EA2D3C022B868
2FB988983C6693F2E4D40721785F0035CC48A04DECCC0B18CF9AFD5364224F26
652D4FBDC766D6265DFB8EEB4E661CAC8E2DED941070C9009B2069F5147E1CBE
E0ED1FA0DC3C131E864E56E69AB3829EF067194797F48F688D20229F3C26E38E
C686F403289A43BE74D2392BC34590B3B8966AE8115CB5DAC2DE7F396FBF3A48
A2C59539E7A7BA4F4C863ABA5EE030DF5C1F7900F5ECE7D729F35FA2851C69A4
76E0C79CC01D629A4FF3EBFE04437063B314D8CE1117B262CB3939EDED398A87
5D69D2A98A44555E05DB91B5AD671E6B9D9F262B9DC85983F187021C8E52EBAE
D6F3CD7DE7CDFBD4F019E040E9B99577F01778E49D5F9AC84E4A4EFFE4DBFD4C
77DCFA28219043900D5D8285AF2F7054F130183F199A8B15B9D866871CEBE479
49816FE7A8F819D2B964482285FCFFCDA7DC7C5761C88C2704465C963D8EA383
3BE27127957ED14152B6B3B574B0CF6BBD32B42A7980B2E6677E45801856F521
8BE56092B6152A1315A744DF428CF467A21C4FE73875A04E1B00F52DDCA6FCBC
B858DD07D1A6F2D3892C5B03F9E08CF1DDEB3F14A2D64CC8B0498D0E8332A8DA
60C69C809F6F3D0C18295E3149CE5B97DA1E5D27161C10CA5470C0251C0A4002
7DB9407C9839C2DE308D3329788FAF24F2CA2280D82DE4420F29C0EC1F76DA6C
55089AF3D95E3D7DCAEEFD359AEE06232DA7EBC45D51B25D1A18AFED90B5B130
B21464C962FB52FAE7BB7B1AECBA92325205A5269028F3098BB61059518AFB37
4C06207028CDBE88CF7EDEC9BE917105F07880B030AD1E9BFF5F40ECD773C8F8
321B5E6C609E1FD66B020C2CBC5CF51F32E0F85CFB2EBF88A04C44E8337CC256
3BFAB75239B1CC483147A40805ABC7A4C297D1C38A5B644BD927FA382B741E44
83E9EFEC3EF629C97F9B0AA83F9098ACAF39E40989F3DF75E5BB6C0628856D13
B84F564F0CEBF1FB64242AF09D935796F32438CD2E81415BC7990E1E7FCD648D
6EB3D01A25B3C458CF68D5E20544FBC5EEF2AD7C077B868D4AD59D7F7E272C4E
7A3EB215C17570FB898EEE3A4373691772A120BEE77098BB898BAD2174974DCA
FCB0803869718BD527D782098E0174672BEA355DD62BA9B3980DD9A52F808A67
771AE20472A70366DDAB849FADC7309422B352307C450ED0E53DEA15DCA30C0F
4EB3C1F94C99B611EA12668E0CB23F539F30BFEDF094622AFB76B9BA31C2EFBE
8C0DB02FCBD606F980C391B45C8540A1FCC03479D998770A0D22B1CA713C4AA5
9579136CAAA1B40AC36DD171BE4B505A63372D6019D7518FDA16DB9280B9485C
4867644D32D0D915328E5A954DB42742E34C5E8D96DADA48ED0887350DBBB55E
63035B1205135EF22BFCDD2562349B108D36C9E49D5EBD09DD23B529A2AC4F83
9AE54A57B9E98643A1184DD39DA4097849FFE2F16653CA05B9E48DA84CBC1A5B
DDA7E70046225B69E531A7A863A358CEF68B2CB45B2391D097750AC8A9FF02DC
8B9339FE1C4A2C31FA7F4F895DCDB89E9E5F0DF1C1C4E282C2E396D1AE1ECADB
1CDD30E10C8D57B66AA63AA6D29BD675B6B768667FA983412FFF24E226861CC8
D8B3D49103B1F50BC186CE80D89E255428BB86DF23E000F5EA60538811356117
F75402E8973FACA2D15B2CF999CD03454B85AAAC167678027CCA634163AD2983
14B8B004B03C1B18B6A1FA8E8D9DD4C8E0FE813D368961F1E0847C93F1DE5B12
A9984AE235F4F872E63686B26529180AD4358CFA9455BBF8DF72BAC24D1B50A3
7EDC2FB7DF885A4EEF6B245114D8AB2FDC1653116426C21CD8AFBAE0CCAC10F3
9208B307B68E9176325C35A107FCFFE934EF231E0DCEB923709933492038D70D
18ABFCCAFB613461B1DE0AACEDA03657DE657F1B4185D5263AC2A476CABE522F
FE4F4F70FEA9D89B449AF52DA6F02752A477EC0A6AD1AA5C31F45C0142552830
91151B09AD6DFDF5952EF314CD09BD8EC600F9D86BC798E7F14046F0C6B06CAC
E3CC8854FDBAE143916DF63C0370DECB14F0F82DC342687C9AD47817CB07DF9A
671946533C387EAD9D0803AF385C2B07D52EAF47A05981041CD9A2E4B34092A6
0EA261BC87542C1FFFE3D432E27059BC1063DB3004BFD229E6A1E22554AF326D
DF840C0117567F9643D44B698177AE444A6789EF3B67F5D85CB1F181FCCAEE3A
DD83D5A1F8A30AA6902D29FE55D2CE6C0C8BA7EFF41A19CED5105CF08323AB61
DEBFE5EC703B8AD4C89E0264F23A15E8F0DC8DD4322565CECB33FB87C94E63BE
8B6A60299F6EAD48DBA338B09D1A96EDD6572AB368FD56FCA8E01BFB1F31DEB8
63C2EB3BB59F9F108D38344A09E83EE4007D4BA4F41CF79B2E5684ED6B5F75D4
42126F25D72085130DBE4EA625D62FCF477C051E9552A9F1B6FA1EBA25170CCA
FA571E8747B5533995A61099513D849AFDD1CBBC13F4DFCF8112AF8F0E31FDEB
27C8A79A6994B595FFE47F0EBE33B85D1285B001D05A489745E34FC40DE4F2C1
AB3B8A063D0C75AEF4964668AACE4BB93B1E736992E995B8A4F38FF8E7B60DC1
EC1FA649AE066DDC7393F29B4D933306793C754111044E6C82FEE3AE92BB8D37
A86E9E87108743A5A7482463B2CF79464F1C1BA072476BDB79DFBE4711606D89
77D05446AE2F2593456A200B4D535A3E164A5E8CE84989176E03F7688FEF21C6
EC47AA6007AB6D4A8ACC1EFD2962FDA3B64F7B9FD42CC72EEF0006DF81244EF3
759FA000DE0C7D2858A27AE93A723618BBD0D6783FE412A2681BE0218448DFED
F16CF2DA1B7481AAC4237462E514D9BEB4252D67C71832C682794282DF134115
A0E6F2ACD73EB49AA523E960C24035789325E154F5D2F76FB72D648F9570B7CD
EBDFBDFE9A4BD4153DCBB6F62AB55F4CA200DE783E1DCB21FA57E49434235A29
88B17383C10F6D932D15B52D21012A6EA10D9C8D749B424C8759EEC7FD5AC860
B450AE3B5031135418BCDA3FCD739C970589F8DA548FC6DF43BEE4D0F82DD825
5E36CF281731AE83D498EF50EA34098BDE4EF7C3C8661E76D6D260184CD54DCC
A57CA4B536D051525D76B03E578ABE923BD936E8B34DEAA74C0DF7A0546BF1A3
80959E4F8348015D9F65A159549CA27F14B2882F308F26B186F46BB50FE1E84D
D24E96A77509BE253165B00DDDE4781F16C892874E8051EFDE382C63058EE39C
4720A24E0820940AA7D1F3C2421F3310E19D7D53B00CB71AD972DCB2318DBE78
BF52614076A37EB854F7664F8BF537AE52A6F8BC86AAB8321072C9083AA5EBD2
3494969AF001F212755E12CB5923FE5E113737E410DD8CE224A5D1FE3D6B3907
E0DC79ED36AB70A262503F23E52D4A660DDBB1B4A79909D02E161B1383535A42
995E6CD5934301E2E93B7D0429494228A0572FC9E6C01BAD8A0D934A50F2D729
EA3C153F82E65409E677070AE4D07446A38898E8672D4E019AAC7C012B403FB0
55960E55374D43818C233123CB9E79CFFC76259E25860A33D592412BCB80AA73
07A1C978F414458F9A7EC07EB5F499B49062569853B2DE7BF1763002356DAA4A
2A0BEDB3C8EDC43B36B38E256682C68F3D27FF9DC05CD50E0F7F784626C9FE93
972DDCFDD6112A63E6B3BDEAEF21EE7A10A5C5191E9360FDBEA85A3FFD6A6FD6
D4F89C49A8D78CCDE4D31FF086B2116E77F528285718EF450F84B5A7C5AF3735
B7AEDFDC9D80E7BC03A0FA8ECC0E03779CD85B08941173C3F313F86C3510DB9F
77B0F7837B3C9224DAA335C73D13E6D04B42A45FC380F01B1BD0DABBFB0636B1
61906997F22B3CB19DEA8250A4433880E4D55DED9B3956B10340E57DA1A40DF9
8C734AC7A5694628DDE816580186A025EFAE36D59F0CF2DE5F44EE9D9AEE0055
CCA40C37B251270944DB64EEE0EB5716FC0887B882ABA85278A704AA73742EDA
06E5F3B5303979CE2F13423BC771C29C5837FFFBAD42F40083C2E412EE5E686C
90608F9FBFDF25D67799711048DD8CCE339CB2A6164846681764F342047FABD1
B30CD997DD370BE73E380B2267722B3C03F5CA9D62127553EE4FF454116C647C
6905ECABEFC3B3EEBFCBA37ED4C326409ED6BC9D7B0FE2DE1259910BA018B7F2
E135C5C8C4B32300C8F57D66EE0853438041EC5D25E1FBF105A5360F5A9A96DD
509043079D9CBBBF5524A91527B886E2531EAA668AD4347DFE6BDE69627D573F
28BB5CA5EC8D7B1654AD20D7CFB9527715350E85DD7823FC10CC7724715EAE29
2EE84D389A061873507E0D40E6E84E56F240DA7B9B09F68BCA197B036CDE73EC
C93630A5F4A543AFD433F9FF4BD4AD06D2EA3643DB3D3CC1341038C7067FF20F
D8AB4EF2D4AEB700DE11773B643154184BAE1DF839D1558AFA51A6FD25FF34C0
DA28108F6B7B7BFEAFAB5BD8DF5E66075EBBAD05DD85CE6EAB296CC68A8FF5F8
E38BD1B1E264FA9191134887A6B7BA74AF3D44C161286FD91A306DC28CD8CD9F
C70B27071EE14264D69597156D005B9D6AF7A4FB5F9773A8E963259AD8371295
C7175929A360FAE9527D0ADCC055264CF38070833FE36F3E9E75ED639A55B7C6
F81367BD91E07D49C8224435F88F91BF137075D0F6554A064C537794568090C1
8DEFB980018F369F47367E92E62A0EBAE828FADD77BFC2ECDC1E562DAF56640F
057914C795B0C7A30B9E18D86E1E99ECBD5080F51E88AB9444CA7C539201BEE0
64F7B85AA2C769DA4EDD9BFE4B18720A9F9D707C9D341698A75314282E477073
8AE8BB6CDDA0C7850A553C7C1FF72C1F2902DB13FC064E21ECCDA48A67802696
8855B882F70218CC1AD0B8B6A85165167249833F9B126527B4EC8C3D6FA213FC
10411BB058E7742BA1F674783A83F333D10A79178A7782299567E59CCD163B9B
747DC8D6569D95C72E4D6DE26CD2A677E9EF982F64F63A26C470C8F9697C18D6
CFB4919689DC056AF826360AECF7C4B350822CADB360B114853CA1BF1C54B28F
3591C1B05ACF3D46952F823A7B707949C20CAFEEA8423907E86E610C7F68A82B
ABF5E3912F700E44577A861C73E2849193A6B19EDC48F38B64B4567F289298A6
9F79F6981B190F26774B50E42DE97E4285B758500AC9FBEE678FB6BA165191DD
7EF614A43B6C1DE4531980F54777E37337534BE8EA33D99734C6894F4E5545FF
91A27912F60DE02E09F6EDD7742D36C4505D7719DA843D2BD5D5CD3A20D0D955
F69FD83BC1B568492FEC6A122D532233D18D088E387D5D7D631877B95B846CC8
D970ED51C10F44C8415FAFC12C5777A7641F41C515735F1718E0BB5606C2C611
97C0E5F915653979FE057FE48817E2A2F71DB6E33BD5AF7B51FD03EF0B5BEECD
0CDBA01C3098332FD8CE6C0A393AB1BDCB88B346031406FE22B8C7870AB7DDDB
21B45C06CAA73CB57E9CE5479BB1B3116F6B641F0046D5D2E17CE69CAFF9FFFB
BA69DB266F6B267474DC19B1C9B8C6D13BBEA19C21F22EAADFB2CE4805708A06
2E7443787AEA594FFC9DBC7DDCDA974372E8D917E62C98DFB04D17106F2CFE73
1360E35AD60073525038B0684FCB2D93942383B879671A87722307DD8BE84F65
F443B78CC755609DD1722EC190DA2FDCEE9D1F6066E42EE1FE5CD1142F86DF57
84B345CC06DBE98FE94C1C29E829F0ABB691A35827B3AB1D665114E1BCE6CC0F
392FAB24FC38BD3F413197512EC0AC82E34EBC85E320A3342266E5E7AB57CE82
396680D4869A820704823045E3A173379ACDE37643E89D5BE747EC78A6E9089A
4789357324B37D03EB40D0C455977DC606C0408222178A99B6812D23F30A0ED3
68865341771ABD5B999E1C4C27BA00260B1FE1A8F6FD29ECAFDB6CEAFCD1246C
DFD43BF1DECD1AE4FDF62A5C8A02F9CAB15CA0787871E5F568D86A801BCFE9AF
58090CC13DA30697FB05CC84F3DE09BBC8FD552B23677B408A3F4EC02D5CD155
CA516BE6DF50FBB44FF8C272FC1493F1A99DDB2E1FFE7A658D59F02B962930D3
D0C3AABCE7BF840A7A035F2CC5786FBDD96E9F2E802299F67905281285F890FF
78C7D0BC45E7BEA1A77EEF42F50F46D67A4DD781A368E75CCC7F452F5D5D945D
D0197A2B910BC0793E55132B9C12CB0ACDFB052E929369E76CD017089645873D
C47E51E1E4CAD49445BDF78DA021349902332707106BBB5D307960EBD641E3ED
F9A23A3CE8A015130AA6F155C0B7BDA85C4F093172B6E6AB43FD521E56E9D63B
EE26072F2956E50966DB333489D78D157D62845ABA5F20988816FE059DF239E4
A63A8B28624E68C7737BEB722016D94C4A341C7284AE75813B0EED37BBC077BA
859B9D7D602DBC212D00F0024809927AF3ADE81FE911EB8181BD4767284E64E9
168ACDF11151CE723849A7CC401CBF083B73ECB95F76A916909B7BD60A4610F0
C9525D8B416A47C595D1BA9F305FAF8947D4B7E269BDAA28CCBDDA9B6689D0BE
027DBB14B757DA81569D99AE69C60F7E720947950F2AFECF78C15AF1FB203F7D
B2EDCAA9235DE87B1FF6DBD93FF1876B779B8C0FA2E805CC1CD620E05BD7E445
EC96B5348B23A1B90AD2265BD4BDA8E050D6817286D0E5605C9DAE7D7B0A5F4D
E301C4F2F5A518F7ED28EAECB89C6B7E2213C6BB5DA31DFB05876A64386E82E0
7BA1E68C3458B69664BDA49501A37987C8D96836CF4F8AAB7BC810C8F15E1EC3
EF927AD2F5908E08BECB3F3757C26F1727A525F170429ECDA186071464EE07EE
92B8E3508481B52D49C5508F0ADAFFA72527A156F7C473A93D77EFBB4BEDF859
2C876A833F963F9FF7448C24984E8A8FD47C169E9613F54D2BBE6880B04214B8
3998C9BF47E95A3A3ECF40B308A82641F3636C82E7A73E07F541869E3AE9CC7B
6087C9F370E2431E28C32E23EF1FF295C9CD39D97DF78A991A8AA43640ABAF6B
727F81F2FFB789F812D0565F4BC740AEF26EFE447E2C67B9ABD3F1A95D166B03
A6AE4FB10DF8E6369EF7324E8432AFE4350D6EDCCFB5270EE9D90307B24D123F
8614D287BA95FF634B6F97BC59A46970AF16EB8A77F9298A753B418B75F35E0E
6F37FC4E9EEC8EDC1A4916452575C7B3F0707170BEF0615D7AC52C9370E6FF77
1E2E02319BA2FD01818F646867E39C0E1A56B6CC8BF83E59BD8C3A6A06663968
34563E5F5EF367674E211053223EDC6283E6EB75876372A7FC1B9DA7577EBDA8
0080E3B3FC1061920ABB00E33DFD17F6080B0059C9F100935371CB9F5B6CA96E
0F96C1CFFFB10EB538FC6B5DA3E134B4D81DD5F7709805E515CAAA1A3BE3D924
CFD804CB11C48B6729F741724E8D187C527B4EA23ABBB08B2CA7A102F1B5560E
E78CDB3C227A0F56894380FFBEA3ECFF6EB5A5B63778265C8DE7A3B70D18C784
AE96F5F4170785B52E362B8936AFF4661AF7F6869FC5A368C75E39517F799EE8
F5CF49F3E712EC33B1DCEBC465D8997EB80E99B8E6045467FC5DA356DFF298F0
E2BF9E46CBE6493F74DD0AB5E6243B2801FE685033C7E1D82DD51B28CDD8CB3C
FC5F1FFE84C21560E71E1FC3AD5CE950BC17220CEA214B17F2986A32BAF94066
A86DD16E0C2F20CBDB54045913A7611BB5F97B02137183B2801BDA1287830713
53C9B4A2CF19A4AC6ED02EABF892286EF2D2D1E090052B01027898E2B6123189
67A925D60335FC11ED1136542FE9D25BB2325A85E576AAA57FFD40760BDBCE49
5934A1E8BE33E47388FD4A3C65E04F45CFA1B7BFC288A5643FD07D8F6E3727E5
A2FACF4539F038B8A0B187E5BBDEF33A828FCC3A68DAA929C6AC84D77324E56E
2922F0C15E03E2D8838778B46A1AE8187A5FF3E79822D2E558771160CF7D5B4C
1DF1F410B1B4B878CA1766237587C2DAA253671BC717F41E5F9E3051AA88E9AC
2AEB8E64D3EA95FA22EB08C999AFEDE6F666CE4792DD4D2F2E666E4453B5C148
73FC666E85792C32D47DBCDC455D4F43B2CDD0ED4E2FB30B0A92E21862227F44
C00825AC355CD86B964A99E4F7CDF9C65F94E887C1E8E92C01FE6E9CAFF32E35
71480D1A180C1B7BE2A1A8252DFCCE399B193DD44BD3B62424D22CB220A1B212
E808F397E55282E2BEC8CFEB79343439F088F7DC81C6CA227DC4E6C0A09369D0
CF2BCAD734EFC0B94C4A58600D51FB4D89FA797068AB89E3FF44176BFD7625B8
0223C231FE14896CC19E2DB36569E76F35E6521018F245F33A42CF224F327CCE
B361EBD2DE6C3C9EC85EB4131305F467878052E009E0E1AF6E8F5254C42DE6FF
F8AC8683DD62ED727126F236C7905F999F80FBA3B3EFB7C7868BA8C2224C7283
26ACE6F0E951720045CCE64066306B98AED8E8A2C89898F7DFE1221A13005DAF
108ED84B38AE432E26D07AEA271F903D7E5E6EAAF5A11F36EF005402F6DAA9AB
E6FAD20E8C5FDC68ECA6191A51723300EA98739492C91EE775E06E20F02472FE
B6AEB27F89F410C8CBAA8F91583D3768019396B30F35A6642CEA332147C7E17F
251003DC72007CA7E37AC4A748E14918F199695DE1BBFAAF0EEEF23D62481192
391FACD2C83ED9958F912438B399848B8F0A69BC0BEBC2844C4A32DA45582BD7
242E8B08CE13002750C90490B8BFFCE075F908F608B33D7969A92EB33FF10538
11889EE4553C8610D9DF313899BFA35D6CD79D9778E430E055360A1EFC56EF1B
AFC59D54D9CBA8E6C3D234B5C1E08D5947A04535834C2EDDDCF4D8ADAB1CCF61
206D646B8173DF3577313FC232B475D121D5A043B8F16E9C29B85979E878C002
47A227893C488185343BDFA6057AAA52C5AA0E215357F7DC728D263C9A3578EF
055D4178ACA985CA83885CB990B37E0E0DDA6646AB9194B1C72B4C2580BDA66B
52594D5820D99C7C2C98C0799EACB30DDB4D78819A6AFE696782CCC76E51F002
FEC8D337C4EC1ED02BFD2C4D9934AFAFDD9992C7ED36E3DB43430F9DA6CBB596
F934D0D7356F6E365562E7FBD86CA8D87CB293347A95C4C462D94D7EE9B48621
EFED8DB5E710CD843327B1F360133AB8050418585ED5344F8FA02DD9C251BDF7
1BAD45577653C1885ED449FE0E2E730F5CE52C1FF364881F804374DC1037DA5A
7D16E5014F6DE2A9804146212D53C88A3067EED8B44F8F931526646F489ABC1D
32360ECFB378E91E69CBE30FC448DA433D326B557BF65D17A3D7C14E423561B5
A81089F623BF31C5537144CA3F6E7E95818AFD1E7BF1B2E2DF13C4B64C9BFD51
0200C2E03FA0515DA030D6704BCBE14EA5296654634482491DC4993828501D79
F0180D81459D660CAB4AB3879DC6E8517D66FBF7E233D8A98ABDADE1C8034DFE
C90D3E1942C400E928AB2590EBDF90624BB22393DDB90DF1D8545651EA776D54
97AED01BE45C36BC39D9C773F95AFB0C215B9E38FB987C168592A085707414BB
4E6E5ABDE1C9C4D9CB1C59F0B7FAD51EF554621FA6B22F0346F9E6D4462EF7D0
4E16D48DBC9E21BC24DF15E8660B29B60E86360C270400B8444B8DCAC484E17F
4D8771BFC6109E6D709951694F86DA3D941C78AFDAADDBCB87A9A2A439BB6FC1
4BD2B14E6E57867D92ED438751A35FCC2C429C15C62C45A26B4676D186FD7792
1C79F575FA363899F7383E534EF6C936DF6ED77EFB07C3DA6F036D64294F355C
15D20FAAC79540CDCD5CE9F800DA7293E22A7F0029683207E4F685D084DFB3DC
84917CA80C31C39746362C091E9FA1E349FE97858C042BB926A38606736C3203
03960FB94473DC887F4770006BF864C419A8EDB584FD784D9CDFFF8C06F11D03
2370A8C3599C2D0FE7A8833905E2E9E11C6F6938DB2D6C3E62D4026AFAFE85FA
C8C63664262B0DF046ABCA041B9C52065ED9868BD921AE2E19E59DD6207BFE60
5C89ADD1C81D68908B09459A5B921077AA21223B6185C854F77FCADE8149571F
EFBC840BD375490CA2C9AA6351C2AF25E5EBA344D34F8CDFBC3BF32EBB01BD6C
5A4A430B0CF7FD64C0DBA064ADFCE9115EEDBE11EBCC702DED26E5A2583C8C7A
4D020A8EEC2D80FC67A306D5B3176942BAE47F67EBB46550B21E66E656235F28
0A1EA4487483C92E626F78D80C2E8F4F3D250BFE64BCB927D249F31CA82B278A
73BCD044A7886164FFD25ED2DC8487D2C9BB5B332AD8F83F6F3A654567D303E3
7C6624E2DC8E699CC06CC8F3C38638084F8F4F7DA8B4AEEED9236E90B0FFFF26
46E94179D30EBDF73A25B991A8B72034F074E5349F5A5A7C1A431486EF03E082
C5C6A9F2D1D2953316A29B2FA6EED0779DCD39D9849EED96CBAA4FA55B371E38
8ABF0767E7BE27FA203AB4536C63E84658AF051D64CB5483D7F5152320864441
6D6FA5F5C34F34EFB31E78CB9AB786A3D5D0C5AC21EE3BC0C35A5FE5812DB89B
040F3F3EB3B2321EA6B5EB4E47F9953B6EC5E898E6427C1749969DAF3B72CFD1
F579F4A62E705B6DD6EFA5134D9DAFFA3EBF6C9D6B4E9B7DF27DC66C4E39C89F
CA59C39D77191124E694352684D49061E9685FE4ED8642DC7AC4D4B4C56E14EF
F907A412323CC89CF70586E1EB0A67FA23F60759FECFDF1379E61C1431AC809D
41CA038F424C8050CD4CFB1024F6A3D45A586F01FE26B311ECDE945CEAD81262
3B5135A8DBAD9307C92E60FBEFB6AE07954324B438D1897CC784AE3944572D47
60DFBE929FECAF840B044BC078EB8BF412CA3035EF9C2C397740F2460AF1F8C5
FE0228634C1A1B606249BCE54D2BD2F83E49F89575D8E0C96165F1DDAAFE732B
4D2F88F3AED9A04758697F62F885FAC00BB53DC0400730FCDEFEA475AEC43F3B
5B4A943EA52291AD5033D0ED550DA2D59EFC52B127DF2005D1CD18F7FE5FA60F
8F48E2604F7775BCC1B2CB652A19A12E5FF3872C95854381713C7D6337F90E12
0E8C40653C185A5FF9429D6EC687298C696722D1D560731435DCD24D67DED3C5
ADF52EEDE57EF3EAC944D9716215A8495C2305C7DA7391F7F20453206FC27D3F
8F07AD8BD835221447A44807B5D89D0FE464663AF7A14D567B31E44A2FE772A0
4DABBE688CB3E3CD0E38A0B2F3EB0537C6F4EA0CB05C7A5593BD63E136A9574B
0B13B26BFA8A80D38254C5CDA311CCA88C2CD5D6A973C98D881306BAA47B6361
BC0D3E8832BAA635ED3F627C7C46900C1CFD1FCBED2C336C627BABC4737FC72F
8F4F6BB7D73551EE33D65755488B4CBF91F7B8E3AC3C742EB2F38C4CACFF62DE
C1B5EC2D19DDBEAE493FEDD3FBEE6667EDA6AF0524CFE69FC6B5A5CE885D44BE
B9BA77820093FEAB6790870ED488751B41F348377A602A2D5CEE4A409E83188D
1E68E6A1409352766D80E77B1270019E0EF57F31E9F13B97142CDCE9FF9F84EE
AD17B366D678E61C6176FEC09C9731083C92531F1A6B012114F6CCA157BCFC44
BB9907B53AB9878E4E2B20BC3A97D410DEF1811E7B216E54D84C49B176746A94
A779EE401A84FAC2C8E46642D95E4D5E8DE9927E16E5582217693A50F8107E08
578D867F27B3A1A3F8075FC5AC38C955D3C0248A51F1438B75445A0099EA061A
38D210B5402FE8E75F9578D882ABFC573800F22F5DF202D9F4FB0387D88B37C9
97A434CDF2A2ACCAE877C3B56CB5A29F919EDF2A9F5B8A6B538B4F5CB6DA9FA3
FFBB481C9AFF1455A0338E243F088CAB19E90AFCF255DD1608C290E96E1F7DBA
F1073BCDB394EFC0A339FD73E106F934BEEEE0AFF544347EB2B0809E791B8891
729057FB1DACEF08FEAEA896271A3B6DB3E7D2AE858A1B99803754E210AB2A3A
44B1EB69C07BCBE3A853130C1166EE98EFF913106E5F0960352C75105A122275
1EDFBB3E8B72914A2874A0CECCAC565C16B53C7C5E1A202F5363892C719FB108
6687E740D8095E63F70CAAEF65D1CDE3764707B179234D8B851D3FE8B9ED08AC
E959392226C2D9AF996CB951814A5B86E29930A1DABF50612543FE5EECAA1BE6
F9610F0F1A900F658E65A28FCA65062E70F4703BFFF9F0BDE58F5A87FEBA30C9
F69F91F3313696F1B71E6624B93EC6EE9F5D1BD504FC7BB2C643439EFCCB1509
805A6D264C08F4AFE461E5A2EF030046700B475E00D41C11DA6BC5FEEC590708
6772F4BE1CBA7691480D037E31301789EBB8C1A498B33CA161CE60800A699DA3
0D0792D7AF6AC6C46C334675B284F6AC8013958B75DBD0350614D6325319167D
762B179B038D83C173FD9FA614F46FED6BEE4846DD5B7AC8BECC962105575D61
683862D5E4C2CF8816C48C592E158DACD4D9005B983760C79C08C12658347797
055F56769DE68B5A430916F45E36D0FBB705DB004CDA8B6720D556E3AAE3C6CD
20FC30E38AAE46D5DD486A748A986B66DDC9D43486DF7BBC05B79A1E96F4F6F2
C87EEC6E8B4CA921C1AAFC0EC3E24C38BF6D64E9C25F44BC5F8829643C98362E
5DFF8D686C4C38E3197D40F870E4CDDA7BDCD03276CC54E1C9739E059F7BBC7E
CEFE00FFCE6986ABBDD4EF0DF8D274A5B7A04B57F2471D35334E8CC56D71647B
8F6DE3CA2AF29DC60C5F34CF57813425CE4207DEC332AC167E282459BDAF6F4C
56D862C6AF80DF534A4524925A70ED96BE884D45BDCAB050C0A804B979AA58F8
8720EF63F0A79056762BF03791C08E671CDD80A6E1F111055B0F12B011A11D2B
AD116296FC9793FBEBAE830F1D07BBAB16646DEDBB5A1802F984D0565C010357
9ECA08503641E0F8A3E73149B93ED824FE71F9A1EFB12FB407D48CA7D551ECED
B1A12681B69F159BEE8D81B2EA2D5BA9071EB6D07FB6C4BE1C39B7DAE26457D7
FC9B3411C93C4125022586A6F0C7AF659DF5551EEB0EF60B98DCD8F7DA254922
33A19F5B82EC8B89271D9A6FA754A922516A672CE969C67237F50544122F3662
354376F998E255DECD92AEAF588BFC9C93C537BDE3A1A9A4C90286999ADC8E98
4DBD7CB80367A9A94391AB4330B37D4E7E2102D867A3C279AC82A99CA3E4FEB3
1389910EA623CA02C2C98D02ACF9ECCD3F695B524A6C07661FE6953BB4C0EEF8
05F7A0245CD980E37DFA97082369335AAA53A4D891DD3CA40653D53E0B99B14D
CA4C4FB6B8A5AEEF3AF8D386610BFE936F0B0598885B9329DF559EE4F73496FD
D2B58F8B140D4318CC96F342B9FC64C13F362C87214B6C5205D7B59E07CE52C6
272165A2DBA4978322F3B706D42300C96FED259F072ED2B94AC84E717DC7612D
6EC842A956F9884A445C5EB2A440F4EE508D19B02F0212351ADEA2BCE9E77D46
8687BDB04660DA44963FE1431EBB1008D8BC9DAF2F5F03B543C622B160945F93
BA6F1215EA2DFFE4D82E81D40C01B8A20B93FD8A6C6511665267B075C5D91DDA
59887EB3CB5B2F30C6DF5FA2097AB81E6BA7773ECD6BB3A1C385BA3D8B1E0559
56F58AE19E3450E72C99406ECE59389BC2D4AD8C286AE8F24B4C1AC770D3C56A
CF5453428C436E1FE72DCE5CDDEEC7E3AECC3014C83778AF4536437E0D0ED8BA
969434059B22D56D2125766949D367054156B4A6E50FDE64083AA7CD0A8F3C0E
EA6E6D9A003B228F5BB17AD84B0C414D416641505EEF70B3490F7EF3C2F6C7C7
E6111B92133CC1490D70C0E83B6D78E41EF1475C418739003766FB193DD7B97D
F0F9A11121F93EE6888B767D8AA14EC60598548762C14482191756BB8A582741
ACE718440F9AC620FFF89CFB7FCB1955C7DC8939FF65CD8674717E87E6481701
FD1E1B8705C512C0131919958E99FEDC664150D66C7614AAD9EA02AF731188E3
CA020ED7EF071525CDB93880A24EAEADF171B5C072F4E6AF262A9B2399249262
6D803FE071A2DC7981C8291AAD552A9F9738C7354E928475DF1D235CD6D21B6C
65F46637640107FC9C216ABB1CF1E81F9C1286CE15B10FBDC79A331D71573581
0768798C91468E144FB7945535F2F9C287299EB8D57EEB82AFB23864305B6033
9D705D040A6BDB5A43498105E34093E061867A345D335B1A481FE3DB93FD500C
8DB71E31927CA67B9D81CB751BF1E5018F23E5CD3C9B3FC6AE2449B2B06CC134
38EA5B4A66C8E5A03D5F1D980916026164F42AF5C1357C65EF342657716ED8E4
AE58DF63EFA3E37492730CC15A7157D0AA2BAAA4721F82EDF6F8BF0CD92E4993
F24E0135EE836A440326357E0D1501844C90EFD7EA7FC314037C7E13F351F73B
627C4D57064AF119D9CBE118EA9CFC6E0E14AE0ACB07D179C490102125343D4E
C363FCDA7F8858B07E2FC5B389955A931A37638214D40A9E67333322B7BA8E8F
837B61112AF9E13F7A00620E8E27FC0DC49A872AACAEC76363D80803D3720C58
62E2CD8ABC92CEDBC4067909AADEC5D2ADFB60F7442044AA7EA6473C9E4A49C4
E82A9F416C4FA021F5CACB43C7AF2A7ADC5769499FDDF19E976224EA67976BD8
C73A13E60907F551B2089B300C6FBAFD0C38577F6EC5ACAF84DD5F70EAE001A7
E5D5652ED581F2B19F01E71B1E1EBEAEF821B7AB6DFCDFEFAC4D214A6578DC60
C73E976AEA76451DF62E972355E006A75E970C5D56C5C099449F3FEA01E88814
8FD13E5C56D994E1F3FFECA8A253AD95C287FB006485DC4A670DC79BBC437090
3FE87ABCB940CECE928A3B7A62E15FB94CD32A29A56C9C6A4711C60A5EEF84E4
87C8A0886A7AA6929E8241847BF334DEEE4DF997633E5348AB7BBDA76068657A
7616953E59401AC30F0A9BD6346617AC1108E52F5D872A22CF3B99FB57A66912
29AC8FC003C9D34FB20C8060A5F7FC3E0AE3CB600319C5E08EC814344A461A0F
34852A57953AE4ACD32F5296F00245FBED0C0B9E1E516389513A53F072F215C8
0370986A54A237B8964C2CF977648FC4A03589E39588FEBFBAD6F48AA36D6FF0
5E40B6153BAB0B1B5574B140133E1FD65412B8C92DBB00839AEBC4B38A2F0FC1
CEA674D566370DBB491489FCB419C8BF834781E9C7BB8DCF35FFF365E7F23AA1
104C5C1B7EEA47B1D61EF5B057812F2998DC988FFCD9230DB941E2FEAA249E64
203BAB4C89DD2BCFCE3975C31361C0178F7F1A9D98CCD837EE5FF2AE3E8F9F08
49C9B6CD92C6227B68907BD694E68B8C4B4E84401E76FCA04A235DDD6828E370
612383B2C2601D69427F57DFA97761218C117BB498441E890CE5EF1EED2924FA
30EE2D2D19E6F030C5B0ACBA45093FE8824C436C52D290B24490F21391B92BB1
992CB2E686E8AF8466344F76ED1E1E1BC75B97C0283BA7639F9D4C0F28A95A2F
A953F7A4A5C9D492A7389BB45CD6BDA0A8AF14E55DF02C6A6ABD39FF9CF6F50E
A879F5EB9AB342D3745B3387C67176A1FE793B5BBFCEC8B412A5CBB4EC11921C
42839C1E574F41ED7A56D2F0619F0873564C23414D772EC8A431E3F396948D03
72DD59B660C3B8991FC67A561FB4E36CC47B540973EF5DF50B88D25C6471FA1D
8B2D60C507F478D86334C0ECC06D3278F8DC9AD8CFAA7574BD6B5FD54751CB7D
ED2405EE4902944191A7EE621C18F2E73DAEED8534577B36980562CA065AADD1
1DBAFCF6EFA579571906B6AB2E017BD34988A6F5F7D0BFC5FF8C62B894E007D2
BBE214F7BE5965F8148EC00281416F247CE797C3E95ED227201741336957E2B4
3233CB865017F38F1CD8C4D6D96EDFB302D3177A650C3649FDFFD2D52E2CD693
9714F83E4D054B4DAC89703EFE8DA7D88E7320CF375FA52CDAA8E22A42E1C757
C98A335908E33455E9FABBB7BBD7F88AB3D4212934E696C92D234AEECEB93E41
A4F161F8AF2E43CDC0681A73F470E2A5FFC9A43823A8F142A86531D87D388720
4302AD8009F4EA5541D008E9ECA43E398C80661BC417AE56080C17BC7B27B47A
B8E9CCFE3D912A695E44FD15E33ABC265857917DC495EBDB278E03CD55D9041C
9E83861581E99E58FB1680683BAA6B2AE4A1745D9988BD3F5A83D81FE56F0F35
1F84343DDB171D59398DDE39A17922C246F55503D80596DE7BD6D78869890659
EB2456676E931EF004658A99F2B7D1E8AA1747A8D48FA8C13175EE9C3BCB83CF
6AFA907D24A07A22EDAAB524A94577EF32B53C2480A96B380FF8EB6EBA9CA40D
9B44A2CF2F7CA94DE473D409C3EB72D33B9626DB03244237C942CDF3895364B1
61626FAFF3651286C5AF018DCCBF909006D1FF3412D5049493B2FCF1AE293FE7
72E300DB1106A3A63F4CCA42D36B121DEC57BDAEE01F21CAEFD8C5C36C020D25
57B3B8A24BFB2B36FC4642D689B020B11D3817AD857D71C0C8C2EBAEC4C29674
F7E393A823316217C80055AF1446D3C9A1C6E0671D61524C35D8353289F51815
C6FD3039510ACD5728CDB8A337DD8DF2B01D2174DD9E20AAAFF935188249D742
08C7063B0D7817574AD47735BD7A0598D5EDF3F0AEF4D754B2EEC0C78EF1A5E5
B51B995221AF9FB97DE828742A9762A6CDEFDDCB0E8F9348E51BF3EA75E29011
381CB925D6A10B4A038784F8CC75FE1811BD701222EB317536085AF7147E90EA
1AC683207956F6CE668B2AD6996B15ED3F8CE711583749106D18B3A497CA632C
E6B1DA394F61D6C13F5D189A4B417D61CA757EA5B0228781942FC115873F1F87
36F21FECC9351B42923EFAD11C809415F67D5C1BC9F2CC45E6F13C4A83705E9D
91A2FB5E7A7ED68FFC5C0764FDBC3C7C475F2584557545252BD96513C05223D2
E47DEDF3718C3457281FC888C6476DB16F31BC82B9266C459CFE52C11136ECEF
C056F812A00C5DD88CA9C534F2607E6FF4E088D6427AA79B8CF906F2020CA483
7AF4B1C94E549E58EA59664E56F2AC4DFF26CE614C53BE301325CAC0E133B585
98BE4DAEB208C73A2764CF18A9AE4E04EF5D04E0F0CC67BE591432E432763613
612C2E751A74C5A2A2C097BCB473296975A177F1C8967572D8D3D6331905DE4A
E8DFA21E23DBC1C319CB6BFD4FC6E1BC3671C3EA8EB8A997F1BD4F0AAD6FC104
13A373A9E076A46C5D742D8A99410E4BF79482417C36C96835E5C3A5F12B0CAF
34DCDFBD66A4EAEEA0E6B037F82DB06341ABDA2BB009962D3E3689F244E62D37
6182369391BA59830F9DBB6518D4904C811755ED7E303BFB72148ED6C631EA37
154BF60DBFA683B8FBBC74D275B7672108A329B691254DF65FD37B11B441968A
679D4329BF79C7239D7F91DFEC7F4CE14B09B18816B7830B72678DB2D0A3A10C
147877D9072EB83DD3558B16E94DD6631603E52FD52D0437EC0CE96ABDCDCBA5
C72A1A2316E41A34B828AB12CC63F8D5BE8E7489D1737FEC9FA25D71059DC1C3
EECF1C7DF309C763A60F448FF58C423740179E91C450E5604DCA305D20854356
03424AA47792C1B7524D680A4C6BF1799E235021534BD92E06AD925E0680A631
B7508A8632D329D0DC3434A949BCF4CBEF4835844CFB8DF9500F037A405A3701
72AC5F1FF8ADF40125FAB1DEA0D55F11017DCE2B66C7B5B622A880DBB166FADE
AC60F09873ABA104A9DC3B365EA45C6AE5B18DF85B078598E99FDE689163118C
3F993452076B780A1EAD92C33699A0760923BF68822284BA13A880AC401D80CE
6AB2D03B410BA02AF4B9C2EDA6744EF7359B8318E18F51F51F7358CF4B28B61F
3873B712FC7C0850493DC0D3F7C2FF8ABEBE755BF84C087F7132B411432A2BBB
9AACC0BA454E443A7CA6619C24AC9356402E391761E1622AD065ED1E1C214B8E
9BD7F3DC68E66F2B77A1977A660CB74AD06303CB661AB2BA9E16E23D1BB7802D
A1F94A1C4476AD06C1CB2B10DC7EA63A650235C1DEF63A46D717D3DB732FFD70
77DBA1FCB0FAF533E3E56CCFF42D7807D1E8EF135063C2B9F4F6E2FD5E533505
4D174CC9E7C9242DE9F6A93B30DC324D6357BE3BF7A56544315CB8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 39158274 55380987 1000 8000 8000
(C:/Users/Chris Notebook/Dropbox/Aufgabensammlung (offiziell)/Typ 1 Aufgaben/_Matura/AG - Algebra un)
@start /Fa 220[443 14[738 20[{}2 1328.35 /TeX-vect10
rf /Fb 135[1064 120[{ enclmmathit ReEncodeFont }1 1912.83
/LMMathItalic12-Regular rf /Fc 255[732{ enclmmathsy ReEncodeFont }1
885.568 /LMMathSymbols8-Regular rf /Fd 133[438 465 530
14[320 542 448 4[403 16[740 597 14[705 5[261 59[{
 enclmmathit ReEncodeFont }11 885.568 /LMMathItalic8-Regular
rf /Fe 242[1594 13[{ enclmmathsy ReEncodeFont }1 1594.02
/LMMathSymbols10-Regular rf /Ff 203[993 1[993 50[{}2
1328.35 /wasy10 rf /Fg 188[969 969 969 969 1[984 1[984
1[984 1[984 6[969 969 30[661 661 16[{ enclmmathex ReEncodeFont }12
1106.96 /LMMathExtension10-Regular rf /Fh 184[869 5[830
12[553 553 4[307 46[{ enclmec ReEncodeFont }5 1106.96
/LMRoman10-Regular rf /Fi 160[909 45[606 1[606 47[{
 enclmec ReEncodeFont }3 1212.12 /LMRoman10-Regular rf
/Fj 194[732 5[470 470 470 470 470 470 470 470 6[366 366
40[{ enclmrm ReEncodeFont }11 885.568 /LMRoman8-Regular
rf /Fk 173[959 82[{}1 1328.35 /MSBM10 rf /Fl 148[664
369 55[886 8[1328 7[1328 31[369 1033{ enclmmathsy ReEncodeFont }7
1328.35 /LMMathSymbols10-Regular rf /Fm 162[361 1[361
29[1012 1[361 361 650 650 650 650 650 650 650 650 650
650 4[1012 1[506 506 40[{ enclmrm ReEncodeFont }18 1328.35
/LMRoman12-Regular rf /Fn 133[604 634 739 3[470 613 4[776
2[676 1[444 749 623 3[560 553 683 8[1079 4[800 1[1030
838 2[1258 3[574 6[988 975 3[650 1[361 361 58[{
 enclmmathit ReEncodeFont }24 1328.35 /LMMathItalic12-Regular
rf /Fo 650 2[723 5[650 17[650 7[975 97[578 686 686 939
686 723 506 513 506 1[723 650 723 1084 361 686 397 361
723 650 397 578 723 578 723 650 6[795 2[1336 975 1[939
723 957 1012 885 1012 975 1192 813 1011 1[469 1[1021
849 885 993 1[921 975 1[614 4[361 650 650 650 650 650
650 650 650 650 650 1[361 434 361 2[506 506 6[361 5[759
27[{ enclmec ReEncodeFont }69 1328.35 /LMRoman12-Regular
rf /Fp 3[1196 23[1046 105[956 2[1554 1136 1196 837 849
879 1[1196 1076 1196 1793 598 1136 1[598 1196 1076 658
982 1196 956 1196 1046 12[1497 1196 1605 1[1470 1616
1682 2041 1293 1685 1[801 1682 1691 1353 1412 1[1554
1530 1625 7[1076 1076 1076 1076 1076 1076 1076 1076 1076
1076 1076 598 717 45[{ enclmec ReEncodeFont }54 1912.83
/LMRoman12-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-2331 165 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a -2331
165 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -2331 165 a -2331 165 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -2331 165 a 1328 x Fp(A)-60
b(G)718 b(3.4)f(-)h(1)f(Strec)-60 b(k)g(enmittelpunkt)714
b(-)k(O)-60 b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741
4800 a Fo(1.)p 0 TeXcolorgray 651 w(Man)420 b(kann)h(mithilfe)g(der)g
(Geradengleic)-36 b(h)g(ung)419 b Fn(X)474 b Fm(=)369
b Fn(A)269 b Fm(+)f Fn(t)g Fl(\001)31436 3893 y(\000)-331
b(!)31436 4800 y Fn(AB)488 b Fo(mit)421 b Fn(t)368 b
Fl(2)h Fk(R)421 b Fo(den)f(Mittel-)921 6792 y(punkt)433
b Fn(M)572 b Fo(der)433 b(Strec)-36 b(k)g(e)433 b Fn(AB)501
b Fo(b)36 b(estimmen.)921 9338 y(Geb)g(e)433 b(an,)h(w)-36
b(elc)g(hen)433 b(W)-108 b(ert)433 b(der)g(P)-36 b(arameter)434
b(t)f(b)36 b(ei)434 b(dieser)f(Rec)-36 b(hn)g(ung)433
b(annehmen)f(m)-36 b(uss!)921 13875 y Fn(t)369 b Fm(=)p
1 0 0 TeXcolorrgb 433 w(0)p Fn(;)p Fm(5)434 b Fo(bzw.)8468
13352 y Fj(1)p 8468 13565 471 45 v 8468 14333 a(2)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 4800
a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 6792 a Fh(A)-31
b(G)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 17808 54804 45 v -2331 23110 a Fp(A)-60
b(G)718 b(3.4)f(-)h(2)f(Iden)-60 b(te)717 b(Geraden)f(-)i(O)-60
b(A)718 b(-)f(BIFIE)p 0 TeXcolorgray -741 26417 a Fo(2.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(sind)g(die)h(b)36
b(eiden)433 b(Geraden)17157 31756 y Fn(g)416 b Fm(:)370
b Fn(X)474 b Fm(=)368 b Fn(P)476 b Fm(+)295 b Fn(t)g
Fl(\001)25910 28479 y Fg(0)25910 30427 y(B)25910 31091
y(B)25910 31756 y(B)25910 32464 y(@)27211 29830 y Fn(g)27834
30029 y Fj(1)27211 31822 y Fn(g)27834 32021 y Fj(2)27211
33814 y Fn(g)27834 34013 y Fj(3)28692 28479 y Fg(1)28692
30427 y(C)28692 31091 y(C)28692 31756 y(C)28692 32464
y(A)921 37087 y Fo(und)16978 40518 y Fn(h)369 b Fm(:)g
Fn(X)474 b Fm(=)368 b Fn(Q)296 b Fm(+)f Fn(s)f Fl(\001)25964
37242 y Fg(0)25964 39190 y(B)25964 39854 y(B)25964 40518
y(B)25964 41227 y(@)27264 38593 y Fn(h)28013 38792 y
Fj(1)27264 40584 y Fn(h)28013 40783 y Fj(2)27264 42576
y Fn(h)28013 42775 y Fj(3)28871 37242 y Fg(1)28871 39190
y(C)28871 39854 y(C)28871 40518 y(C)28871 41227 y(A)921
45094 y Fo(mit)640 b Fn(t;)221 b(s)721 b Fl(2)g Fk(R)p
Fo(.)642 b(Gib)e(an,)h(w)-36 b(elc)g(he)640 b(Sc)-36
b(hritte)640 b(not)-36 b(w)g(endig)640 b(sind,)g(um)g(die)h(Iden)-36
b(tit\344t)640 b(der)921 47086 y(Geraden)433 b(nac)-36
b(hzu)g(w)g(eisen.)p 1 0 0 TeXcolorrgb 855 49631 a(W)-108
b(enn)511 b(der)g(Ric)-36 b(h)g(tungsv)g(ektor)512 b(der)f(Geraden)f(g)
i(ein)g(Vielfac)-36 b(hes)513 b(des)e(Ric)-36 b(h)g(tungsv)g(ektors)921
51623 y(der)600 b(Geraden)f(ha)h(ist)g(\(bzw.)i(umgek)-36
b(ehrt)599 b(h)h(ein)g(Vielfac)-36 b(hes)601 b(v)-36
b(on)601 b(g)f(ist\),)h(so)g(sind)e(die)921 53615 y(b)36
b(eiden)477 b(Geraden)g(parallel)j(o)36 b(der)478 b(iden)-36
b(t.)477 b(Liegt)i(au\377erdem)e(no)36 b(c)-36 b(h)478
b(der)g(Punkt)f(P)h(auf)h(der)921 55607 y(Geraden)433
b(h)g(\(seine)g(K)-36 b(o)36 b(ordinaten)434 b(m)-36
b(\374ssen)432 b(die)i(Gleic)-36 b(h)g(ung)17984 61019
y Fn(P)550 b Fm(=)369 b Fn(Q)295 b Fm(+)g Fn(s)g Fl(\001)24957
57742 y Fg(0)24957 59690 y(B)24957 60355 y(B)24957 61019
y(B)24957 61727 y(@)26258 59093 y Fn(h)27007 59292 y
Fj(1)26258 61085 y Fn(h)27007 61284 y Fj(2)26258 63077
y Fn(h)27007 63276 y Fj(3)27864 57742 y Fg(1)27864 59690
y(C)27864 60355 y(C)27864 61019 y(C)27864 61727 y(A)921
66431 y Fo(erf\374llen\))450 b(bzw.)h(liegt)g(der)e(Punkt)h(Q)f(auf)i
(der)e(Geraden)h(g)g(\(seine)g(K)-36 b(o)36 b(ordinaten)450
b(m)-36 b(\374ssen)921 68423 y(die)433 b(Gleic)-36 b(h)g(ung)18119
72113 y Fn(Q)369 b Fm(=)f Fn(P)477 b Fm(+)295 b Fn(t)f
Fl(\001)24949 68836 y Fg(0)24949 70784 y(B)24949 71449
y(B)24949 72113 y(B)24949 72821 y(@)26249 70187 y Fn(g)26872
70386 y Fj(1)26249 72179 y Fn(g)26872 72378 y Fj(2)26249
74171 y Fn(g)26872 74370 y Fj(3)27730 68836 y Fg(1)27730
70784 y(C)27730 71449 y(C)27730 72113 y(C)27730 72821
y(A)921 76769 y Fo(erf\374llen\),)434 b(so)g(sind)f(die)g(Geraden)g
(iden)-36 b(t.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 26417 a Fi(___/1)p 1 0 0 TeXcolorrgb
47990 28409 a Fh(A)-31 b(G)369 b(3.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray 24746
81281 a Fo(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 54804 45 v -2331 6693 a Fp(A)-60
b(G)718 b(3.4)f(-)h(3)f(Lageb)60 b(ezieh)-60 b(ung)715
b(v)-60 b(on)717 b(Geraden)g(-)g(MC)h(-)g(BIFIE)p 0 TeXcolorgray
-741 10815 a Fo(3.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(der)f(V)-108 b(ektor)14521 10244 y Fl(\000)-1033
b(!)14844 10815 y Fn(a)692 b Fm(=)17599 8535 y Fg(0)17599
10528 y(@)19933 9886 y Fm(1)18900 11878 y Fl(\000)p Fm(4)20916
8535 y Fg(1)20916 10528 y(A)21884 10815 y Fo(.)855 14199
y(W)-108 b(elc)-36 b(he)478 b(der)h(nac)-36 b(hstehend)477
b(angegeb)36 b(enen)478 b(V)-108 b(ektoren)479 b(sind)f(zu)32907
13627 y Fl(\000)-1033 b(!)33230 14199 y Fn(a)801 b Fo(normal?)480
b(Kreuze)e(die)921 16191 y(b)36 b(eiden)433 b(zutre\033enden)e(V)-108
b(ektoren)434 b(an!)p 19158 16900 8067 45 v 19158 24463
45 7564 v 19867 18733 a Fg(0)19867 20726 y(@)21168 20084
y Fl(\000)p Fm(1)21168 22076 y Fl(\000)p Fm(4)23183 18733
y Fg(1)23183 20726 y(A)p 24816 24463 V 27181 24463 V
19158 24508 8067 45 v 19158 31961 45 7453 v 19867 26286
a(0)19867 28278 y(@)22201 27637 y Fm(2)21168 29629 y
Fl(\000)p Fm(8)23183 26286 y Fg(1)23183 28278 y(A)p 24816
31961 V 27181 31961 V 19158 32005 8067 45 v 19158 39458
45 7453 v 19867 33783 a(0)19867 35776 y(@)22201 35134
y Fm(4)21168 37126 y Fl(\000)p Fm(1)23183 33783 y Fg(1)23183
35776 y(A)p 24816 39458 V 27181 39458 V 19158 39502 8067
45 v 19158 47066 45 7564 v 19867 41336 a(0)19867 43328
y(@)21168 42686 y Fl(\000)p Fm(4)21168 44678 y Fl(\000)p
Fm(1)23183 41336 y Fg(1)23183 43328 y(A)p 24816 47066
V 1 0 0 TeXcolorrgb 25524 43616 a Ff(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 27181 47066 V 19158
47110 8067 45 v 19158 54452 45 7343 v 19867 48833 a Fg(0)19867
50826 y(@)21168 50184 y Fm(8)21168 52176 y(2)22150 48833
y Fg(1)22150 50826 y(A)p 24816 54452 V 1 0 0 TeXcolorrgb
25524 51113 a Ff(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 27181 54452 V 19158 54497 8067 45 v 47992
10815 a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 12807 a Fh(A)-31
b(G)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 58525 54804 45 v -2331 63724 a Fp(A)-60
b(G)718 b(3.4)f(-)h(4)f(Gerade)g(in)g(P)-60 b(arameterform)717
b(-)h(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741
67032 a Fo(4.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433
b(ist)h(die)f(Gerade)g Fn(g)481 b Fo(mit)434 b(der)f(Gleic)-36
b(h)g(ung)432 b Fm(3)p Fn(x)296 b Fl(\000)f Fm(4)p Fn(y)418
b Fm(=)368 b(12)p Fo(.)921 69577 y(Gib)433 b(eine)h(Gleic)-36
b(h)g(ung)432 b(v)-36 b(on)434 b Fn(g)481 b Fo(in)434
b(P)-36 b(arameterform)434 b(an!)p 1 0 0 TeXcolorrgb
921 72824 a Fn(g)416 b Fm(:)370 b Fn(X)474 b Fm(=)5624
70544 y Fg(0)5624 72537 y(@)6925 71895 y Fm(4)6925 73887
y(0)7907 70544 y Fg(1)7907 72537 y(A)9171 72824 y Fm(+)295
b Fn(t)g Fl(\001)11907 70544 y Fg(0)11907 72537 y(@)13208
71895 y Fm(4)13208 73887 y(3)14190 70544 y Fg(1)14190
72537 y(A)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
47992 67032 a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 69024
a Fh(A)-31 b(G)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray -2331 77960 V 0 TeXcolorgray 24746 81281
a Fo(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(A)-60 b(G)718 b(3.4)f(-)h(5)f(Geraden)g
(im)g(R3)g(-)h(MC)g(-)g(BIFIE)p 0 TeXcolorgray -741 6240
a Fo(5.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)431 b(ist)h(die)g(Gerade)f
Fn(g)480 b Fo(mit)431 b(der)h(Gleic)-36 b(h)g(ung)431
b Fn(X)474 b Fm(=)29366 2964 y Fg(0)29366 4912 y(B)29366
5576 y(B)29366 6240 y(B)29366 6949 y(@)30667 4315 y Fm(4)30667
6306 y(2)30667 8298 y(4)31649 2964 y Fg(1)31649 4912
y(C)31649 5576 y(C)31649 6240 y(C)31649 6949 y(A)32910
6240 y Fm(+)291 b Fn(t)g Fl(\001)35635 2964 y Fg(0)35635
4912 y(B)35635 5576 y(B)35635 6240 y(B)35635 6949 y(@)37969
4315 y Fm(1)36936 6306 y Fl(\000)p Fm(1)37969 8298 y(2)38951
2964 y Fg(1)38951 4912 y(C)38951 5576 y(C)38951 6240
y(C)38951 6949 y(A)40352 6240 y Fo(mit)432 b Fn(t)368
b Fl(2)h Fk(R)p Fo(.)921 10476 y(Zw)-36 b(ei)480 b(der)g(folgenden)g
(Gleic)-36 b(h)g(ungen)479 b(sind)g(eb)36 b(enfalls)481
b(P)-36 b(arameterdarstellungen)479 b(der)g(Ge-)921 12468
y(raden)433 b Fn(g)48 b Fo(.)433 b(Kreuze)h(die)f(b)36
b(eiden)433 b(Gleic)-36 b(h)g(ungen)433 b(an!)p 11615
13435 23155 45 v 11615 23614 45 10180 v 12323 18856 a
Fn(X)474 b Fm(=)15257 15580 y Fg(0)15257 17528 y(B)15257
18192 y(B)15257 18856 y(B)15257 19565 y(@)16558 16931
y Fm(4)16558 18923 y(2)16558 20915 y(4)17540 15580 y
Fg(1)17540 17528 y(C)17540 18192 y(C)17540 18856 y(C)17540
19565 y(A)18804 18856 y Fm(+)295 b Fn(t)f Fl(\001)21540
15580 y Fg(0)21540 17528 y(B)21540 18192 y(B)21540 18856
y(B)21540 19565 y(@)23873 16931 y Fm(2)22840 18923 y
Fl(\000)p Fm(1)23873 20915 y(3)24856 15580 y Fg(1)24856
17528 y(C)24856 18192 y(C)24856 18856 y(C)24856 19565
y(A)26258 18856 y Fo(mit)434 b Fn(t)368 b Fl(2)h Fk(R)p
32359 23614 V 34725 23614 V 11615 23658 23155 45 v 11615
33838 45 10180 v 12323 29080 a Fn(X)474 b Fm(=)15257
25803 y Fg(0)15257 27752 y(B)15257 28416 y(B)15257 29080
y(B)15257 29788 y(@)16558 27154 y Fm(5)16558 29146 y(7)16558
31138 y(9)17540 25803 y Fg(1)17540 27752 y(C)17540 28416
y(C)17540 29080 y(C)17540 29788 y(A)18804 29080 y Fm(+)295
b Fn(t)f Fl(\001)21540 25803 y Fg(0)21540 27752 y(B)21540
28416 y(B)21540 29080 y(B)21540 29788 y(@)23873 27154
y Fm(2)22840 29146 y Fl(\000)p Fm(2)23873 31138 y(4)24856
25803 y Fg(1)24856 27752 y(C)24856 28416 y(C)24856 29080
y(C)24856 29788 y(A)26258 29080 y Fo(mit)434 b Fn(t)368
b Fl(2)h Fk(R)p 32359 33838 V 34725 33838 V 11615 33882
23155 45 v 11615 44061 45 10180 v 12323 39304 a Fn(X)474
b Fm(=)15257 36027 y Fg(0)15257 37975 y(B)15257 38639
y(B)15257 39304 y(B)15257 40012 y(@)16558 37378 y Fm(6)16558
39370 y(0)16558 41362 y(8)17540 36027 y Fg(1)17540 37975
y(C)17540 38639 y(C)17540 39304 y(C)17540 40012 y(A)18804
39304 y Fm(+)295 b Fn(t)f Fl(\001)21540 36027 y Fg(0)21540
37975 y(B)21540 38639 y(B)21540 39304 y(B)21540 40012
y(@)23873 37378 y Fm(1)22840 39370 y Fl(\000)p Fm(1)23873
41362 y(2)24856 36027 y Fg(1)24856 37975 y(C)24856 38639
y(C)24856 39304 y(C)24856 40012 y(A)26258 39304 y Fo(mit)434
b Fn(t)368 b Fl(2)h Fk(R)p 32359 44061 V 1 0 0 TeXcolorrgb
1373 w Ff(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray
34725 44061 V 11615 44105 23155 45 v 11615 54395 45 10290
v 12323 49582 a Fn(X)474 b Fm(=)15257 46306 y Fg(0)15257
48254 y(B)15257 48918 y(B)15257 49582 y(B)15257 50291
y(@)16558 47657 y Fm(4)16558 49649 y(2)16558 51641 y(4)17540
46306 y Fg(1)17540 48254 y(C)17540 48918 y(C)17540 49582
y(C)17540 50291 y(A)18804 49582 y Fm(+)295 b Fn(t)f Fl(\001)21540
46306 y Fg(0)21540 48254 y(B)21540 48918 y(B)21540 49582
y(B)21540 50291 y(@)22840 47657 y Fl(\000)p Fm(1)23873
49649 y(1)22840 51641 y Fl(\000)p Fm(2)24856 46306 y
Fg(1)24856 48254 y(C)24856 48918 y(C)24856 49582 y(C)24856
50291 y(A)26258 49582 y Fo(mit)434 b Fn(t)368 b Fl(2)h
Fk(R)p 32359 54395 V 1 0 0 TeXcolorrgb 1373 w Ff(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 34725
54395 V 11615 54440 23155 45 v 11615 64508 45 10069 v
12323 59806 a Fn(X)474 b Fm(=)15257 56529 y Fg(0)15257
58478 y(B)15257 59142 y(B)15257 59806 y(B)15257 60514
y(@)16558 57880 y Fm(3)16558 59872 y(3)16558 61864 y(2)17540
56529 y Fg(1)17540 58478 y(C)17540 59142 y(C)17540 59806
y(C)17540 60514 y(A)18804 59806 y Fm(+)295 b Fn(t)f Fl(\001)21540
56529 y Fg(0)21540 58478 y(B)21540 59142 y(B)21540 59806
y(B)21540 60514 y(@)22840 57880 y Fm(1)22840 59872 y(0)22840
61864 y(1)23823 56529 y Fg(1)23823 58478 y(C)23823 59142
y(C)23823 59806 y(C)23823 60514 y(A)25225 59806 y Fo(mit)433
b Fn(t)369 b Fl(2)g Fk(R)p 32359 64508 V 34725 64508
V 11615 64552 23155 45 v 47992 6240 a Fi(___/1)p 1 0 0
TeXcolorrgb 47990 8232 a Fh(A)-31 b(G)369 b(3.4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 68580
54804 45 v 0 TeXcolorgray 24746 81281 a Fo(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(A)-60 b(G)718 b(3.4)f(-)h(6)f(Lageb)60
b(ezieh)-60 b(ung)715 b(zw)-60 b(eier)718 b(Geraden)f(-)g(L)-179
b(T)717 b(-)g(BIFIE)p 0 TeXcolorgray -741 5616 a Fo(6.)p
0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(sind)g(die)h(Geraden)e
Fn(g)417 b Fm(:)369 b Fn(X)474 b Fm(=)21004 3335 y Fg(0)21004
5328 y(@)22305 4686 y Fm(1)22305 6678 y(1)23287 3335
y Fg(1)23287 5328 y(A)24551 5616 y Fm(+)295 b Fn(s)g
Fl(\001)27430 3335 y Fg(0)27430 5328 y(@)28731 4686 y
Fl(\000)p Fm(1)29764 6678 y(2)30746 3335 y Fg(1)30746
5328 y(A)32149 5616 y Fo(und)432 b Fn(h)369 b Fm(:)g
Fn(x)295 b Fl(\000)h Fm(2)f Fl(\001)g Fn(y)417 b Fm(=)369
b Fl(\000)p Fm(1)p Fo(.)921 8856 y(Erg\344nze)358 b(die)h(T)-108
b(extl\374c)-36 b(k)g(en)358 b(im)g(folgenden)h(Satz)f(durc)-36
b(h)357 b(Ankreuzen)g(der)h(jew)-36 b(eils)360 b(ric)-36
b(h)g(tigen)921 10847 y(Satzteile)434 b(so,)g(dass)g(eine)f
(mathematisc)-36 b(h)434 b(k)-36 b(orrekte)434 b(A)-36
b(ussage)434 b(en)-36 b(tsteh)g(t!)921 14338 y(Die)434
b(Geraden)f Fn(g)481 b Fo(und)432 b Fn(h)p 13603 14338
3150 45 v 17225 14290 a Fo(1)16753 14338 y Fe(\015)p
18347 14338 V 3583 w Fo(,)i(w)-36 b(eil)p 25579 14338
V 29201 14290 a(2)28729 14338 y Fe(\015)p 30323 14338
V 3583 w Fo(.)p 0 TeXcolorgray 0 TeXcolorgray 1871 15710
19290 45 v 1871 18794 45 3085 v 11190 17491 a(1)10718
17539 y Fe(\015)p 21115 18794 V 1871 18839 19290 45 v
1871 22098 45 3260 v 2579 20895 a Fo(sind)433 b(parallel)p
18750 22098 V 19459 20800 a Ff(2)p 21115 22098 V 1871
22142 19290 45 v 1871 25401 45 3260 v 2579 24198 a Fo(sind)g(iden)-36
b(t)p 18750 25401 V 19459 24104 a Ff(2)p 21115 25401
V 1871 25446 19290 45 v 1871 28705 45 3260 v 2579 27502
a Fo(stehen)433 b(normal)h(aufeinander)p 18750 28705
V 1 0 0 TeXcolorrgb 19459 27407 a Ff(4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 21115 28705 V 1871 28749
19290 45 v 0 TeXcolorgray 0 TeXcolorgray 25658 15821
19974 45 v 25658 18905 45 3085 v 35319 17602 a Fo(2)34847
17650 y Fe(\015)p 45586 18905 V 25658 18949 19974 45
v 25658 25996 45 7047 v 26366 20809 a Fo(der)f(Ric)-36
b(h)g(tungsv)g(ektor)434 b(v)-36 b(on)434 b Fn(g)26366
22801 y Fo(zum)693 b(Normalv)-36 b(ektor)694 b(v)-36
b(on)693 b Fn(h)26366 24793 y Fo(parallel)435 b(ist)p
43221 25996 V 1 0 0 TeXcolorrgb 43930 22805 a Ff(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 45586
25996 V 25658 26040 19974 45 v 25658 33087 45 7047 v
26366 27900 a Fo(die)1092 b(Ric)-36 b(h)g(tungsv)g(ektoren)1092
b(der)26366 29892 y(b)36 b(eiden)358 b(Geraden)f Fn(g)406
b Fo(und)358 b Fn(h)g Fo(par-)26366 31884 y(allel)435
b(sind)p 43221 33087 V 43930 29896 a Ff(2)p 45586 33087
V 25658 33132 19974 45 v 25658 38268 45 5137 v 26366
35073 a Fo(der)307 b(Punkt)f Fn(P)550 b Fm(=)369 b(\(1)p
Fn(=)p Fm(1\))308 b Fo(auf)f(b)36 b(ei-)26366 37065 y(den)433
b(Geraden)f Fn(g)481 b Fo(und)433 b Fn(h)g Fo(liegt)p
43221 38268 V 43930 36032 a Ff(2)p 45586 38268 V 25658
38312 19974 45 v 47992 5616 a Fi(___/1)p 1 0 0 TeXcolorrgb
47990 7608 a Fh(A)-31 b(G)369 b(3.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 42340 54804 45
v -2331 47642 a Fp(A)-60 b(G)692 b(3.4)f(-)g(7)g(Anstieg)f(einer)g
(parallelen)f(Geraden)i(-)g(O)-60 b(A)691 b(-)h(BIFIE)p
0 TeXcolorgray -741 50949 a Fo(7.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(sind)g(die)h(zw)-36 b(ei)434 b(Geraden)e
Fn(g)481 b Fo(und)433 b Fn(h)p Fo(:)921 55930 y Fn(g)416
b Fm(:)370 b Fn(X)474 b Fm(=)5624 53650 y Fg(0)5624 55642
y(@)6925 55000 y Fm(2)6925 56992 y(3)7907 53650 y Fg(1)7907
55642 y(A)9171 55930 y Fm(+)295 b Fn(t)g Fl(\001)11907
53650 y Fg(0)11907 55642 y(@)13208 55000 y Fm(1)13208
56992 y(4)14190 53650 y Fg(1)14190 55642 y(A)921 60467
y Fn(h)369 b Fm(:)g Fn(y)417 b Fm(=)368 b Fn(k)341 b
Fl(\001)295 b Fn(x)g Fm(+)g(7)921 63013 y Fo(Bestimme)434
b(den)f(W)-108 b(ert)433 b(v)-36 b(on)434 b(k)g(so,)g(dass)f
Fn(g)482 b Fo(und)432 b Fn(h)h Fo(zueinander)g(parallel)i(sind!)p
1 0 0 TeXcolorrgb 921 65558 a Fn(k)414 b Fm(=)369 b(4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
50949 a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 52941 a Fh(A)-31
b(G)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 69033 V 0 TeXcolorgray 24746 81281
a Fo(4)p 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(A)-60 b(G)718 b(3.4)f(-)h(8)f(P)-60
b(arallele)717 b(Geraden)f(-)i(O)-60 b(A)718 b(-)f(BIFIE)p
0 TeXcolorgray -741 4800 a Fo(8.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(sind)g(die)h(Geraden)921 8048 y
Fn(g)416 b Fm(:)370 b Fn(X)474 b Fm(=)5624 5767 y Fg(0)5624
7760 y(@)6925 7118 y Fm(3)6925 9110 y(2)7907 5767 y Fg(1)7907
7760 y(A)9171 8048 y Fm(+)295 b Fn(t)g Fl(\001)11907
5767 y Fg(0)11907 7760 y(@)13208 7118 y Fl(\000)p Fm(2)14241
9110 y(1)15223 5767 y Fg(1)15223 7760 y(A)16625 8048
y Fo(und)921 12697 y Fn(h)369 b Fm(:)g Fn(X)474 b Fm(=)5702
10416 y Fg(0)5702 12409 y(@)7003 11767 y Fl(\000)p Fm(3)7003
13759 y Fl(\000)p Fm(1)9019 10416 y Fg(1)9019 12409 y(A)10283
12697 y Fm(+)294 b Fn(s)h Fl(\001)13161 10416 y Fg(0)13161
12409 y(@)15463 11767 y Fn(a)14462 13759 y Fl(\000)p
Fm(2)16478 10416 y Fg(1)16478 12409 y(A)17446 12697 y
Fo(.)921 15937 y(Ermittle)433 b(den)g(W)-108 b(ert)434
b(f\374r)f(a)h(so,)g(dass)g(die)f(b)36 b(eiden)433 b(Gerade)g(parallel)
i(zueinander)d(sind!)p 1 0 0 TeXcolorrgb 921 18482 a
Fn(a)369 b Fm(=)f(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 4800 a Fi(___/1)p 1 0 0 TeXcolorrgb
47990 6792 a Fh(A)-31 b(G)369 b(3.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 21957 54804 45
v -2331 27259 a Fp(A)-60 b(G)718 b(3.4)f(-)h(9)f(Punkt)f(und)g(Gerade)h
(-)h(O)-60 b(A)717 b(-)h(BIFIE)p 0 TeXcolorgray -741
30566 a Fo(9.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)444
b(sind)h(der)g(Punkt)f Fn(P)570 b Fm(=)388 b(\()p Fl(\000)p
Fm(1)p Fl(j)p Fm(5)p Fl(j)p Fm(6\))446 b Fo(und)e(die)h(Gerade)g
Fn(g)48 b Fo(,)445 b(die)g(durc)-36 b(h)444 b(die)h(Punkte)921
32558 y Fn(A)369 b Fm(=)g(\(2)p Fl(j)295 b(\000)g Fm(3)p
Fl(j)p Fm(2\))434 b Fo(und)f Fn(B)j Fm(=)368 b(\(5)p
Fl(j)p Fm(1)p Fl(j)p Fm(0\))435 b Fo(v)-36 b(erl\344uft.)921
37095 y(Geb)36 b(en)348 b(Sie)g(an,)h(ob)g(der)f(gegeb)36
b(ene)348 b(Punkt)g Fn(P)530 b Fo(auf)349 b(der)f(Geraden)g
Fn(g)396 b Fo(liegt,)350 b(und)d(\374b)36 b(erpr\374fen)921
39087 y(Sie)433 b(diese)h(A)-36 b(ussage)434 b(anhand)f(einer)g(Rec)-36
b(hn)g(ung!)p 1 0 0 TeXcolorrgb 921 41633 a(Der)434 b(Punkt)f
Fn(P)614 b Fo(liegt)435 b(nic)-36 b(h)g(t)432 b(auf)i(der)f(Geraden)g
Fn(g)48 b Fo(,)433 b(denn:)921 47610 y Fn(g)416 b Fm(:)370
b Fn(X)474 b Fm(=)5624 44333 y Fg(0)5624 46281 y(B)5624
46945 y(B)5624 47610 y(B)5624 48318 y(@)7958 45684 y
Fm(2)6925 47676 y Fl(\000)p Fm(3)7958 49668 y(2)8940
44333 y Fg(1)8940 46281 y(C)8940 46945 y(C)8940 47610
y(C)8940 48318 y(A)10204 47610 y Fm(+)295 b Fn(s)g Fl(\001)13083
44333 y Fg(0)13083 46281 y(B)13083 46945 y(B)13083 47610
y(B)13083 48318 y(@)15417 45684 y Fm(3)15417 47676 y(4)14384
49668 y Fl(\000)p Fm(2)16399 44333 y Fg(1)16399 46281
y(C)16399 46945 y(C)16399 47610 y(C)16399 48318 y(A)20191
46702 y Fl(\000)-368 b(!)20191 47610 y Fn(AP)550 b Fm(=)23934
44333 y Fg(0)23934 46281 y(B)23934 46945 y(B)23934 47610
y(B)23934 48318 y(@)25235 45684 y Fl(\000)p Fm(3)26268
47676 y(8)26268 49668 y(4)27251 44333 y Fg(1)27251 46281
y(C)27251 46945 y(C)27251 47610 y(C)27251 48318 y(A)28441
47610 y Fn(;)29023 46702 y Fl(\000)-331 b(!)29023 47610
y Fn(AB)436 b Fm(=)32803 44333 y Fg(0)32803 46281 y(B)32803
46945 y(B)32803 47610 y(B)32803 48318 y(@)35137 45684
y Fm(3)35137 47676 y(4)34104 49668 y Fl(\000)p Fm(2)36119
44333 y Fg(1)36119 46281 y(C)36119 46945 y(C)36119 47610
y(C)36119 48318 y(A)921 54317 y Fo(Die)449 b(\334b)36
b(erpr\374fung,)447 b(ob)13195 53410 y Fl(\000)-367 b(!)13195
54317 y Fn(AP)575 b Fl(k)16642 53410 y(\000)-332 b(!)16642
54317 y Fn(AB)515 b Fo(gilt,ergibt,)450 b(dass)28341
53410 y Fl(\000)-367 b(!)28341 54317 y Fn(AP)630 b Fo(k)-36
b(ein)448 b(Vielfac)-36 b(hes)450 b(v)-36 b(on)42144
53410 y Fl(\000)-332 b(!)42144 54317 y Fn(AB)461 b Fl(\))921
56309 y Fn(P)704 b(=)-804 b Fl(2)368 b Fn(g)427 b Fo(ist.)379
b(Alternativ)h(kann)f(man)f(auc)-36 b(h)379 b(rec)-36
b(hnerisc)g(h)377 b(zeigen,)j(dass)f(es)g(k)-36 b(einen)379
b(W)-108 b(ert)378 b(f\374r)921 59999 y Fn(s)433 b Fo(gibt,)h(so)36
b(dass)434 b(die)g(Gleic)-36 b(h)g(ung)17208 56723 y
Fg(0)17208 58671 y(B)17208 59335 y(B)17208 59999 y(B)17208
60708 y(@)18509 58074 y Fl(\000)p Fm(1)19542 60065 y(5)19542
62057 y(6)20525 56723 y Fg(1)20525 58671 y(C)20525 59335
y(C)20525 59999 y(C)20525 60708 y(A)21862 59999 y Fm(=)23243
56723 y Fg(0)23243 58671 y(B)23243 59335 y(B)23243 59999
y(B)23243 60708 y(@)25577 58074 y Fm(2)24544 60065 y
Fl(\000)p Fm(3)25577 62057 y(2)26559 56723 y Fg(1)26559
58671 y(C)26559 59335 y(C)26559 59999 y(C)26559 60708
y(A)27823 59999 y Fm(+)295 b Fn(s)g Fl(\001)30702 56723
y Fg(0)30702 58671 y(B)30702 59335 y(B)30702 59999 y(B)30702
60708 y(@)33036 58074 y Fm(3)33036 60065 y(4)32003 62057
y Fl(\000)p Fm(2)34018 56723 y Fg(1)34018 58671 y(C)34018
59335 y(C)34018 59999 y(C)34018 60708 y(A)35420 59999
y Fo(erf\374llt)434 b(ist.)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 47992 30566 a Fi(___/1)p 1 0 0
TeXcolorrgb 47990 32558 a Fh(A)-31 b(G)369 b(3.4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 66131
V 0 TeXcolorgray 24746 81281 a Fo(5)p 0 TeXcolorgray
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(A)-60 b(G)841 b(3.4)e(-)i(10)e(Normalv)-60
b(ektoren)840 b(-)g(O)-60 b(A)840 b(-)g(BIFIE)h(-)f(K)-60
b(omp)60 b(etenz-)-2331 4515 y(c)-60 b(hec)g(k)718 b(2016)p
0 TeXcolorgray -1391 9262 a Fo(10.)p 0 TeXcolorgray 651
w(Gegeb)36 b(en)433 b(ist)h(der)f(V)-108 b(ektor)14521
8690 y Fl(\000)-1033 b(!)14844 9262 y Fn(a)692 b Fm(=)17599
5986 y Fg(0)17599 7934 y(B)17599 8598 y(B)17599 9262
y(B)17599 9971 y(@)18900 7337 y Fm(4)18900 9329 y(1)18900
11321 y(2)19882 5986 y Fg(1)19882 7934 y(C)19882 8598
y(C)19882 9262 y(C)19882 9971 y(A)20851 9262 y Fo(.)921
15904 y(Bestimme)418 b(die)f(K)-36 b(o)36 b(ordinate)418
b Fn(z)16423 16103 y Fd(b)17298 15904 y Fo(des)g(V)-108
b(ektors)24253 14982 y Fl(\000)-1033 b(!)24641 15904
y Fn(b)757 b Fm(=)27331 12628 y Fg(0)27331 14576 y(B)27331
15240 y(B)27331 15904 y(B)27331 16613 y(@)29044 13979
y Fm(4)29044 15970 y(2)28632 17962 y Fn(z)29236 18161
y Fd(b)30026 12628 y Fg(1)30026 14576 y(C)30026 15240
y(C)30026 15904 y(C)30026 16613 y(A)31412 15904 y Fo(so,)418
b(dass)36171 15332 y Fl(\000)-1033 b(!)36493 15904 y
Fn(a)740 b Fo(und)40502 14982 y Fl(\000)-1033 b(!)40889
15904 y Fn(b)806 b Fo(aufein-)921 19587 y(ander)433 b(normal)h(stehen.)
921 24124 y Fn(z)1525 24323 y Fd(b)2352 24124 y Fm(=)p
1 0 0 TeXcolorrgb 433 w Fl(\000)p Fm(9)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 9262 a Fi(___/1)p
1 0 0 TeXcolorrgb 47990 11254 a Fh(A)-31 b(G)369 b(3.4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
27798 54804 45 v 0 TeXcolorgray 24746 81281 a Fo(6)p
0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 a Fp(A)-60 b(G)721 b(3.4)f(-)g(11)g(Gerade)g
(aufstellen)e(-)i(O)-60 b(A)721 b(-)f(BIFIE)h(-)f(K)-60
b(omp)60 b(etenz-)-2331 4515 y(c)-60 b(hec)g(k)718 b(2016)p
0 TeXcolorgray -1391 7823 a Fo(11.)p 0 TeXcolorgray 651
w(In)404 b(der)g(nac)-36 b(hstehenden)402 b(Abbildung)h(sind)h(eine)g
(Gerade)g Fn(g)451 b Fo(durc)-36 b(h)403 b(die)h(Punkte)g
Fn(P)585 b Fo(und)403 b Fn(Q)921 9815 y Fo(so)-36 b(wie)434
b(der)g(Punkt)f Fn(A)g Fo(dargestellt.)p 0 TeXcolorgray
0 TeXcolorgray 7667 36204 a
 currentpoint currentpoint translate 1.12454 1.12454 scale neg exch
neg exch translate
 7667 36204 a 8100 36204 a
tx@Dict begin  CM STV CP T newpath /a 0.0 def /w 249.00056 a add def
/d 0.0 a add neg def /h 193.02328 a add def a neg d moveto a neg h
L w h L w d L closepath clip newpath 0 0 moveto setmatrix end

8100 36204 a 14068 33507 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 T 7 { gsave
 /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L
stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1. 
1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 195.0938 0.0 -53.90677 0.0   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 0.0 28.45274 T } repeat end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -28.45274 0.0 T 9 {
gsave  /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0
0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def /ArrowInside { } def  gsave 0.4 SLW 0.75  setgray  /ArrowA {
BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0
moveto  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 1
setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  } def /ArrowInside
{ } def  [ 0.0 168.65855 0.0 -24.36473   /Lineto /lineto load def 0
 setlinejoin false  NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if
() length 0 gt { 3.0 2.  CLW mul add dup 1.4  mul exch 0.25 mul neg
add /arrowlength exch def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha
y2 y1 sub x2 x1 sub Atan def ArrowA x1 Alpha cos arrowlength mul add
y1 Alpha sin arrowlength mul add /n n 1 sub def n { 4 copy /y1 ED /x1
ED /y2 ED /x2 ED x1 y1 0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan
def /ArrowPos 0.  def /dArrowPos 0.5  abs def 1.  cvi { /ArrowPos ArrowPos
dArrowPos add def x1 Alpha cos ArrowPos mul add y1 Alpha sin ArrowPos
mul add ArrowInside pop pop } repeat }{ /ArrowPos 0.  def /dArrowPos
1. 1 gt {1.0 1. 1.0 add div }{0.5 } ifelse def 1.  cvi { /ArrowPos
ArrowPos dArrowPos add def x2 x1 sub ArrowPos mul x1 add y2 y1 sub
ArrowPos mul y1 add ArrowInside pop pop } repeat } ifelse pop pop Lineto
} repeat }{ ArrowA /n n 2 sub def n { Lineto } repeat } ifelse CP 4
2 roll ArrowB L pop pop } if   gsave 0.4 SLW 0.75  setgray  1. .setopacityalpha
  1  setlinecap [  1.5  1.5 ] -2 -1 add  DashLine  grestore grestore
grestore 28.45274 0.0 T } repeat end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 195.0938  0 -53.90677  0 ArrowA CP 4
2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq false and exch 2 lt true and or { /viceversa -53.90677
 195.0938  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-24.36473  def /maxTickline 168.65855  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { xStart } def /MaxValue { xEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke stroke} def /subLSstroke {  0  setlinejoin 0 
setlinecap stroke stroke} def 0 dT MaxValue 1 add { /cntTick exch def
logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add div
dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline  moveto x maxTickline  lineto } { x tickstart STsize mul
 moveto x tickend STsize mul  lineto } ifelse } if } for } for subTwidth
SLW subTColor subLSstroke grestore stroke /dsubT 0 def } if dsubT abs
0 gt { gsave /cntsubTick cntTick dsubT add def subTNo 1 sub { cntsubTick
abs MaxValue abs le { false { cntsubTick minTickline STsize mul  moveto
cntsubTick maxTickline STsize mul  lineto } { cntsubTick tickstart
STsize mul  moveto cntsubTick tickend STsize mul  lineto } ifelse }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave false {
cntTick minTickline  moveto cntTick maxTickline  lineto } { cntTick
tickstart  moveto cntTick tickend  lineto } ifelse Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for /showOrigin
true def /dT dT neg def /dsubT dsubT neg def 0 dT MinValue epsilon
viceversa { add }{ sub } ifelse { /cntTick exch def logLines { gsave
1 1 DT cvi { 1 sub /OffSet exch def -10 subTNo 1 add div dup 10 add
exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet add 28.45274
 mul cntTick add def x abs MinValue abs le { false { x minTickline
 moveto x maxTickline  lineto } { x tickstart STsize mul  moveto x
tickend STsize mul  lineto } ifelse } if } for } for /dsubT 0 def subTwidth
SLW subTColor subLSstroke grestore } dsubT abs 0 gt { gsave /cntsubTick
cntTick dsubT add def subTNo 1 sub { cntsubTick abs MinValue abs le
{ cntsubTick tickstart STsize mul  moveto cntsubTick tickend STsize
mul  lineto }{ exit } ifelse /cntsubTick cntsubTick dsubT add def }
repeat subTwidth SLW subTColor subLSstroke grestore } if showOrigin
{ gsave cntTick tickstart  moveto cntTick tickend  lineto Twidth SLW
TColor LSstroke grestore }{ /showOrigin true def } ifelse } for } if
 end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 168.65855
0.0 -24.36473   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 195.0938
0.0 -53.90677 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto }
def /ArrowB { BeginArrow 1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul
add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1 scale } if
gsave w neg h moveto 0 0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha
 fill grestore grestore 0 h a sub moveto   EndArrow  } def /ArrowInside
{ } def   /showOrigin true def 0 168.65855  0 -24.36473  ArrowA CP
4 2 roll ArrowB 2 copy /yEnd exch def /xEnd exch def gsave L  0  setlinejoin
0  setlinecap stroke  stroke grestore /yStart exch def /xStart exch
def 0 dup 2 mod 0 eq true and exch 2 lt false and or { /viceversa -24.36473
 168.65855  gt { true }{ false } ifelse def /epsilon 0.01 def /minTickline
-53.90677  def /maxTickline 195.0938  def /dT 1864679 abs 65536 div
viceversa { neg } if def /DT 1. abs viceversa { neg } if def /subTNo
2 def subTNo 0 gt { /dsubT dT subTNo div def}{ /dsubT 0 def } ifelse
-2.0 0.0 /tickend exch def /tickstart exch def /Twidth 0.4  def /subTwidth
0.2  def /STsize 0.75 def /TColor { 0  setgray  } def /subTColor {
0.5  setgray  } def /MinValue { yStart } def /MaxValue { yEnd 3.0 2.
 CLW mul add 1.4  mul viceversa { add epsilon sub }{ sub epsilon add
} ifelse } def /logLines { false } def /LSstroke {  0  setlinejoin
0  setlinecap stroke  stroke} def /subLSstroke {  0  setlinejoin 0
 setlinecap stroke  stroke} def 0 dT MaxValue 1 add { /cntTick exch
def logLines { gsave 1 1 DT { 1 sub /OffSet exch def -10 subTNo 1 add
div dup 10 add exch dup -0.1 mul 1 add { /dx exch def /x dx log OffSet
add 28.45274  mul cntTick add def x abs MaxValue abs le { false { x
minTickline exch moveto x maxTickline exch lineto } { x tickstart STsize
mul exch moveto x tickend STsize mul exch lineto } ifelse } if } for
} for subTwidth SLW subTColor subLSstroke grestore stroke /dsubT 0
def } if dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def subTNo
1 sub { cntsubTick abs MaxValue abs le { false { cntsubTick minTickline
STsize mul exch moveto cntsubTick maxTickline STsize mul exch lineto
} { cntsubTick tickstart STsize mul exch moveto cntsubTick tickend
STsize mul exch lineto } ifelse }{ exit } ifelse /cntsubTick cntsubTick
dsubT add def } repeat subTwidth SLW subTColor subLSstroke grestore
} if showOrigin { gsave false { cntTick minTickline exch moveto cntTick
maxTickline exch lineto } { cntTick tickstart exch moveto cntTick tickend
exch lineto } ifelse Twidth SLW TColor LSstroke grestore }{ /showOrigin
true def } ifelse } for /showOrigin true def /dT dT neg def /dsubT
dsubT neg def 0 dT MinValue epsilon viceversa { add }{ sub } ifelse
{ /cntTick exch def logLines { gsave 1 1 DT cvi { 1 sub /OffSet exch
def -10 subTNo 1 add div dup 10 add exch dup -0.1 mul 1 add { /dx exch
def /x dx log OffSet add 28.45274  mul cntTick add def x abs MinValue
abs le { false { x minTickline exch moveto x maxTickline exch lineto
} { x tickstart STsize mul exch moveto x tickend STsize mul exch lineto
} ifelse } if } for } for /dsubT 0 def subTwidth SLW subTColor subLSstroke
grestore } dsubT abs 0 gt { gsave /cntsubTick cntTick dsubT add def
subTNo 1 sub { cntsubTick abs MinValue abs le { cntsubTick tickstart
STsize mul exch moveto cntsubTick tickend STsize mul exch lineto }{
exit } ifelse /cntsubTick cntsubTick dsubT add def } repeat subTwidth
SLW subTColor subLSstroke grestore } if showOrigin { gsave cntTick
tickstart exch moveto cntTick tickend exch lineto Twidth SLW TColor
LSstroke grestore }{ /showOrigin true def } ifelse } for } if  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 0.0 168.65855
0.0 -24.36473   /Lineto /lineto load def 0  setlinejoin false  NArray
n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0 2.  CLW
mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch def 4
copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan def
ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength mul
add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1 0.5
 1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul
dup /h ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0
0 L w h L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore
grestore 0 h a sub moveto   EndArrow  } def /ArrowInside { } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale  false 0.25 1.4 3.0 2. CLW mul add dup 2 div /w ED mul dup /h
ED mul /a ED { 0 h T 1 -1 scale } if gsave w neg h moveto 0 0 L w h
L w neg a neg rlineto gsave  1. .setopacityalpha  fill grestore grestore
0 h a sub moveto   EndArrow  } def /ArrowInside { } def  [ 195.0938
0.0 -53.90677 0.0   /Lineto /lineto load def 0  setlinejoin false 
NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if () length 0 gt { 3.0
2.  CLW mul add dup 1.4  mul exch 0.25 mul neg add /arrowlength exch
def 4 copy /y1 ED /x1 ED /y2 ED /x2 ED /Alpha y2 y1 sub x2 x1 sub Atan
def ArrowA x1 Alpha cos arrowlength mul add y1 Alpha sin arrowlength
mul add /n n 1 sub def n { 4 copy /y1 ED /x1 ED /y2 ED /x2 ED x1 y1
0.5  1 gt { /Alpha y2 y1 sub x2 x1 sub Atan def /ArrowPos 0.  def /dArrowPos
0.5  abs def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def x1 Alpha
cos ArrowPos mul add y1 Alpha sin ArrowPos mul add ArrowInside pop
pop } repeat }{ /ArrowPos 0.  def /dArrowPos 1. 1 gt {1.0 1. 1.0 add
div }{0.5 } ifelse def 1.  cvi { /ArrowPos ArrowPos dArrowPos add def
x2 x1 sub ArrowPos mul x1 add y2 y1 sub ArrowPos mul y1 add ArrowInside
pop pop } repeat } ifelse pop pop Lineto } repeat }{ ArrowA /n n 2
sub def n { Lineto } repeat } ifelse CP 4 2 roll ArrowB L pop pop }
if   gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial 12823 30643 a
Fj(1)12822 27493 y(2)12822 24344 y(3)12822 21194 y(4)12822
18044 y(5)16982 34853 y(1)2680 b(2)f(3)h(4)f(5)h(6)-22883
b Fc(\000)p Fj(1)14068 33507 y
tx@Dict begin  gsave STV CP T /ps@refangle 140.  def grestore  end
 14068 33507 a 14068 33507
a
tx@Dict begin  { 195.0938 168.65855 pop 0.0 0.0 exch pop } PutCoor
PutBegin  end
 14068 33507 a 14068 33507 a
tx@Dict begin  { 5.0 6.2015 5.16667 0.0 140.  Uput UUput } PutCoor
PutBegin  end
 14068 33507 a 13725 33793
a Fo(x)14068 33507 y
tx@Dict begin  PutEnd  end
 14068 33507 a 14068 33507 a
tx@Dict begin  PutEnd  end
 14068
33507 a 14068 33507 a
tx@Dict begin  gsave STV CP T /ps@refangle -40.  def grestore  end
 14068 33507 a 14068 33507 a
tx@Dict begin  { 0.0 0.0 pop 195.0938 168.65855 exch pop } PutCoor
PutBegin  end
 14068
33507 a 14068 33507 a
tx@Dict begin  { 5.0 6.2015 5.16667 2.33331 -40.  Uput UUput } PutCoor
PutBegin  end
 14068 33507 a 13725 33664 a Fo(y)14068
33507 y
tx@Dict begin  PutEnd  end
 14068 33507 a 14068 33507 a
tx@Dict begin  PutEnd  end
 14068 33507 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
/ArrowInside { } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ } def /ArrowInside { } def    /x -1.8946 def /x1 6.85676 def /dx
x1 x sub 49 div def /F@pstplot ((--6.--1.*x)/3.)  tx@AlgToPs begin
AlgToPs end cvx def /xy { x 28.45274 mul F@pstplot 28.45274 mul } def
 /ps@Exit false def xy moveto  49 1 sub { /x x dx add def xy  dup 1.e30
28.45274 mul gt { moveto } { dup -1.e30 28.45274 mul lt { moveto }
{ L } ifelse } ifelse  } ps@Exit { exit } if repeat ps@Exit not { /x
x1 def xy  dup 1.e30 28.45274 mul gt { moveto } { dup -1.e30 28.45274
mul lt { moveto } { L } ifelse } ifelse  } if  gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 28.45274 142.26372
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
14068 33507 a
tx@Dict begin  { 31.0238 146.46068 } PutCoor PutBegin  end
 14068 33507 a -221 x Fd(A)261 b Fj(=)g(\(1)p
Fd(;)157 b Fj(5\))14068 33507 y
tx@Dict begin  PutEnd  end
 14068 33507 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 0.0 56.90549   false
NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0. [1.0 0.0
0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale (b) show
grestore } bind def   1. .setopacityalpha  newpath n { transform floor
.5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial 14068 33507 a
tx@Dict begin  { 4.00029 48.50156 } PutCoor PutBegin  end
 14068 33507 a
-221 x Fd(P)391 b Fj(=)261 b(\(0)p Fd(;)158 b Fj(2\))14068
33507 y
tx@Dict begin  PutEnd  end
 14068 33507 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  [ 85.35823 85.35823
  false NArray  /DS 3.0 0. CLW mul add 2 div def /PSTricksDotFont 0.
[1.0 0.0 0.0 1.0 0.0 0.0] FontDot /Dot { moveto gsave 1.  1.  scale
(b) show grestore } bind def   1. .setopacityalpha  newpath n { transform
floor .5 add exch floor .5 add exch itransform Dot } repeat  end
 
@endspecial
14068 33507 a
tx@Dict begin  { 88.93088 75.52463 } PutCoor PutBegin  end
 14068 33507 a -221 x Fd(Q)261 b Fj(=)g(\(3)p
Fd(;)158 b Fj(3\))14068 33507 y
tx@Dict begin  PutEnd  end
 14068 33507 a 14068 33507
a
tx@Dict begin  { -46.18578 44.64105 } PutCoor PutBegin  end
 14068 33507 a -172 x Fd(g)14068 33507 y
tx@Dict begin  PutEnd  end
 14068 33507
a 35664 36204 a
currentpoint initclip moveto
 35664 36204 a 7667 36204 a
 currentpoint currentpoint translate 1 1.12454 div 1 1.12454 div scale
neg exch neg exch translate
 7667 36204
a 921 40189 a Fo(Ermittle)323 b(eine)h(Gleic)-36 b(h)g(ung)323
b(der)g(Geraden)f Fn(h)p Fo(,)i(die)f(durc)-36 b(h)323
b Fn(A)g Fo(v)-36 b(erl\344uft)324 b(und)f(normal)h(zu)f
Fn(g)371 b Fo(ist.)p 1 0 0 TeXcolorrgb 921 44726 a Fn(h)e
Fm(:)g(3)p Fn(x)296 b Fm(+)e Fn(y)417 b Fm(=)369 b(8)921
47419 y Fo(o)36 b(der:)434 b Fn(h)368 b Fm(:)i Fn(X)474
b Fm(=)8990 45139 y Fg(0)8990 47132 y(@)10291 46490 y
Fm(1)10291 48482 y(5)11273 45139 y Fg(1)11273 47132 y(A)12537
47419 y Fm(+)295 b Fn(t)g Fl(\001)15273 45139 y Fg(0)15273
47132 y(@)17607 46490 y Fm(1)16574 48482 y Fl(\000)p
Fm(3)18589 45139 y Fg(1)18589 47132 y(A)19991 47419 y
Fo(mit)434 b Fn(t)369 b Fl(2)f Fk(R)921 51957 y Fo(Ein)401
b(Punkt)f(f\374r)h(eine)g(k)-36 b(orrekte)402 b(Gleic)-36
b(h)g(ung)400 b(bzw.)i(eine)f(k)-36 b(orrekte)401 b(P)-36
b(arameterdarstellung)921 53949 y(der)433 b(Geraden)g
Fn(h)p Fo(,)g(w)-36 b(ob)36 b(ei)434 b Fn(t)369 b Fl(2)g
Fk(R)434 b Fo(nic)-36 b(h)g(t)432 b(angegeb)36 b(en)434
b(sein)g(m)-36 b(uss.)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7823 a Fi(___/1)p 1 0 0 TeXcolorrgb
47990 9815 a Fh(A)-31 b(G)369 b(3.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 57682 54804 45
v 0 TeXcolorgray 24746 81281 a Fo(7)p 0 TeXcolorgray
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1599 a Fp(A)-60 b(G)721 b(3.4)f(-)h(12)g(P)-60
b(arameterdarstellung)718 b(-)j(O)-60 b(A)721 b(-)f(Matura)g(2014/15)
-2617 4622 y(-)e(Haupttermin)p 0 TeXcolorgray -1391 7929
a Fo(12.)p 0 TeXcolorgray 651 w(Die)391 b(zw)-36 b(ei)390
b(Punkte)f Fn(A)369 b Fm(=)g(\()p Fl(\000)p Fm(1)p Fl(j)206
b(\000)g Fm(6)p Fl(j)p Fm(2\))391 b Fo(und)e Fn(B)436
b Fm(=)368 b(\(5)p Fl(j)206 b(\000)g Fm(3)p Fl(j)g(\000)g
Fm(3\))391 b Fo(liegen)f(auf)h(einer)e(Geraden)921 9921
y Fn(g)481 b Fo(in)433 b Fk(R)4501 9439 y Fj(3)5028 9921
y Fo(.)921 14458 y(Gib)k(eine)g(P)-36 b(arameterdarstellung)437
b(dieser)g(Geraden)f Fn(g)485 b Fo(un)-36 b(ter)436 b(V)-108
b(erw)-36 b(endung)436 b(der)g(k)-36 b(onkre-)921 16450
y(ten)433 b(K)-36 b(o)36 b(ordinaten)434 b(der)f(Punkte)g
Fn(A)g Fo(und)g Fn(B)500 b Fo(an.)921 22427 y Fn(g)416
b Fm(:)803 b Fn(X)474 b Fm(=)p 1 0 0 TeXcolorrgb 6122
19150 a Fg(0)6122 21099 y(B)6122 21763 y(B)6122 22427
y(B)6122 23136 y(@)7423 20501 y Fl(\000)p Fm(1)7423 22493
y Fl(\000)p Fm(6)8456 24485 y(2)9439 19150 y Fg(1)9439
21099 y(C)9439 21763 y(C)9439 22427 y(C)9439 23136 y(A)10702
22427 y Fm(+)295 b Fn(t)g Fl(\001)13438 19150 y Fg(0)13438
21099 y(B)13438 21763 y(B)13438 22427 y(B)13438 23136
y(@)15772 20501 y Fm(6)15772 22493 y(3)14739 24485 y
Fl(\000)p Fm(5)16755 19150 y Fg(1)16755 21099 y(C)16755
21763 y(C)16755 22427 y(C)16755 23136 y(A)18157 22427
y Fo(mit)433 b Fn(t)369 b Fl(2)g Fk(R)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 7929 a Fi(___/1)p
1 0 0 TeXcolorrgb 47990 9921 a Fh(A)-31 b(G)369 b(3.4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
28559 54804 45 v -2331 33861 a Fp(A)-60 b(G)710 b(3.4)f(-)h(13)g(Sc)-60
b(hnittpunkt)706 b(einer)i(Geraden)h(mit)h(der)e Fb(x)p
Fp(-A)-60 b(c)g(hse)711 b(-)-2331 36883 y(O)-60 b(A)718
b(-)g(Matura)f(2014/15)g(-)g(Neb)60 b(en)-60 b(termin)716
b(1)p 0 TeXcolorgray -1391 40190 a Fo(13.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(ist)h(folgende)g(P)-36 b(arameterdarstellung)
433 b(einer)h(Geraden)e Fn(g)48 b Fo(:)921 43437 y Fn(g)416
b Fm(:)803 b Fn(X)474 b Fm(=)6058 41157 y Fg(0)6058 43149
y(@)8392 42508 y Fm(1)7358 44499 y Fl(\000)p Fm(5)9374
41157 y Fg(1)9374 43149 y(A)10638 43437 y Fm(+)295 b
Fn(t)g Fl(\001)13374 41157 y Fg(0)13374 43149 y(@)14674
42508 y Fm(1)14674 44499 y(7)15657 41157 y Fg(1)15657
43149 y(A)17059 43437 y Fo(mit)434 b Fn(t)368 b Fl(2)h
Fk(R)921 48669 y Fo(Gib)433 b(die)g(K)-36 b(o)36 b(ordinaten)434
b(des)f(Sc)-36 b(hnittpunktes)432 b Fn(S)511 b Fo(der)433
b(Geraden)f Fn(g)481 b Fo(mit)434 b(der)f Fn(x)p Fo(-A)-36
b(c)g(hse)433 b(an.)921 53206 y Fn(S)446 b Fm(=)p 3548
53206 15749 34 v 1 0 0 TeXcolorrgb 921 53936 a Fg(8)921
54932 y(>)921 55264 y(<)921 57257 y(>)921 57589 y(:)1905
55543 y Fm(1)295 b(+)g Fn(t)369 b Fm(=)g Fn(x)1905 57934
y Fl(\000)p Fm(5)296 b(+)e(7)p Fn(t)369 b Fm(=)g(0)921
60409 y Fl(\))803 b Fn(t)369 b Fm(=)5404 59886 y Fj(5)p
5404 60099 471 45 v 5404 60867 a(7)6007 60409 y Fo(,)434
b Fn(x)369 b Fm(=)9424 59886 y Fj(12)p 9424 60099 941
45 v 9659 60867 a(7)921 62954 y Fl(\))803 b Fn(S)446
b Fm(=)5679 61670 y Fg(\020)6473 62431 y Fj(12)p 6473
62644 V 6708 63412 a(7)7768 62954 y Fl(j)p Fm(0)8920
61670 y Fg(\021)921 67491 y Fo(L\366sungssc)-36 b(hl\374ssel:)921
69483 y(Ein)693 b(Punkt)f(f\374r)h(die)f(ric)-36 b(h)g(tige)693
b(L\366sung,)g(w)-36 b(ob)36 b(ei)694 b(b)36 b(eide)692
b(K)-36 b(o)36 b(ordinaten)693 b(des)f(gesuc)-36 b(h)g(ten)921
71475 y(Punktes)442 b(k)-36 b(orrekt)444 b(angegeb)36
b(en)443 b(sein)g(m)-36 b(\374ssen.)442 b(Andere)g(Sc)-36
b(hreib)g(w)g(eisen)442 b(des)g(Ergebnisses)921 73467
y(sind)513 b(eb)36 b(enfalls)514 b(als)g(ric)-36 b(h)g(tig)513
b(zu)g(w)-36 b(erten.)513 b(T)-108 b(oleranzin)-36 b(terv)-72
b(all)514 b(f\374r)f(die)g(erste)g(K)-36 b(o)36 b(ordinate:)921
75459 y Fm([)8 b(1)p Fn(;)p Fm(70;)221 b(1)p Fn(;)p Fm(72])p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
40190 a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 42182 a Fh(A)-31
b(G)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray 0 TeXcolorgray 24746 81281 a Fo(8)p 0 TeXcolorgray
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -2331 1493 54804 45 v -2331 6921 a Fp(A)-60
b(G)609 b(3.4)e(-)h(14)g(Arc)-60 b(h\344ologie)607 b(-)h(O)-60
b(A)608 b(-)g(Matura)g(2014/15)f(-)i(K)-60 b(omp)60 b(en-)-2331
9944 y(sationspr\374fung)p 0 TeXcolorgray -1391 13251
a Fo(14.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)512 b(sind)g(zw)-36
b(ei)513 b(Geraden)e Fn(g)560 b Fo(und)512 b Fn(h)g Fo(in)g
Fk(R)25055 12769 y Fj(3)25581 13251 y Fo(.)i(Die)f(Gerade)f
Fn(g)560 b Fo(ist)512 b(durc)-36 b(h)511 b(eine)i(P)-36
b(ara-)921 16941 y(meterdarstellung)460 b Fn(X)519 b
Fm(=)13951 13664 y Fg(0)13951 15612 y(B)13951 16277 y(B)13951
16941 y(B)13951 17649 y(@)16285 15015 y Fm(3)15252 17007
y Fl(\000)p Fm(4)15252 18999 y Fl(\000)p Fm(7)17267 13664
y Fg(1)17267 15612 y(C)17267 16277 y(C)17267 16941 y(C)17267
17649 y(A)18549 16941 y Fm(+)313 b Fn(t)g Fl(\001)21339
13664 y Fg(0)21339 15612 y(B)21339 16277 y(B)21339 16941
y(B)21339 17649 y(@)23673 15015 y Fm(1)22640 17007 y
Fl(\000)p Fm(1)22640 18999 y Fl(\000)p Fm(2)24656 13664
y Fg(1)24656 15612 y(C)24656 16277 y(C)24656 16941 y(C)24656
17649 y(A)26084 16941 y Fo(mit)461 b Fn(t)414 b Fl(2)g
Fk(R)460 b Fo(festgelegt.)i(Die)f(Gerade)f Fn(h)887 20705
y Fo(v)-36 b(erl\344uft)434 b(durc)-36 b(h)433 b(die)g(Punkte)g
Fn(A)369 b Fm(=)g(\(0)p Fl(j)p Fm(8)p Fl(j)p Fm(0\))434
b Fo(und)e Fn(B)437 b Fm(=)368 b(\()p Fl(\000)p Fm(2)p
Fl(j)p Fm(28)p Fl(j)p Fm(6\))p Fo(.)921 23250 y(Ermittle)433
b(die)h(K)-36 b(o)36 b(ordinaten)434 b(des)f(Sc)-36 b(hnittpunktes)431
b(dieser)j(b)36 b(eiden)433 b(Geraden.)p 1 0 0 TeXcolorrgb
921 25795 a(M\366glic)-36 b(he)434 b(Berec)-36 b(hn)g(ung:)921
31772 y Fn(h)369 b Fm(:)g Fn(X)474 b Fm(=)5702 28496
y Fg(0)5702 30444 y(B)5702 31108 y(B)5702 31772 y(B)5702
32481 y(@)7003 29847 y Fm(0)7003 31839 y(8)7003 33831
y(0)7986 28496 y Fg(1)7986 30444 y(C)7986 31108 y(C)7986
31772 y(C)7986 32481 y(A)9249 31772 y Fm(+)295 b Fn(s)g
Fl(\001)12128 28496 y Fg(0)12128 30444 y(B)12128 31108
y(B)12128 31772 y(B)12128 32481 y(@)13429 29847 y Fl(\000)p
Fm(2)13812 31839 y(20)14462 33831 y(6)15444 28496 y Fg(1)15444
30444 y(C)15444 31108 y(C)15444 31772 y(C)15444 32481
y(A)921 37085 y Fn(I)473 b Fm(:)369 b(3)296 b(+)f Fn(t)368
b Fm(=)h Fl(\000)p Fm(2)p Fn(s)921 39077 y(I)104 b(I)473
b Fm(:)369 b Fl(\000)p Fm(4)296 b Fl(\000)f Fn(t)369
b Fm(=)g(8)295 b(+)g(20)p Fn(s)921 41069 y(I)104 b(I)g(I)473
b Fm(:)369 b Fl(\000)p Fm(7)296 b Fl(\000)g Fm(2)p Fn(t)369
b Fm(=)f(6)p Fn(s)921 45606 y Fl(\))h Fn(t)g Fm(=)g Fl(\000)p
Fm(2)434 b Fo(bzw.)g Fn(s)368 b Fm(=)h Fl(\000)p Fm(0)p
Fn(;)p Fm(5)h Fl(\))f Fn(S)447 b Fm(=)368 b(\(1)p Fl(j)295
b(\000)h Fm(2)p Fl(j)f(\000)h Fm(3\))p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 13251 a Fi(___/1)p
1 0 0 TeXcolorrgb 47990 15243 a Fh(A)-31 b(G)369 b(3.4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
49414 V 0 TeXcolorgray 24746 81281 a Fo(9)p 0 TeXcolorgray
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fp(A)-60 b(G)966 b(3.4)f(-)h(15)f
(Geradengleic)-60 b(h)g(ung)963 b(-)j(O)-60 b(A)966 b(-)f(Matura)g
(2015/16)h(-)-2331 4622 y(Neb)60 b(en)-60 b(termin)716
b(1)p 0 TeXcolorgray -1391 8372 a Fo(15.)p 0 TeXcolorgray
651 w(Die)413 b(Gerade)e Fn(g)460 b Fo(ist)412 b(durc)-36
b(h)411 b(eine)h(P)-36 b(arameterdarstellung)411 b Fn(g)417
b Fm(:)1670 b Fn(X)474 b Fm(=)35504 6092 y Fg(0)35504
8085 y(@)36805 7443 y Fm(2)36805 9435 y(6)37788 6092
y Fg(1)37788 8085 y(A)39007 8372 y Fm(+)251 b Fn(t)g
Fl(\001)41611 6092 y Fg(0)41611 8085 y(@)43945 7443 y
Fm(3)42912 9435 y Fl(\000)p Fm(5)44928 6092 y Fg(1)44928
8085 y(A)921 11059 y Fo(gegeb)36 b(en.)921 15596 y(Gib)446
b(m\366glic)-36 b(he)447 b(w)-36 b(erte)447 b(der)f(P)-36
b(arameter)446 b Fn(a)h Fo(und)e Fn(b)i Fo(so)g(an,)f(dass)h(die)f
(durc)-36 b(h)446 b(die)g(Gleic)-36 b(h)g(ung)921 17588
y Fn(a)295 b Fl(\001)g Fn(x)g Fm(+)g Fn(b)g Fl(\001)h
Fn(y)416 b Fm(=)369 b(1)434 b Fo(gegeb)36 b(ene)434 b(Gerade)f
Fn(h)g Fo(normal)h(zur)f(Geraden)f Fn(g)481 b Fo(ist.)921
22125 y Fn(a)369 b Fm(=)p 1 0 0 TeXcolorrgb 433 w(3)p
0 0 0 TeXcolorrgb 921 24670 a Fn(b)g Fm(=)p 1 0 0 TeXcolorrgb
433 w Fl(\000)p Fm(5)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992
8372 a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 10364 a Fh(A)-31
b(G)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 28256 54804 45 v -2331 33685 a Fp(A)-60
b(G)718 b(3.4)f(-)h(16)f(P)-60 b(arallele)717 b(Gerade)g(-)g(O)-60
b(A)718 b(-)g(Matura)f(NT)g(2)h(15/16)p 0 TeXcolorgray
-1391 37914 a Fo(16.)p 0 TeXcolorgray 651 w(Gegeb)36
b(en)433 b(ist)h(die)f(Gerade)g Fn(g)417 b Fm(:)369 b
Fn(X)474 b Fm(=)19342 35633 y Fg(0)19342 37626 y(@)21676
36984 y Fm(1)20643 38976 y Fl(\000)p Fm(2)22659 35633
y Fg(1)22659 37626 y(A)23922 37914 y Fm(+)295 b Fn(s)g
Fl(\001)26801 35633 y Fg(0)26801 37626 y(@)28102 36984
y Fm(2)28102 38976 y(3)29084 35633 y Fg(1)29084 37626
y(A)30053 37914 y Fo(.)921 41161 y(Die)434 b(Gerade)f
Fn(h)g Fo(v)-36 b(erl\344uft)435 b(parallel)f(zu)g Fn(g)481
b Fo(durc)-36 b(h)432 b(den)h(K)-36 b(o)36 b(ordinaten)-36
b(ursprung.)921 43706 y(Gib)420 b(die)h(Gleic)-36 b(h)g(ung)420
b(der)h(Geraden)f Fn(h)g Fo(in)h(der)f(F)-108 b(orm)421
b Fn(a)269 b Fl(\001)g Fn(x)h Fm(+)f Fn(b)g Fl(\001)h
Fn(y)416 b Fm(=)369 b Fn(c)421 b Fo(mit)g Fn(a;)221 b(b;)g(c)370
b Fl(2)e Fk(R)421 b Fo(an.)921 46252 y Fn(h)369 b Fm(:)p
1 0 0 TeXcolorrgb 434 w(3)295 b Fl(\001)g Fn(x)h Fl(\000)f
Fm(2)g Fl(\001)h Fn(y)416 b Fm(=)369 b(0)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 37914 a Fi(___/1)p
1 0 0 TeXcolorrgb 47990 39906 a Fh(A)-31 b(G)369 b(3.4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray -2331
49985 V 0 TeXcolorgray 24421 81281 a Fo(10)p 0 TeXcolorgray
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1599 a Fp(A)-60 b(G)1071 b(3.4)e(-)i(17)f(P)-60
b(arallele)1070 b(Geraden)f(-)i(O)-60 b(A)1070 b(-)g(Matura)g(2013/14)
-2331 4622 y(Haupttermin)p 0 TeXcolorgray -1391 7929
a Fo(17.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)396 b(sind)g(Gleic)-36
b(h)g(ungen)395 b(der)g(Geraden)h Fn(g)444 b Fo(und)395
b Fn(h)p Fo(.)h(Die)h(b)36 b(eiden)396 b(Geraden)f(sind)h(nic)-36
b(h)g(t)921 9921 y(iden)g(t.)921 12466 y Fn(g)48 b Fo(:)433
b Fn(y)417 b Fm(=)369 b Fl(\000)5984 11943 y Fd(x)p 5984
12156 530 45 v 6014 12924 a Fj(4)6941 12466 y Fm(+)295
b(8)921 15913 y Fn(h)p Fo(:)434 b Fn(X)473 b Fm(=)5398
13633 y Fg(0)5398 15625 y(@)6699 14983 y Fm(4)6699 16975
y(3)7681 13633 y Fg(1)7681 15625 y(A)8945 15913 y Fm(+)295
b Fn(s)g Fl(\001)11824 13633 y Fg(0)11824 15625 y(@)14158
14983 y Fm(4)13124 16975 y Fl(\000)p Fm(1)15140 13633
y Fg(1)15140 15625 y(A)16542 15913 y Fo(mit)434 b Fn(s)368
b Fl(2)h Fk(R)921 19153 y Fo(Begr\374nde,)433 b(w)-36
b(arum)434 b(diese)f(b)36 b(eiden)433 b(Gerade)g(parallel)i(zueinander)
d(liegen!)p 1 0 0 TeXcolorrgb 921 23690 a(P)-36 b(arallele)435
b(Geraden)d(hab)36 b(en)433 b(die)h(gleic)-36 b(he)434
b(Steigung)f(bzw.)h(parallele)h(Ric)-36 b(h)g(tungv)g(ektoren.)921
26236 y Fn(k)1597 26435 y Fd(g)2501 26236 y Fm(=)369
b Fl(\000)5048 25713 y Fj(1)p 5048 25926 471 45 v 5048
26694 a(4)1069 29144 y Fa(#)-222 b(\024)1133 29682 y
Fn(a)2028 29881 y Fd(h)2994 29682 y Fm(=)4375 27402 y
Fg(0)4375 29395 y(@)6709 28753 y Fm(4)5676 30745 y Fl(\000)p
Fm(1)7691 27402 y Fg(1)7691 29395 y(A)8881 29682 y Fl(jj)9840
27402 y Fg(0)9841 29395 y(@)12260 28753 y Fm(1)11141
30745 y Fl(\000)12307 30222 y Fj(1)p 12307 30435 V 12307
31203 a(4)13243 27402 y Fg(1)13243 29395 y(A)14645 29682
y Fo(und)432 b(aus)19713 29144 y Fa(#)-221 b(\024)19778
29682 y Fn(a)581 b Fm(=)22422 27402 y Fg(0)22422 29395
y(@)23794 28753 y Fm(1)23723 30745 y Fn(k)24776 27402
y Fg(1)24776 29395 y(A)26178 29682 y Fo(folgt)435 b Fn(k)29853
29881 y Fd(h)30820 29682 y Fm(=)369 b Fn(k)32877 29881
y Fd(g)921 32922 y Fo(o)36 b(der:)921 35911 y Fn(g)416
b Fm(:)434 b Fn(X)474 b Fm(=)5689 33631 y Fg(0)5689 35623
y(@)6989 34981 y Fm(4)6989 36973 y(7)7972 33631 y Fg(1)7972
35623 y(A)9236 35911 y Fm(+)295 b Fn(t)11234 33631 y
Fg(0)11234 35623 y(@)13567 34981 y Fm(4)12534 36973 y
Fl(\000)p Fm(1)14550 33631 y Fg(1)14550 35623 y(A)15518
35911 y Fo(,)434 b Fn(t)369 b Fl(2)g Fk(R)921 38280 y
Fg(0)921 40272 y(@)3255 39631 y Fm(4)2222 41622 y Fl(\000)p
Fm(1)4237 38280 y Fg(1)4237 40272 y(A)5575 40560 y Fm(=)6955
38280 y Fg(0)6955 40272 y(@)9289 39631 y Fm(4)8256 41622
y Fl(\000)p Fm(1)10272 38280 y Fg(1)10272 40272 y(A)15257
40560 y Fo(Somit)434 b(ist)20976 40021 y Fa(#)-222 b(\024)21040
40560 y Fn(a)21935 40759 y Fd(g)22839 40560 y Fm(=)24367
40021 y Fa(#)h(\024)24432 40560 y Fn(a)25327 40759 y
Fd(h)25924 40560 y Fo(.)921 43800 y(Oder:)873 46345 y(A)-36
b(uc)g(h)432 b(eine)i(Begr\374ndung)e(mit)i(Normalv)-36
b(ektoren)435 b(ist)e(m\366glic)-36 b(h.)921 48891 y
Fn(g)48 b Fo(:)433 b Fn(x)296 b Fm(+)e(4)p Fn(y)418 b
Fm(=)368 b(32)921 50883 y Fn(h)p Fo(:)434 b Fn(x)295
b Fm(+)g(4)p Fn(y)417 b Fm(=)368 b(16)921 53428 y Fo(Somit)434
b(ist)6640 52889 y Fa(#)-222 b(\024)6658 53428 y Fn(n)7599
53627 y Fd(g)8134 53428 y Fl(jj)9020 52889 y Fa(#)g(\024)9037
53428 y Fn(n)9979 53627 y Fd(h)10577 53428 y Fo(.)921
55973 y(o)36 b(der:)1069 57980 y Fa(#)-222 b(\024)1086
58519 y Fn(n)2028 58718 y Fd(g)2858 58519 y Fl(\001)3670
57980 y Fa(#)g(\024)3734 58519 y Fn(a)4629 58718 y Fd(h)5596
58519 y Fm(=)368 b(0)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 47992 7929 a Fi(___/1)p 1 0 0 TeXcolorrgb
47990 9921 a Fh(A)-31 b(G)369 b(3.4)p 0 0 0 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray -2331 62365 54804 45
v 0 TeXcolorgray 24421 81281 a Fo(11)p 0 TeXcolorgray
eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 a Fp(A)-60 b(G)1071 b(3.4)f(-)h(18)f(P)-60
b(arameterdarstellung)1069 b(v)-60 b(on)1069 b(Geraden)h(-)h(MC)g(-)
-2331 4515 y(Matura)717 b(2013/14)g(1.)g(Neb)60 b(en)-60
b(termin)p 0 TeXcolorgray -1391 7823 a Fo(18.)p 0 TeXcolorgray
651 w(Gegeb)36 b(en)433 b(ist)h(eine)f(Gerade)g Fn(g)48
b Fo(:)921 12066 y Fn(g)g Fo(:)433 b Fn(X)474 b Fm(=)5320
8789 y Fg(0)5320 10738 y(B)5320 11402 y(B)5320 12066
y(B)5320 12775 y(@)6620 10140 y Fm(4)6620 12132 y(1)6620
14124 y(2)7603 8789 y Fg(1)7603 10738 y(C)7603 11402
y(C)7603 12066 y(C)7603 12775 y(A)8867 12066 y Fm(+)295
b Fn(s)f Fl(\001)11746 8789 y Fg(0)11746 10738 y(B)11746
11402 y(B)11746 12066 y(B)11746 12775 y(@)14079 10140
y Fm(2)13046 12132 y Fl(\000)p Fm(3)14079 14124 y(1)15062
8789 y Fg(1)15062 10738 y(C)15062 11402 y(C)15062 12066
y(C)15062 12775 y(A)16464 12066 y Fo(mit)434 b Fn(s)368
b Fl(2)h Fk(R)855 16383 y Fo(W)-108 b(elc)-36 b(he)530
b(der)g(folgenden)i(Geraden)d Fn(h)19704 16582 y Fd(i)20301
16383 y Fm(\()p Fn(i)534 b Fm(=)g(1)p Fn(;)p Fm(2)p Fn(;)221
b(:::;)p Fm(5\))534 b Fo(mit)d Fn(t)31660 16582 y Fd(i)32569
16383 y Fl(2)j Fk(R)221 b Fm(\()p Fn(i)535 b Fm(=)f(1)p
Fn(;)p Fm(2)p Fn(;)221 b(:::;)p Fm(5\))534 b Fo(sind)921
18375 y(parallel)435 b(zu)e Fn(g)48 b Fo(?)921 20367
y(Kreuze)433 b(die)h(b)36 b(eiden)433 b(zutre\033enden)e(An)-36
b(t)g(w)g(orten)433 b(an!)p 12736 23067 20912 45 v 12736
33247 45 10180 v 13445 28489 a Fn(h)14194 28688 y Fj(1)14719
28489 y Fo(:)h Fn(X)474 b Fm(=)18447 25212 y Fg(0)18447
27161 y(B)18447 27825 y(B)18447 28489 y(B)18447 29198
y(@)19748 26563 y Fm(8)19748 28555 y(2)19748 30547 y(4)20731
25212 y Fg(1)20731 27161 y(C)20731 27825 y(C)20731 28489
y(C)20731 29198 y(A)21994 28489 y Fm(+)295 b Fn(t)23771
28688 y Fj(1)24592 28489 y Fl(\001)25256 25212 y Fg(0)25256
27161 y(B)25256 27825 y(B)25256 28489 y(B)25256 29198
y(@)26557 26563 y Fl(\000)p Fm(3)27590 28555 y(1)27590
30547 y(2)28572 25212 y Fg(1)28572 27161 y(C)28572 27825
y(C)28572 28489 y(C)28572 29198 y(A)p 31238 33247 V 33603
33247 V 12736 33291 20912 45 v 12736 43470 45 10180 v
13445 38713 a Fn(h)14194 38912 y Fj(2)14719 38713 y Fo(:)434
b Fn(X)474 b Fm(=)18447 35436 y Fg(0)18447 37384 y(B)18447
38048 y(B)18447 38713 y(B)18447 39421 y(@)20781 36787
y Fm(3)20781 38779 y(4)19748 40771 y Fl(\000)p Fm(7)21764
35436 y Fg(1)21764 37384 y(C)21764 38048 y(C)21764 38713
y(C)21764 39421 y(A)23027 38713 y Fm(+)295 b Fn(t)24804
38912 y Fj(2)25625 38713 y Fl(\001)26289 35436 y Fg(0)26289
37384 y(B)26289 38048 y(B)26289 38713 y(B)26289 39421
y(@)28623 36787 y Fm(4)27590 38779 y Fl(\000)p Fm(6)28623
40771 y(2)29605 35436 y Fg(1)29605 37384 y(C)29605 38048
y(C)29605 38713 y(C)29605 39421 y(A)p 31238 43470 V 1 0 0
TeXcolorrgb 31947 38713 a Ff(4)p 0 0 0 TeXcolorrgb 1 0 0
TeXcolorrgb 0 TeXcolorgray 33603 43470 V 12736 43514
20912 45 v 12736 53804 45 10290 v 13445 48992 a Fn(h)14194
49191 y Fj(3)14719 48992 y Fo(:)434 b Fn(X)474 b Fm(=)18447
45715 y Fg(0)18447 47663 y(B)18447 48327 y(B)18447 48992
y(B)18447 49700 y(@)19748 47066 y Fm(4)19748 49058 y(1)19748
51050 y(2)20731 45715 y Fg(1)20731 47663 y(C)20731 48327
y(C)20731 48992 y(C)20731 49700 y(A)21994 48992 y Fm(+)295
b Fn(t)23771 49191 y Fj(3)24592 48992 y Fl(\001)25256
45715 y Fg(0)25256 47663 y(B)25256 48327 y(B)25256 48992
y(B)25256 49700 y(@)26557 47066 y Fl(\000)p Fm(2)27590
49058 y(1)26557 51050 y Fl(\000)p Fm(2)28572 45715 y
Fg(1)28572 47663 y(C)28572 48327 y(C)28572 48992 y(C)28572
49700 y(A)p 31238 53804 V 33603 53804 V 12736 53849 20912
45 v 12736 64139 45 10290 v 13445 59326 a Fn(h)14194
59525 y Fj(4)14719 59326 y Fo(:)434 b Fn(X)474 b Fm(=)18447
56049 y Fg(0)18447 57997 y(B)18447 58662 y(B)18447 59326
y(B)18447 60034 y(@)20781 57400 y Fm(3)20781 59392 y(5)19748
61384 y Fl(\000)p Fm(1)21764 56049 y Fg(1)21764 57997
y(C)21764 58662 y(C)21764 59326 y(C)21764 60034 y(A)23027
59326 y Fm(+)295 b Fn(t)24804 59525 y Fj(4)25625 59326
y Fl(\001)26289 56049 y Fg(0)26289 57997 y(B)26289 58662
y(B)26289 59326 y(B)26289 60034 y(@)27590 57400 y Fl(\000)p
Fm(2)28623 59392 y(3)27590 61384 y Fl(\000)p Fm(1)29605
56049 y Fg(1)29605 57997 y(C)29605 58662 y(C)29605 59326
y(C)29605 60034 y(A)p 31238 64139 V 1 0 0 TeXcolorrgb
31947 59326 a Ff(4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb
0 TeXcolorgray 33603 64139 V 12736 64183 20912 45 v 12736
74362 45 10180 v 13445 69605 a Fn(h)14194 69804 y Fj(5)14719
69605 y Fo(:)434 b Fn(X)474 b Fm(=)18447 66328 y Fg(0)18447
68276 y(B)18447 68940 y(B)18447 69605 y(B)18447 70313
y(@)19748 67679 y Fm(1)19748 69671 y(2)19748 71663 y(4)20731
66328 y Fg(1)20731 68276 y(C)20731 68940 y(C)20731 69605
y(C)20731 70313 y(A)21994 69605 y Fm(+)295 b Fn(t)23771
69804 y Fj(5)24592 69605 y Fl(\001)25256 66328 y Fg(0)25256
68276 y(B)25256 68940 y(B)25256 69605 y(B)25256 70313
y(@)27590 67679 y Fm(1)27590 69671 y(2)26557 71663 y
Fl(\000)p Fm(3)28572 66328 y Fg(1)28572 68276 y(C)28572
68940 y(C)28572 69605 y(C)28572 70313 y(A)p 31238 74362
V 33603 74362 V 12736 74406 20912 45 v 47992 7823 a Fi(___/1)p
1 0 0 TeXcolorrgb 47990 9815 a Fh(A)-31 b(G)369 b(3.4)p
0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 0
TeXcolorgray 24421 81281 a Fo(12)p 0 TeXcolorgray eop
end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray -2331 1493 54804 45 v -2331 6921 a Fp(A)-60
b(G)479 b(3.4)f(-)g(19)g(P)-60 b(arallelit\344t)478 b(v)-60
b(on)477 b(Geraden)h(-)g(O)-60 b(A)479 b(-)f(Matura)g(2016/17)-2617
9944 y(-)718 b(Haupttermin)p 0 TeXcolorgray -1391 13251
a Fo(19.)p 0 TeXcolorgray 651 w(Gegeb)36 b(en)433 b(sind)g(folgende)h
(P)-36 b(arameterdarstellungen)433 b(der)g(Geraden)g
Fn(g)481 b Fo(und)432 b Fn(h)p Fo(:)921 19486 y Fn(g)416
b Fm(:)803 b Fn(X)474 b Fm(=)6058 16210 y Fg(0)6058 18158
y(B)6058 18822 y(B)6058 19486 y(B)6058 20195 y(@)7358
17561 y Fm(1)7358 19553 y(1)7358 21544 y(1)8341 16210
y Fg(1)8341 18158 y(C)8341 18822 y(C)8341 19486 y(C)8341
20195 y(A)9605 19486 y Fm(+)294 b Fn(t)h Fl(\001)12341
16210 y Fg(0)12341 18158 y(B)12341 18822 y(B)12341 19486
y(B)12341 20195 y(@)13641 17561 y Fl(\000)p Fm(3)14674
19553 y(1)14674 21544 y(2)15657 16210 y Fg(1)15657 18158
y(C)15657 18822 y(C)15657 19486 y(C)15657 20195 y(A)19660
19486 y Fo(mit)434 b Fn(t)369 b Fl(2)f Fk(R)921 26128
y Fn(h)h Fm(:)803 b Fn(X)473 b Fm(=)6136 22851 y Fg(0)6136
24800 y(B)6136 25464 y(B)6136 26128 y(B)6136 26837 y(@)7437
24202 y Fm(3)7437 26194 y(1)7437 28186 y(1)8419 22851
y Fg(1)8419 24800 y(C)8419 25464 y(C)8419 26128 y(C)8419
26837 y(A)9683 26128 y Fm(+)295 b Fn(s)g Fl(\001)12562
22851 y Fg(0)12562 24800 y(B)12562 25464 y(B)12562 26128
y(B)12562 26837 y(@)14513 24202 y Fm(6)13862 26194 y
Fn(h)14611 26393 y Fd(y)13884 28186 y Fn(h)14633 28385
y Fd(z)15495 22851 y Fg(1)15495 24800 y(C)15495 25464
y(C)15495 26128 y(C)15495 26837 y(A)19499 26128 y Fo(mit)434
b Fn(s)368 b Fl(2)h Fk(R)921 32363 y Fo(Bestimme)511
b(die)f(K)-36 b(o)36 b(ordinaten)511 b Fn(h)17570 32562
y Fd(y)18633 32363 y Fo(und)e Fn(h)22060 32562 y Fd(z)23101
32363 y Fo(des)h(Ric)-36 b(h)g(tungsv)g(ektors)511 b(der)f(Geraden)g
Fn(h)g Fo(so,)921 34355 y(dass)434 b(die)f(Gerade)g Fn(h)g
Fo(zur)g(Geraden)g Fn(g)481 b Fo(parallel)435 b(ist!)p
1 0 0 TeXcolorrgb 921 38893 a Fn(h)1670 39092 y Fd(y)2591
38893 y Fm(=)368 b Fl(\000)p Fm(2)921 41438 y Fn(h)1670
41637 y Fd(z)2569 41438 y Fm(=)h Fl(\000)p Fm(4)p 0 0 0
TeXcolorrgb 1 0 0 TeXcolorrgb 0 TeXcolorgray 47992 13251
a Fi(___/1)p 1 0 0 TeXcolorrgb 47990 15243 a Fh(A)-31
b(G)369 b(3.4)p 0 0 0 TeXcolorrgb 1 0 0 TeXcolorrgb 0
TeXcolorgray -2331 45112 V 0 TeXcolorgray 24421 81281
a Fo(13)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
